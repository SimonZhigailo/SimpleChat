!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/dist/",n.w={},n(n.s=49)}([function(e,t,n){e.exports=n(1)(3)},function(e,t){e.exports=require("./vendor")},function(e,t){e.exports=require("util")},function(e,t,n){"use strict";var r=t.NAMESPACES={HTML:"http://www.w3.org/1999/xhtml",MATHML:"http://www.w3.org/1998/Math/MathML",SVG:"http://www.w3.org/2000/svg",XLINK:"http://www.w3.org/1999/xlink",XML:"http://www.w3.org/XML/1998/namespace",XMLNS:"http://www.w3.org/2000/xmlns/"};t.ATTRS={TYPE:"type",ACTION:"action",ENCODING:"encoding",PROMPT:"prompt",NAME:"name",COLOR:"color",FACE:"face",SIZE:"size"},t.DOCUMENT_MODE={NO_QUIRKS:"no-quirks",QUIRKS:"quirks",LIMITED_QUIRKS:"limited-quirks"};var i=t.TAG_NAMES={A:"a",ADDRESS:"address",ANNOTATION_XML:"annotation-xml",APPLET:"applet",AREA:"area",ARTICLE:"article",ASIDE:"aside",B:"b",BASE:"base",BASEFONT:"basefont",BGSOUND:"bgsound",BIG:"big",BLOCKQUOTE:"blockquote",BODY:"body",BR:"br",BUTTON:"button",CAPTION:"caption",CENTER:"center",CODE:"code",COL:"col",COLGROUP:"colgroup",DD:"dd",DESC:"desc",DETAILS:"details",DIALOG:"dialog",DIR:"dir",DIV:"div",DL:"dl",DT:"dt",EM:"em",EMBED:"embed",FIELDSET:"fieldset",FIGCAPTION:"figcaption",FIGURE:"figure",FONT:"font",FOOTER:"footer",FOREIGN_OBJECT:"foreignObject",FORM:"form",FRAME:"frame",FRAMESET:"frameset",H1:"h1",H2:"h2",H3:"h3",H4:"h4",H5:"h5",H6:"h6",HEAD:"head",HEADER:"header",HGROUP:"hgroup",HR:"hr",HTML:"html",I:"i",IMG:"img",IMAGE:"image",INPUT:"input",IFRAME:"iframe",KEYGEN:"keygen",LABEL:"label",LI:"li",LINK:"link",LISTING:"listing",MAIN:"main",MALIGNMARK:"malignmark",MARQUEE:"marquee",MATH:"math",MENU:"menu",MENUITEM:"menuitem",META:"meta",MGLYPH:"mglyph",MI:"mi",MO:"mo",MN:"mn",MS:"ms",MTEXT:"mtext",NAV:"nav",NOBR:"nobr",NOFRAMES:"noframes",NOEMBED:"noembed",NOSCRIPT:"noscript",OBJECT:"object",OL:"ol",OPTGROUP:"optgroup",OPTION:"option",P:"p",PARAM:"param",PLAINTEXT:"plaintext",PRE:"pre",RB:"rb",RP:"rp",RT:"rt",RTC:"rtc",RUBY:"ruby",S:"s",SCRIPT:"script",SECTION:"section",SELECT:"select",SOURCE:"source",SMALL:"small",SPAN:"span",STRIKE:"strike",STRONG:"strong",STYLE:"style",SUB:"sub",SUMMARY:"summary",SUP:"sup",TABLE:"table",TBODY:"tbody",TEMPLATE:"template",TEXTAREA:"textarea",TFOOT:"tfoot",TD:"td",TH:"th",THEAD:"thead",TITLE:"title",TR:"tr",TRACK:"track",TT:"tt",U:"u",UL:"ul",SVG:"svg",VAR:"var",WBR:"wbr",XMP:"xmp"},o=t.SPECIAL_ELEMENTS=Object.create(null);o[r.HTML]=Object.create(null),o[r.HTML][i.ADDRESS]=!0,o[r.HTML][i.APPLET]=!0,o[r.HTML][i.AREA]=!0,o[r.HTML][i.ARTICLE]=!0,o[r.HTML][i.ASIDE]=!0,o[r.HTML][i.BASE]=!0,o[r.HTML][i.BASEFONT]=!0,o[r.HTML][i.BGSOUND]=!0,o[r.HTML][i.BLOCKQUOTE]=!0,o[r.HTML][i.BODY]=!0,o[r.HTML][i.BR]=!0,o[r.HTML][i.BUTTON]=!0,o[r.HTML][i.CAPTION]=!0,o[r.HTML][i.CENTER]=!0,o[r.HTML][i.COL]=!0,o[r.HTML][i.COLGROUP]=!0,o[r.HTML][i.DD]=!0,o[r.HTML][i.DETAILS]=!0,o[r.HTML][i.DIR]=!0,o[r.HTML][i.DIV]=!0,o[r.HTML][i.DL]=!0,o[r.HTML][i.DT]=!0,o[r.HTML][i.EMBED]=!0,o[r.HTML][i.FIELDSET]=!0,o[r.HTML][i.FIGCAPTION]=!0,o[r.HTML][i.FIGURE]=!0,o[r.HTML][i.FOOTER]=!0,o[r.HTML][i.FORM]=!0,o[r.HTML][i.FRAME]=!0,o[r.HTML][i.FRAMESET]=!0,o[r.HTML][i.H1]=!0,o[r.HTML][i.H2]=!0,o[r.HTML][i.H3]=!0,o[r.HTML][i.H4]=!0,o[r.HTML][i.H5]=!0,o[r.HTML][i.H6]=!0,o[r.HTML][i.HEAD]=!0,o[r.HTML][i.HEADER]=!0,o[r.HTML][i.HGROUP]=!0,o[r.HTML][i.HR]=!0,o[r.HTML][i.HTML]=!0,o[r.HTML][i.IFRAME]=!0,o[r.HTML][i.IMG]=!0,o[r.HTML][i.INPUT]=!0,o[r.HTML][i.LI]=!0,o[r.HTML][i.LINK]=!0,o[r.HTML][i.LISTING]=!0,o[r.HTML][i.MAIN]=!0,o[r.HTML][i.MARQUEE]=!0,o[r.HTML][i.MENU]=!0,o[r.HTML][i.META]=!0,o[r.HTML][i.NAV]=!0,o[r.HTML][i.NOEMBED]=!0,o[r.HTML][i.NOFRAMES]=!0,o[r.HTML][i.NOSCRIPT]=!0,o[r.HTML][i.OBJECT]=!0,o[r.HTML][i.OL]=!0,o[r.HTML][i.P]=!0,o[r.HTML][i.PARAM]=!0,o[r.HTML][i.PLAINTEXT]=!0,o[r.HTML][i.PRE]=!0,o[r.HTML][i.SCRIPT]=!0,o[r.HTML][i.SECTION]=!0,o[r.HTML][i.SELECT]=!0,o[r.HTML][i.SOURCE]=!0,o[r.HTML][i.STYLE]=!0,o[r.HTML][i.SUMMARY]=!0,o[r.HTML][i.TABLE]=!0,o[r.HTML][i.TBODY]=!0,o[r.HTML][i.TD]=!0,o[r.HTML][i.TEMPLATE]=!0,o[r.HTML][i.TEXTAREA]=!0,o[r.HTML][i.TFOOT]=!0,o[r.HTML][i.TH]=!0,o[r.HTML][i.THEAD]=!0,o[r.HTML][i.TITLE]=!0,o[r.HTML][i.TR]=!0,o[r.HTML][i.TRACK]=!0,o[r.HTML][i.UL]=!0,o[r.HTML][i.WBR]=!0,o[r.HTML][i.XMP]=!0,o[r.MATHML]=Object.create(null),o[r.MATHML][i.MI]=!0,o[r.MATHML][i.MO]=!0,o[r.MATHML][i.MN]=!0,o[r.MATHML][i.MS]=!0,o[r.MATHML][i.MTEXT]=!0,o[r.MATHML][i.ANNOTATION_XML]=!0,o[r.SVG]=Object.create(null),o[r.SVG][i.TITLE]=!0,o[r.SVG][i.FOREIGN_OBJECT]=!0,o[r.SVG][i.DESC]=!0},function(e,t,n){"use strict";var r=n(14),i=Object.keys||function(e){var t=[];for(var n in e)t.push(n);return t};e.exports=h;var o=n(9);o.inherits=n(5);var s=n(30),a=n(27);o.inherits(h,s);for(var u=i(a.prototype),c=0;c<u.length;c++){var l=u[c];h.prototype[l]||(h.prototype[l]=a.prototype[l])}function h(e){if(!(this instanceof h))return new h(e);s.call(this,e),a.call(this,e),e&&!1===e.readable&&(this.readable=!1),e&&!1===e.writable&&(this.writable=!1),this.allowHalfOpen=!0,e&&!1===e.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",p)}function p(){this.allowHalfOpen||this._writableState.ended||r(f,this)}function f(e){e.end()}Object.defineProperty(h.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}}),h.prototype._destroy=function(e,t){this.push(null),this.end(),r(t,e)}},function(e,t,n){try{var r=n(2);if("function"!=typeof r.inherits)throw"";e.exports=r.inherits}catch(t){e.exports=n(57)}},function(e,t,n){var r=n(62),i=r.Buffer;function o(e,t){for(var n in e)t[n]=e[n]}function s(e,t,n){return i(e,t,n)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?e.exports=r:(o(r,t),t.Buffer=s),o(i,s),s.from=function(e,t,n){if("number"==typeof e)throw new TypeError("Argument must not be a number");return i(e,t,n)},s.alloc=function(e,t,n){if("number"!=typeof e)throw new TypeError("Argument must be a number");var r=i(e);return void 0!==t?"string"==typeof n?r.fill(t,n):r.fill(t):r.fill(0),r},s.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return i(e)},s.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return r.SlowBuffer(e)}},function(e,t){e.exports=require("stream")},function(e,t,n){!function(e,t,r,i,o,s,a,u,c,l,h,p,f,T){"use strict";var d=function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);function r(){this.constructor=e}e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},E=(n(24),function(){function e(e){this._doc=e}return e.prototype.renderToString=function(){return r.ɵgetDOM().getInnerHTML(this._doc)},e.prototype.getDocument=function(){return this._doc},e}());E.decorators=[{type:t.Injectable}],E.ctorParameters=function(){return[{type:void 0,decorators:[{type:t.Inject,args:[r.DOCUMENT]}]}]};var m=n(78),_=/^[a-zA-Z\-\+.]+:\/\//,A=function(){function e(){}return e.prototype.build=function(){return new m.XMLHttpRequest},e}();A.decorators=[{type:t.Injectable}],A.ctorParameters=function(){return[]};var g=function(){function e(){}return e.prototype.configureRequest=function(e){},e}();g.decorators=[{type:t.Injectable}],g.ctorParameters=function(){return[]};var y=function(){function e(e,t){var n=this;this.request=e,function(e){if(!_.test(e))throw new Error("URLs requested via Http on the server must be absolute. URL: "+e)}(e.url),this.response=new c.Observable(function(r){var i=null,o=!1,s=null,a=null,u=null,c=Zone.current.scheduleMacroTask("ZoneMacroTaskConnection.subscribe",function(){null!==u?r.error(u):(r.next(a),r.complete())},{},function(){return null},function(e){o&&(o=!1,s&&(s.unsubscribe(),s=null))});return function(r){i=r,o=!0,n.lastConnection=t.createConnection(e),s=n.lastConnection.response.subscribe(function(e){return a=e},function(e){if(!o)throw new Error("invoke twice");u=e,o=!1,i.invoke()},function(){if(!o)throw new Error("invoke twice");o=!1,i.invoke()})}(c),function(){o&&i&&(i.zone.cancelTask(i),o=!1),s&&(s.unsubscribe(),s=null)}})}return Object.defineProperty(e.prototype,"readyState",{get:function(){return this.lastConnection?this.lastConnection.readyState:a.ReadyState.Unsent},enumerable:!0,configurable:!0}),e}(),N=function(){function e(e){this.backend=e}return e.prototype.createConnection=function(e){return new y(e,this.backend)},e}();function S(e,t){var n=new N(e);return new a.Http(n,t)}var v=[{provide:a.Http,useFactory:S,deps:[a.XHRBackend,a.RequestOptions]},{provide:a.BrowserXhr,useClass:A},{provide:a.XSRFStrategy,useClass:g}],C=new t.InjectionToken("Server.INITIAL_CONFIG");function O(e){var t=h.parse(e);return{pathname:t.pathname||"",search:t.search||"",hash:t.hash||""}}var R=function(){function e(e,t){this._doc=e,this._path="/",this._search="",this._hash="",this._hashUpdate=new l.Subject;var n=t;if(n&&n.url){var r=O(n.url);this._path=r.pathname,this._search=r.search,this._hash=r.hash}}return e.prototype.getBaseHrefFromDOM=function(){return r.ɵgetDOM().getBaseHref(this._doc)},e.prototype.onPopState=function(e){},e.prototype.onHashChange=function(e){this._hashUpdate.subscribe(e)},Object.defineProperty(e.prototype,"pathname",{get:function(){return this._path},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"search",{get:function(){return this._search},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hash",{get:function(){return this._hash},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"url",{get:function(){return""+this.pathname+this.search+this.hash},enumerable:!0,configurable:!0}),e.prototype.setHash=function(e,t){var n=this;if(this._hash!==e){this._hash=e;var r,i=this.url;r=function(){return n._hashUpdate.next({type:"hashchange",oldUrl:t,newUrl:i})},Zone.current.scheduleMicroTask("scheduleMicrotask",r)}},e.prototype.replaceState=function(e,t,n){var r=this.url,i=O(n);this._path=i.pathname,this._search=i.search,this.setHash(i.hash,r)},e.prototype.pushState=function(e,t,n){this.replaceState(e,t,n)},e.prototype.forward=function(){throw new Error("Not implemented")},e.prototype.back=function(){throw new Error("Not implemented")},e}();R.decorators=[{type:t.Injectable}],R.ctorParameters=function(){return[{type:void 0,decorators:[{type:t.Inject,args:[r.DOCUMENT]}]},{type:void 0,decorators:[{type:t.Optional},{type:t.Inject,args:[C]}]}]};var b,M=n(24),I={class:"className",innerHtml:"innerHTML",readonly:"readOnly",tabindex:"tabIndex"},L=["attribs","x-attribsNamespace","x-attribsPrefix"];function P(e){return new Error("This method is not implemented in Parse5DomAdapter: "+e)}function k(e,t){for(var n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(r.name===t)return r}return null}var w=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return d(n,e),n.makeCurrent=function(){b=M.treeAdapters.htmlparser2,r.ɵsetRootDomAdapter(new n)},n.prototype.contains=function(e,t){for(var n=t;n;){if(n===e)return!0;n=n.parent}return!1},n.prototype.hasProperty=function(e,t){return D.indexOf(t)>-1},n.prototype.setProperty=function(e,t,n){"innerHTML"===t?this.setInnerHTML(e,n):"innerText"===t?this.setText(e,n):"className"===t?e.attribs.class=e.className=n:e[t]=n},n.prototype.getProperty=function(e,t){return e[t]},n.prototype.logError=function(e){console.error(e)},n.prototype.log=function(e){console.log(e)},n.prototype.logGroup=function(e){console.error(e)},n.prototype.logGroupEnd=function(){},Object.defineProperty(n.prototype,"attrToPropMap",{get:function(){return I},enumerable:!0,configurable:!0}),n.prototype.querySelector=function(e,t){return this.querySelectorAll(e,t)[0]||null},n.prototype.querySelectorAll=function(e,t){var n=this,r=[],i=function(e,t,r,o){var s=t.childNodes;if(s&&s.length>0)for(var a=0;a<s.length;a++){var u=s[a];n.elementMatches(u,r,o)&&e.push(u),i(e,u,r,o)}},o=new s.SelectorMatcher;return o.addSelectables(s.CssSelector.parse(t)),i(r,e,t,o),r},n.prototype.elementMatches=function(e,t,n){if(void 0===n&&(n=null),this.isElementNode(e)&&"*"===t)return!0;var r=!1;if(t&&"#"==t.charAt(0))r=this.getAttribute(e,"id")==t.substring(1);else if(t){n||(n=new s.SelectorMatcher).addSelectables(s.CssSelector.parse(t));var i=new s.CssSelector;if(i.setElement(this.tagName(e)),e.attribs)for(var o in e.attribs)i.addAttribute(o,e.attribs[o]);for(var a=this.classList(e),u=0;u<a.length;u++)i.addClassName(a[u]);n.match(i,function(e,t){r=!0})}return r},n.prototype.on=function(e,t,n){var r=e._eventListenersMap;r||(r={},e._eventListenersMap=r);var i=r[t]||[];r[t]=i.concat([n])},n.prototype.onAndCancel=function(e,t,n){return this.on(e,t,n),function(){!function(e,t){var n=e.indexOf(t);n>-1&&e.splice(n,1)}(e._eventListenersMap[t],n)}},n.prototype.dispatchEvent=function(e,t){if(t.target||(t.target=e),e._eventListenersMap){var n=e._eventListenersMap[t.type];if(n)for(var r=0;r<n.length;r++)n[r](t)}e.parent&&this.dispatchEvent(e.parent,t),e._window&&this.dispatchEvent(e._window,t)},n.prototype.createMouseEvent=function(e){return this.createEvent(e)},n.prototype.createEvent=function(e){var t={type:e,defaultPrevented:!1,preventDefault:function(){t.defaultPrevented=!0}};return t},n.prototype.preventDefault=function(e){e.returnValue=!1},n.prototype.isPrevented=function(e){return null!=e.returnValue&&!e.returnValue},n.prototype.getInnerHTML=function(e){return M.serialize(this.templateAwareRoot(e),{treeAdapter:b})},n.prototype.getTemplateContent=function(e){return null},n.prototype.getOuterHTML=function(e){var t=b.createDocumentFragment();return this.appendChild(t,e),M.serialize(t,{treeAdapter:b})},n.prototype.nodeName=function(e){return e.tagName},n.prototype.nodeValue=function(e){return e.nodeValue},n.prototype.type=function(e){throw P("type")},n.prototype.content=function(e){return e.childNodes[0]},n.prototype.firstChild=function(e){return e.firstChild},n.prototype.nextSibling=function(e){return e.nextSibling},n.prototype.parentElement=function(e){return e.parent},n.prototype.childNodes=function(e){return e.childNodes},n.prototype.childNodesAsList=function(e){for(var t=e.childNodes,n=new Array(t.length),r=0;r<t.length;r++)n[r]=t[r];return n},n.prototype.clearNodes=function(e){for(;e.childNodes.length>0;)this.remove(e.childNodes[0])},n.prototype.appendChild=function(e,t){this.remove(t),b.appendChild(this.templateAwareRoot(e),t)},n.prototype.removeChild=function(e,t){e.childNodes.indexOf(t)>-1&&this.remove(t)},n.prototype.remove=function(e){var t=e.parent;if(t){var n=t.childNodes.indexOf(e);t.childNodes.splice(n,1)}var r=e.previousSibling,i=e.nextSibling;return r&&(r.next=i),i&&(i.prev=r),e.prev=null,e.next=null,e.parent=null,e},n.prototype.insertBefore=function(e,t,n){this.remove(n),t?b.insertBefore(e,n,t):this.appendChild(e,n)},n.prototype.insertAllBefore=function(e,t,n){var r=this;n.forEach(function(n){return r.insertBefore(e,t,n)})},n.prototype.insertAfter=function(e,t,n){t.nextSibling?this.insertBefore(e,t.nextSibling,n):this.appendChild(e,n)},n.prototype.setInnerHTML=function(e,t){this.clearNodes(e);for(var n=M.parseFragment(t,{treeAdapter:b}),r=0;r<n.childNodes.length;r++)b.appendChild(e,n.childNodes[r])},n.prototype.getText=function(e,t){if(this.isTextNode(e))return e.data;if(this.isCommentNode(e))return t?"":e.data;if(!e.childNodes||0==e.childNodes.length)return"";for(var n="",r=0;r<e.childNodes.length;r++)n+=this.getText(e.childNodes[r],!0);return n},n.prototype.setText=function(e,t){this.isTextNode(e)||this.isCommentNode(e)?e.data=t:(this.clearNodes(e),""!==t&&b.insertText(e,t))},n.prototype.getValue=function(e){return e.value},n.prototype.setValue=function(e,t){e.value=t},n.prototype.getChecked=function(e){return e.checked},n.prototype.setChecked=function(e,t){e.checked=t},n.prototype.createComment=function(e){return b.createCommentNode(e)},n.prototype.createTemplate=function(e){var t=b.createElement("template","http://www.w3.org/1999/xhtml",[]),n=M.parseFragment(e,{treeAdapter:b});return b.setTemplateContent(t,n),t},n.prototype.createElement=function(e){return b.createElement(e,"http://www.w3.org/1999/xhtml",[])},n.prototype.createElementNS=function(e,t){return b.createElement(t,e,[])},n.prototype.createTextNode=function(e){var t=this.createComment(e);return t.type="text",t},n.prototype.createScriptTag=function(e,t){return b.createElement("script","http://www.w3.org/1999/xhtml",[{name:e,value:t}])},n.prototype.createStyleElement=function(e){var t=this.createElement("style");return this.setText(t,e),t},n.prototype.createShadowRoot=function(e){return e.shadowRoot=b.createDocumentFragment(),e.shadowRoot.parent=e,e.shadowRoot},n.prototype.getShadowRoot=function(e){return e.shadowRoot},n.prototype.getHost=function(e){return e.host},n.prototype.getDistributedNodes=function(e){throw P("getDistributedNodes")},n.prototype.clone=function(e){var t=function(e){var n=Object.create(Object.getPrototypeOf(e));for(var r in e){var i=Object.getOwnPropertyDescriptor(e,r);i&&"value"in i&&"object"!=typeof i.value&&(n[r]=e[r])}n.parent=null,n.prev=null,n.next=null,n.children=null,L.forEach(function(t){if(null!=e[t])for(var r in n[t]={},e[t])n[t][r]=e[t][r]});var o=e.children;if(o){for(var s=new Array(o.length),a=0;a<o.length;a++){var u=o[a],c=t(u);s[a]=c,a>0&&(c.prev=s[a-1],s[a-1].next=c),c.parent=n}n.children=s}return n};return t(e)},n.prototype.getElementsByClassName=function(e,t){return this.querySelectorAll(e,"."+t)},n.prototype.getElementsByTagName=function(e,t){return this.querySelectorAll(e,t)},n.prototype.classList=function(e){var t=null,n=e.attribs;return n&&null!=n.class&&(t=n.class),t?t.trim().split(/\s+/g):[]},n.prototype.addClass=function(e,t){var n=this.classList(e),r=n.indexOf(t);-1==r&&(n.push(t),e.attribs.class=e.className=n.join(" "))},n.prototype.removeClass=function(e,t){var n=this.classList(e),r=n.indexOf(t);r>-1&&(n.splice(r,1),e.attribs.class=e.className=n.join(" "))},n.prototype.hasClass=function(e,t){return this.classList(e).indexOf(t)>-1},n.prototype.hasStyle=function(e,t,n){var r=this.getStyle(e,t)||"";return n?r==n:r.length>0},n.prototype._readStyleAttribute=function(e){var t={},n=e.attribs;if(n&&null!=n.style)for(var r=n.style,i=r.split(/;+/g),o=0;o<i.length;o++)if(i[o].length>0){var s=i[o],a=s.indexOf(":");if(-1===a)throw new Error("Invalid CSS style: "+s);t[s.substr(0,a).trim()]=s.substr(a+1).trim()}return t},n.prototype._writeStyleAttribute=function(e,t){var n="";for(var r in t){var i=t[r];i&&(n+=r+":"+t[r]+";")}e.attribs.style=n},n.prototype.setStyle=function(e,t,n){var r=this._readStyleAttribute(e);r[t]=n,this._writeStyleAttribute(e,r)},n.prototype.removeStyle=function(e,t){this.setStyle(e,t,null)},n.prototype.getStyle=function(e,t){var n=this._readStyleAttribute(e);return n.hasOwnProperty(t)?n[t]:""},n.prototype.tagName=function(e){return"style"==e.tagName?"STYLE":e.tagName},n.prototype.attributeMap=function(e){for(var t=new Map,n=b.getAttrList(e),r=0;r<n.length;r++){var i=n[r];t.set(i.name,i.value)}return t},n.prototype.hasAttribute=function(e,t){return e.attribs&&null!=e.attribs[t]},n.prototype.hasAttributeNS=function(e,t,n){return this.hasAttribute(e,n)},n.prototype.getAttribute=function(e,t){return this.hasAttribute(e,t)?e.attribs[t]:null},n.prototype.getAttributeNS=function(e,t,n){return this.getAttribute(e,n)},n.prototype.setAttribute=function(e,t,n){t&&(e.attribs[t]=n,"class"===t&&(e.className=n))},n.prototype.setAttributeNS=function(e,t,n,r){this.setAttribute(e,n,r)},n.prototype.removeAttribute=function(e,t){t&&delete e.attribs[t]},n.prototype.removeAttributeNS=function(e,t,n){throw"not implemented"},n.prototype.templateAwareRoot=function(e){return this.isTemplateElement(e)?b.getTemplateContent(e):e},n.prototype.createHtmlDocument=function(){var e=b.createDocument();e.title="fakeTitle";var t=b.createElement("head",null,[]),n=b.createElement("body","http://www.w3.org/1999/xhtml",[]);return this.appendChild(e,t),this.appendChild(e,n),e.head=t,e.body=n,e._window={},e},n.prototype.getBoundingClientRect=function(e){return{left:0,top:0,width:0,height:0}},n.prototype.getTitle=function(e){return this.getText(this.getTitleNode(e))||""},n.prototype.setTitle=function(e,t){this.setText(this.getTitleNode(e),t||"")},n.prototype.isTemplateElement=function(e){return this.isElementNode(e)&&"template"===this.tagName(e)},n.prototype.isTextNode=function(e){return b.isTextNode(e)},n.prototype.isCommentNode=function(e){return b.isCommentNode(e)},n.prototype.isElementNode=function(e){return!!e&&b.isElementNode(e)},n.prototype.hasShadowRoot=function(e){return null!=e.shadowRoot},n.prototype.isShadowRoot=function(e){return this.getShadowRoot(e)==e},n.prototype.importIntoDoc=function(e){return this.clone(e)},n.prototype.adoptNode=function(e){return e},n.prototype.getHref=function(e){return this.getAttribute(e,"href")},n.prototype.resolveAndSetHref=function(e,t,n){e.href=null==n?t:t+"/../"+n},n.prototype._buildRules=function(e,t){for(var n=[],r=0;r<e.length;r++){var i=e[r],o={};if(o.cssText=t,o.style={content:"",cssText:""},"rule"==i.type){if(o.type=1,o.selectorText=i.selectors.join(", ".replace(/\s{2,}/g," ").replace(/\s*~\s*/g," ~ ").replace(/\s*\+\s*/g," + ").replace(/\s*>\s*/g," > ").replace(/\[(\w+)=(\w+)\]/g,'[$1="$2"]')),null==i.declarations)continue;for(var s=0;s<i.declarations.length;s++){var a=i.declarations[s];o.style=a.property[a.value],o.style.cssText+=a.property+": "+a.value+";"}}else"media"==i.type&&(o.type=4,o.media={mediaText:i.media},i.rules&&(o.cssRules=this._buildRules(i.rules)));n.push(o)}return n},n.prototype.supportsDOMEvents=function(){return!1},n.prototype.supportsNativeShadowDOM=function(){return!1},n.prototype.getGlobalEventTarget=function(e,t){return"window"==t?e._window:"document"==t?e:"body"==t?e.body:void 0},n.prototype.getBaseHref=function(e){var t=this.querySelector(e,"base"),n="";return t&&(n=this.getHref(t)),null==n?null:n},n.prototype.resetBaseElement=function(){throw"not implemented"},n.prototype.getHistory=function(){throw"not implemented"},n.prototype.getLocation=function(){throw"not implemented"},n.prototype.getUserAgent=function(){return"Fake user agent"},n.prototype.getData=function(e,t){return this.getAttribute(e,"data-"+t)},n.prototype.getComputedStyle=function(e){throw"not implemented"},n.prototype.setData=function(e,t,n){this.setAttribute(e,"data-"+t,n)},n.prototype.setGlobalVar=function(e,n){r.ɵsetValueOnPath(t.ɵglobal,e,n)},n.prototype.supportsWebAnimation=function(){return!1},n.prototype.performanceNow=function(){return Date.now()},n.prototype.getAnimationPrefix=function(){return""},n.prototype.getTransitionEnd=function(){return"transitionend"},n.prototype.supportsAnimation=function(){return!0},n.prototype.replaceChild=function(e,t,n){throw new Error("not implemented")},n.prototype.parse=function(e){throw new Error("not implemented")},n.prototype.invoke=function(e,t,n){throw new Error("not implemented")},n.prototype.getEventKey=function(e){throw new Error("not implemented")},n.prototype.supportsCookies=function(){return!1},n.prototype.getCookie=function(e){throw new Error("not implemented")},n.prototype.setCookie=function(e,t){throw new Error("not implemented")},n.prototype.animate=function(e,t,n){throw new Error("not implemented")},n.prototype.getTitleNode=function(e){var t=this.querySelector(e,"title");return t||(t=this.createElement("title"),this.appendChild(this.querySelector(e,"head"),t)),t},n}(r.ɵDomAdapter),D=["webkitEntries","incremental","webkitdirectory","selectionDirection","selectionEnd","selectionStart","labels","validationMessage","validity","willValidate","width","valueAsNumber","valueAsDate","value","useMap","defaultValue","type","step","src","size","required","readOnly","placeholder","pattern","name","multiple","min","minLength","maxLength","max","list","indeterminate","height","formTarget","formNoValidate","formMethod","formEnctype","formAction","files","form","disabled","dirName","checked","defaultChecked","autofocus","autocomplete","alt","align","accept","onautocompleteerror","onautocomplete","onwaiting","onvolumechange","ontoggle","ontimeupdate","onsuspend","onsubmit","onstalled","onshow","onselect","onseeking","onseeked","onscroll","onresize","onreset","onratechange","onprogress","onplaying","onplay","onpause","onmousewheel","onmouseup","onmouseover","onmouseout","onmousemove","onmouseleave","onmouseenter","onmousedown","onloadstart","onloadedmetadata","onloadeddata","onload","onkeyup","onkeypress","onkeydown","oninvalid","oninput","onfocus","onerror","onended","onemptied","ondurationchange","ondrop","ondragstart","ondragover","ondragleave","ondragenter","ondragend","ondrag","ondblclick","oncuechange","oncontextmenu","onclose","onclick","onchange","oncanplaythrough","oncanplay","oncancel","onblur","onabort","spellcheck","isContentEditable","contentEditable","outerText","innerText","accessKey","hidden","webkitdropzone","draggable","tabIndex","dir","translate","lang","title","childElementCount","lastElementChild","firstElementChild","children","onwebkitfullscreenerror","onwebkitfullscreenchange","nextElementSibling","previousElementSibling","onwheel","onselectstart","onsearch","onpaste","oncut","oncopy","onbeforepaste","onbeforecut","onbeforecopy","shadowRoot","dataset","classList","className","outerHTML","innerHTML","scrollHeight","scrollWidth","scrollTop","scrollLeft","clientHeight","clientWidth","clientTop","clientLeft","offsetParent","offsetHeight","offsetWidth","offsetTop","offsetLeft","localName","prefix","namespaceURI","id","style","attributes","tagName","parentElement","textContent","baseURI","ownerDocument","nextSibling","previousSibling","lastChild","firstChild","childNodes","parentNode","nodeType","nodeValue","nodeName","closure_lm_714617","__jsaction"],H=[],U=function(){function e(e,t,n){this.ngZone=e,this.document=t,this.sharedStylesHost=n,this.rendererByCompId=new Map,this.schema=new s.DomElementSchemaRegistry,this.defaultRenderer=new x(t,e,this.schema)}return e.prototype.createRenderer=function(e,n){if(!e||!n)return this.defaultRenderer;switch(n.encapsulation){case t.ViewEncapsulation.Native:case t.ViewEncapsulation.Emulated:var i=this.rendererByCompId.get(n.id);return i||(i=new G(this.document,this.ngZone,this.sharedStylesHost,this.schema,n),this.rendererByCompId.set(n.id,i)),i.applyToHost(e),i;case t.ViewEncapsulation.Native:throw new Error("Native encapsulation is not supported on the server!");default:if(!this.rendererByCompId.has(n.id)){var o=r.ɵflattenStyles(n.id,n.styles,[]);this.sharedStylesHost.addStyles(o),this.rendererByCompId.set(n.id,this.defaultRenderer)}return this.defaultRenderer}},e}();U.decorators=[{type:t.Injectable}],U.ctorParameters=function(){return[{type:t.NgZone},{type:void 0,decorators:[{type:t.Inject,args:[r.DOCUMENT]}]},{type:r.ɵSharedStylesHost}]};var x=function(){function e(e,t,n){this.document=e,this.ngZone=t,this.schema=n,this.data=Object.create(null)}return e.prototype.destroy=function(){},e.prototype.createElement=function(e,t,n){return t?r.ɵgetDOM().createElementNS(r.ɵNAMESPACE_URIS[t],e):r.ɵgetDOM().createElement(e)},e.prototype.createComment=function(e,t){return r.ɵgetDOM().createComment(e)},e.prototype.createText=function(e,t){return r.ɵgetDOM().createTextNode(e)},e.prototype.appendChild=function(e,t){r.ɵgetDOM().appendChild(e,t)},e.prototype.insertBefore=function(e,t,n){e&&r.ɵgetDOM().insertBefore(e,n,t)},e.prototype.removeChild=function(e,t){e&&r.ɵgetDOM().removeChild(e,t)},e.prototype.selectRootElement=function(e,t){var n;if("string"==typeof e){if(!(n=r.ɵgetDOM().querySelector(this.document,e)))throw new Error('The selector "'+e+'" did not match any elements')}else n=e;return r.ɵgetDOM().clearNodes(n),n},e.prototype.parentNode=function(e){return r.ɵgetDOM().parentElement(e)},e.prototype.nextSibling=function(e){return r.ɵgetDOM().nextSibling(e)},e.prototype.setAttribute=function(e,t,n,i){i?r.ɵgetDOM().setAttributeNS(e,r.ɵNAMESPACE_URIS[i],i+":"+t,n):r.ɵgetDOM().setAttribute(e,t,n)},e.prototype.removeAttribute=function(e,t,n){n?r.ɵgetDOM().removeAttributeNS(e,r.ɵNAMESPACE_URIS[n],t):r.ɵgetDOM().removeAttribute(e,t)},e.prototype.addClass=function(e,t){r.ɵgetDOM().addClass(e,t)},e.prototype.removeClass=function(e,t){r.ɵgetDOM().removeClass(e,t)},e.prototype.setStyle=function(e,t,n,i){r.ɵgetDOM().setStyle(e,t,n)},e.prototype.removeStyle=function(e,t,n){r.ɵgetDOM().removeStyle(e,t)},e.prototype._isSafeToReflectProperty=function(e,t){return this.schema.securityContext(e,t,!0)===this.schema.securityContext(e,t,!1)},e.prototype.setProperty=function(e,t,n){F(t,"property"),r.ɵgetDOM().setProperty(e,t,n);var i=e.tagName.toLowerCase();null!=n&&("number"==typeof n||"string"==typeof n)&&this.schema.hasElement(i,H)&&this.schema.hasProperty(i,t,H)&&this._isSafeToReflectProperty(i,t)&&this.setAttribute(e,t,n.toString())},e.prototype.setValue=function(e,t){r.ɵgetDOM().setText(e,t)},e.prototype.listen=function(e,t,n){var i=this;F(t,"listener");var o="string"==typeof e?r.ɵgetDOM().getGlobalEventTarget(this.document,e):e,s=function(e){return i.ngZone.runGuarded(function(){return n(e)})};return this.ngZone.runOutsideAngular(function(){return r.ɵgetDOM().onAndCancel(o,t,s)})},e}(),B="@".charCodeAt(0);function F(e,t){if(e.charCodeAt(0)===B)throw new Error("Found the synthetic "+t+" "+e+'. Please include either "BrowserAnimationsModule" or "NoopAnimationsModule" in your application.')}var G=function(e){function t(t,n,i,o,s){var a=e.call(this,t,n,o)||this;a.component=s;var u=r.ɵflattenStyles(s.id,s.styles,[]);return i.addStyles(u),a.contentAttr=r.ɵshimContentAttribute(s.id),a.hostAttr=r.ɵshimHostAttribute(s.id),a}return d(t,e),t.prototype.applyToHost=function(t){e.prototype.setAttribute.call(this,t,this.hostAttr,"")},t.prototype.createElement=function(t,n){var r=e.prototype.createElement.call(this,t,n);return e.prototype.setAttribute.call(this,r,this.contentAttr,""),r},t}(x),K=function(e){function t(t,n){var i=e.call(this)||this;return i.doc=t,i.transitionId=n,i.head=null,i.head=r.ɵgetDOM().getElementsByTagName(t,"head")[0],i}return d(t,e),t.prototype._addStyle=function(e){var t=r.ɵgetDOM(),n=t.createElement("style");t.setText(n,e),this.transitionId&&t.setAttribute(n,"ng-transition",this.transitionId),t.appendChild(this.head,n)},t.prototype.onStylesAdded=function(e){var t=this;e.forEach(function(e){return t._addStyle(e)})},t}(r.ɵSharedStylesHost);K.decorators=[{type:t.Injectable}],K.ctorParameters=function(){return[{type:void 0,decorators:[{type:t.Inject,args:[r.DOCUMENT]}]},{type:void 0,decorators:[{type:t.Optional},{type:t.Inject,args:[r.ɵTRANSITION_ID]}]}]};var j=[{provide:r.DOCUMENT,useFactory:function(e){var t,n,i,o=e.get(C,null);return o&&o.document?(t=o.document,n=M.parse(t,{treeAdapter:M.treeAdapters.htmlparser2}),i=k(n,"html"),n.head=k(i,"head"),n.body=k(i,"body"),n._window={},n):r.ɵgetDOM().createHtmlDocument()},deps:[t.Injector]},{provide:t.PLATFORM_ID,useValue:o.ɵPLATFORM_SERVER_ID},{provide:t.PLATFORM_INITIALIZER,useFactory:function(e){return function(){w.makeCurrent()}},multi:!0,deps:[t.Injector]},{provide:o.PlatformLocation,useClass:R},E,{provide:t.ɵALLOW_MULTIPLE_PLATFORMS,useValue:!0}];function Y(e,t,n){return new u.ɵAnimationRendererFactory(e,t,n)}var W=[U,{provide:t.RendererFactory2,useFactory:Y,deps:[U,i.ɵAnimationEngine,t.NgZone]},K,{provide:r.ɵSharedStylesHost,useExisting:K}],q=function(){};q.decorators=[{type:t.NgModule,args:[{exports:[r.BrowserModule],imports:[a.HttpModule,u.NoopAnimationsModule],providers:[W,v,{provide:t.Testability,useValue:null}]}]}],q.ctorParameters=function(){return[]};var z=t.createPlatformFactory(t.platformCore,"server",j),X=t.createPlatformFactory(s.platformCoreDynamic,"serverDynamic",j);function V(e,t){var n=t.extraProviders?t.extraProviders:[];return e([{provide:C,useValue:{document:t.document,url:t.url}},n])}function Q(e,n){return n.then(function(n){var i=n.injector.get(r.ɵTRANSITION_ID,null);if(!i)throw new Error("renderModule[Factory]() requires the use of BrowserModule.withServerTransition() to ensure\nthe server-rendered app can be properly bootstrapped into a client app.");var o=n.injector.get(t.ApplicationRef);return T.toPromise.call(f.first.call(p.filter.call(o.isStable,function(e){return e}))).then(function(){var t=e.injector.get(E).renderToString();return e.destroy(),t})})}n(24);var $=new t.Version("4.1.2");e.PlatformState=E,e.ServerModule=q,e.platformDynamicServer=X,e.platformServer=z,e.INITIAL_CONFIG=C,e.renderModule=function(e,t){var n=V(X,t);return Q(n,n.bootstrapModule(e))},e.renderModuleFactory=function(e,t){var n=V(z,t);return Q(n,n.bootstrapModuleFactory(e))},e.VERSION=$,e.ɵINTERNAL_SERVER_PLATFORM_PROVIDERS=j,e.ɵSERVER_RENDER_PROVIDERS=W,e.ɵServerRendererFactory2=U,e.ɵf=v,e.ɵc=A,e.ɵd=g,e.ɵe=S,e.ɵa=Y,e.ɵb=K,Object.defineProperty(e,"__esModule",{value:!0})}(t,n(0),n(43),n(42),n(96),n(95),n(13),n(94),n(45),n(93),n(41),n(92),n(44),n(91))},function(e,t){function n(e){return Object.prototype.toString.call(e)}t.isArray=function(e){return Array.isArray?Array.isArray(e):"[object Array]"===n(e)},t.isBoolean=function(e){return"boolean"==typeof e},t.isNull=function(e){return null===e},t.isNullOrUndefined=function(e){return null==e},t.isNumber=function(e){return"number"==typeof e},t.isString=function(e){return"string"==typeof e},t.isSymbol=function(e){return"symbol"==typeof e},t.isUndefined=function(e){return void 0===e},t.isRegExp=function(e){return"[object RegExp]"===n(e)},t.isObject=function(e){return"object"==typeof e&&null!==e},t.isDate=function(e){return"[object Date]"===n(e)},t.isError=function(e){return"[object Error]"===n(e)||e instanceof Error},t.isFunction=function(e){return"function"==typeof e},t.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e},t.isBuffer=Buffer.isBuffer},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Trace=0]="Trace",e[e.Information=1]="Information",e[e.Warning=2]="Warning",e[e.Error=3]="Error",e[e.None=4]="None"}(t.LogLevel||(t.LogLevel={}))},function(e,t,n){"use strict";t.REPLACEMENT_CHARACTER="�",t.CODE_POINTS={EOF:-1,NULL:0,TABULATION:9,CARRIAGE_RETURN:13,LINE_FEED:10,FORM_FEED:12,SPACE:32,EXCLAMATION_MARK:33,QUOTATION_MARK:34,NUMBER_SIGN:35,AMPERSAND:38,APOSTROPHE:39,HYPHEN_MINUS:45,SOLIDUS:47,DIGIT_0:48,DIGIT_9:57,SEMICOLON:59,LESS_THAN_SIGN:60,EQUALS_SIGN:61,GREATER_THAN_SIGN:62,QUESTION_MARK:63,LATIN_CAPITAL_A:65,LATIN_CAPITAL_F:70,LATIN_CAPITAL_X:88,LATIN_CAPITAL_Z:90,GRAVE_ACCENT:96,LATIN_SMALL_A:97,LATIN_SMALL_F:102,LATIN_SMALL_X:120,LATIN_SMALL_Z:122,REPLACEMENT_CHARACTER:65533},t.CODE_POINT_SEQUENCES={DASH_DASH_STRING:[45,45],DOCTYPE_STRING:[68,79,67,84,89,80,69],CDATA_START_STRING:[91,67,68,65,84,65,91],CDATA_END_STRING:[93,93,62],SCRIPT_STRING:[115,99,114,105,112,116],PUBLIC_STRING:[80,85,66,76,73,67],SYSTEM_STRING:[83,89,83,84,69,77]}},function(e,t,n){"use strict";var r=n(89),i=n(88),o=n(11),s=n(87),a=o.CODE_POINTS,u=o.CODE_POINT_SEQUENCES,c={0:65533,13:13,128:8364,129:129,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,141:141,142:381,143:143,144:144,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,157:157,158:382,159:376},l="DATA_STATE";function h(e){return e===a.SPACE||e===a.LINE_FEED||e===a.TABULATION||e===a.FORM_FEED}function p(e){return e>=a.DIGIT_0&&e<=a.DIGIT_9}function f(e){return e>=a.LATIN_CAPITAL_A&&e<=a.LATIN_CAPITAL_Z}function T(e){return e>=a.LATIN_SMALL_A&&e<=a.LATIN_SMALL_Z}function d(e){return T(e)||f(e)}function E(e,t){return p(e)||t&&(e>=a.LATIN_CAPITAL_A&&e<=a.LATIN_CAPITAL_F||e>=a.LATIN_SMALL_A&&e<=a.LATIN_SMALL_F)}function m(e){return e+32}function _(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(e>>>10&1023|55296)+String.fromCharCode(56320|1023&e))}function A(e){return String.fromCharCode(m(e))}function g(e,t){for(var n=s[++e],r=++e,i=r+n-1;r<=i;){var o=r+i>>>1,a=s[o];if(a<t)r=o+1;else{if(!(a>t))return s[o+n];i=o-1}}return-1}var y=e.exports=function(e){this.preprocessor=new r,this.tokenQueue=[],this.allowCDATA=!1,this.state=l,this.returnState="",this.tempBuff=[],this.additionalAllowedCp=void 0,this.lastStartTagName="",this.consumedAfterSnapshot=-1,this.active=!1,this.currentCharacterToken=null,this.currentToken=null,this.currentAttr=null,e&&e.locationInfo&&i.assign(this)};y.CHARACTER_TOKEN="CHARACTER_TOKEN",y.NULL_CHARACTER_TOKEN="NULL_CHARACTER_TOKEN",y.WHITESPACE_CHARACTER_TOKEN="WHITESPACE_CHARACTER_TOKEN",y.START_TAG_TOKEN="START_TAG_TOKEN",y.END_TAG_TOKEN="END_TAG_TOKEN",y.COMMENT_TOKEN="COMMENT_TOKEN",y.DOCTYPE_TOKEN="DOCTYPE_TOKEN",y.EOF_TOKEN="EOF_TOKEN",y.HIBERNATION_TOKEN="HIBERNATION_TOKEN",y.MODE=y.prototype.MODE={DATA:l,RCDATA:"RCDATA_STATE",RAWTEXT:"RAWTEXT_STATE",SCRIPT_DATA:"SCRIPT_DATA_STATE",PLAINTEXT:"PLAINTEXT_STATE"},y.getTokenAttr=function(e,t){for(var n=e.attrs.length-1;n>=0;n--)if(e.attrs[n].name===t)return e.attrs[n].value;return null},y.prototype.getNextToken=function(){for(;!this.tokenQueue.length&&this.active;){this._hibernationSnapshot();var e=this._consume();this._ensureHibernation()||this[this.state](e)}return this.tokenQueue.shift()},y.prototype.write=function(e,t){this.active=!0,this.preprocessor.write(e,t)},y.prototype.insertHtmlAtCurrentPos=function(e){this.active=!0,this.preprocessor.insertHtmlAtCurrentPos(e)},y.prototype._hibernationSnapshot=function(){this.consumedAfterSnapshot=0},y.prototype._ensureHibernation=function(){if(this.preprocessor.endOfChunkHit){for(;this.consumedAfterSnapshot>0;this.consumedAfterSnapshot--)this.preprocessor.retreat();return this.active=!1,this.tokenQueue.push({type:y.HIBERNATION_TOKEN}),!0}return!1},y.prototype._consume=function(){return this.consumedAfterSnapshot++,this.preprocessor.advance()},y.prototype._unconsume=function(){this.consumedAfterSnapshot--,this.preprocessor.retreat()},y.prototype._unconsumeSeveral=function(e){for(;e--;)this._unconsume()},y.prototype._reconsumeInState=function(e){this.state=e,this._unconsume()},y.prototype._consumeSubsequentIfMatch=function(e,t,n){for(var r=0,i=!0,o=e.length,s=0,u=t,c=void 0;s<o;s++){if(s>0&&(u=this._consume(),r++),u===a.EOF){i=!1;break}if(u!==(c=e[s])&&(n||u!==m(c))){i=!1;break}}return i||this._unconsumeSeveral(r),i},y.prototype._lookahead=function(){var e=this._consume();return this._unconsume(),e},y.prototype.isTempBufferEqualToScriptString=function(){if(this.tempBuff.length!==u.SCRIPT_STRING.length)return!1;for(var e=0;e<this.tempBuff.length;e++)if(this.tempBuff[e]!==u.SCRIPT_STRING[e])return!1;return!0},y.prototype._createStartTagToken=function(){this.currentToken={type:y.START_TAG_TOKEN,tagName:"",selfClosing:!1,attrs:[]}},y.prototype._createEndTagToken=function(){this.currentToken={type:y.END_TAG_TOKEN,tagName:"",attrs:[]}},y.prototype._createCommentToken=function(){this.currentToken={type:y.COMMENT_TOKEN,data:""}},y.prototype._createDoctypeToken=function(e){this.currentToken={type:y.DOCTYPE_TOKEN,name:e,forceQuirks:!1,publicId:null,systemId:null}},y.prototype._createCharacterToken=function(e,t){this.currentCharacterToken={type:e,chars:t}},y.prototype._createAttr=function(e){this.currentAttr={name:e,value:""}},y.prototype._isDuplicateAttr=function(){return null!==y.getTokenAttr(this.currentToken,this.currentAttr.name)},y.prototype._leaveAttrName=function(e){this.state=e,this._isDuplicateAttr()||this.currentToken.attrs.push(this.currentAttr)},y.prototype._leaveAttrValue=function(e){this.state=e},y.prototype._isAppropriateEndTagToken=function(){return this.lastStartTagName===this.currentToken.tagName},y.prototype._emitCurrentToken=function(){this._emitCurrentCharacterToken(),this.currentToken.type===y.START_TAG_TOKEN&&(this.lastStartTagName=this.currentToken.tagName),this.tokenQueue.push(this.currentToken),this.currentToken=null},y.prototype._emitCurrentCharacterToken=function(){this.currentCharacterToken&&(this.tokenQueue.push(this.currentCharacterToken),this.currentCharacterToken=null)},y.prototype._emitEOFToken=function(){this._emitCurrentCharacterToken(),this.tokenQueue.push({type:y.EOF_TOKEN})},y.prototype._appendCharToCurrentCharacterToken=function(e,t){this.currentCharacterToken&&this.currentCharacterToken.type!==e&&this._emitCurrentCharacterToken(),this.currentCharacterToken?this.currentCharacterToken.chars+=t:this._createCharacterToken(e,t)},y.prototype._emitCodePoint=function(e){var t=y.CHARACTER_TOKEN;h(e)?t=y.WHITESPACE_CHARACTER_TOKEN:e===a.NULL&&(t=y.NULL_CHARACTER_TOKEN),this._appendCharToCurrentCharacterToken(t,_(e))},y.prototype._emitSeveralCodePoints=function(e){for(var t=0;t<e.length;t++)this._emitCodePoint(e[t])},y.prototype._emitChar=function(e){this._appendCharToCurrentCharacterToken(y.CHARACTER_TOKEN,e)},y.prototype._consumeNumericEntity=function(e){var t="",n=void 0;do{t+=_(this._consume()),n=this._lookahead()}while(n!==a.EOF&&E(n,e));this._lookahead()===a.SEMICOLON&&this._consume();var r,i=parseInt(t,e?16:10),o=c[i];return o||((r=i)>=55296&&r<=57343||r>1114111?a.REPLACEMENT_CHARACTER:i)},y.prototype._consumeNamedEntity=function(e){for(var t=null,n=0,r=null,i=0,o=!1,u=0;u>-1;){var c=s[u],l=c<7;if(l&&1&c&&(t=2&c?[s[++u],s[++u]]:[s[++u]],n=i,r===a.SEMICOLON)){o=!0;break}if(i++,(r=this._consume())===a.EOF)break;u=l?4&c?g(u,r):-1:r===c?++u:-1}if(t){if(!o&&(this._unconsumeSeveral(i-n),e)){var h=this._lookahead();if(h===a.EQUALS_SIGN||function(e){return d(e)||p(e)}(h))return this._unconsumeSeveral(n),null}return t}return this._unconsumeSeveral(i),null},y.prototype._consumeCharacterReference=function(e,t){if(h(e)||e===a.GREATER_THAN_SIGN||e===a.AMPERSAND||e===this.additionalAllowedCp||e===a.EOF)return this._unconsume(),null;if(e===a.NUMBER_SIGN){var n=!1,r=this._lookahead();return r!==a.LATIN_SMALL_X&&r!==a.LATIN_CAPITAL_X||(this._consume(),n=!0),(r=this._lookahead())!==a.EOF&&E(r,n)?[this._consumeNumericEntity(n)]:(this._unconsumeSeveral(n?2:1),null)}return this._unconsume(),this._consumeNamedEntity(t)};var N=y.prototype;N.DATA_STATE=function(e){this.preprocessor.dropParsedChunk(),e===a.AMPERSAND?this.state="CHARACTER_REFERENCE_IN_DATA_STATE":e===a.LESS_THAN_SIGN?this.state="TAG_OPEN_STATE":e===a.NULL?this._emitCodePoint(e):e===a.EOF?this._emitEOFToken():this._emitCodePoint(e)},N.CHARACTER_REFERENCE_IN_DATA_STATE=function(e){this.additionalAllowedCp=void 0;var t=this._consumeCharacterReference(e,!1);this._ensureHibernation()||(t?this._emitSeveralCodePoints(t):this._emitChar("&"),this.state=l)},N.RCDATA_STATE=function(e){this.preprocessor.dropParsedChunk(),e===a.AMPERSAND?this.state="CHARACTER_REFERENCE_IN_RCDATA_STATE":e===a.LESS_THAN_SIGN?this.state="RCDATA_LESS_THAN_SIGN_STATE":e===a.NULL?this._emitChar(o.REPLACEMENT_CHARACTER):e===a.EOF?this._emitEOFToken():this._emitCodePoint(e)},N.CHARACTER_REFERENCE_IN_RCDATA_STATE=function(e){this.additionalAllowedCp=void 0;var t=this._consumeCharacterReference(e,!1);this._ensureHibernation()||(t?this._emitSeveralCodePoints(t):this._emitChar("&"),this.state="RCDATA_STATE")},N.RAWTEXT_STATE=function(e){this.preprocessor.dropParsedChunk(),e===a.LESS_THAN_SIGN?this.state="RAWTEXT_LESS_THAN_SIGN_STATE":e===a.NULL?this._emitChar(o.REPLACEMENT_CHARACTER):e===a.EOF?this._emitEOFToken():this._emitCodePoint(e)},N.SCRIPT_DATA_STATE=function(e){this.preprocessor.dropParsedChunk(),e===a.LESS_THAN_SIGN?this.state="SCRIPT_DATA_LESS_THAN_SIGN_STATE":e===a.NULL?this._emitChar(o.REPLACEMENT_CHARACTER):e===a.EOF?this._emitEOFToken():this._emitCodePoint(e)},N.PLAINTEXT_STATE=function(e){this.preprocessor.dropParsedChunk(),e===a.NULL?this._emitChar(o.REPLACEMENT_CHARACTER):e===a.EOF?this._emitEOFToken():this._emitCodePoint(e)},N.TAG_OPEN_STATE=function(e){e===a.EXCLAMATION_MARK?this.state="MARKUP_DECLARATION_OPEN_STATE":e===a.SOLIDUS?this.state="END_TAG_OPEN_STATE":d(e)?(this._createStartTagToken(),this._reconsumeInState("TAG_NAME_STATE")):e===a.QUESTION_MARK?this._reconsumeInState("BOGUS_COMMENT_STATE"):(this._emitChar("<"),this._reconsumeInState(l))},N.END_TAG_OPEN_STATE=function(e){d(e)?(this._createEndTagToken(),this._reconsumeInState("TAG_NAME_STATE")):e===a.GREATER_THAN_SIGN?this.state=l:e===a.EOF?(this._reconsumeInState(l),this._emitChar("<"),this._emitChar("/")):this._reconsumeInState("BOGUS_COMMENT_STATE")},N.TAG_NAME_STATE=function(e){h(e)?this.state="BEFORE_ATTRIBUTE_NAME_STATE":e===a.SOLIDUS?this.state="SELF_CLOSING_START_TAG_STATE":e===a.GREATER_THAN_SIGN?(this.state=l,this._emitCurrentToken()):f(e)?this.currentToken.tagName+=A(e):e===a.NULL?this.currentToken.tagName+=o.REPLACEMENT_CHARACTER:e===a.EOF?this._reconsumeInState(l):this.currentToken.tagName+=_(e)},N.RCDATA_LESS_THAN_SIGN_STATE=function(e){e===a.SOLIDUS?(this.tempBuff=[],this.state="RCDATA_END_TAG_OPEN_STATE"):(this._emitChar("<"),this._reconsumeInState("RCDATA_STATE"))},N.RCDATA_END_TAG_OPEN_STATE=function(e){d(e)?(this._createEndTagToken(),this._reconsumeInState("RCDATA_END_TAG_NAME_STATE")):(this._emitChar("<"),this._emitChar("/"),this._reconsumeInState("RCDATA_STATE"))},N.RCDATA_END_TAG_NAME_STATE=function(e){if(f(e))this.currentToken.tagName+=A(e),this.tempBuff.push(e);else if(T(e))this.currentToken.tagName+=_(e),this.tempBuff.push(e);else{if(this._isAppropriateEndTagToken()){if(h(e))return void(this.state="BEFORE_ATTRIBUTE_NAME_STATE");if(e===a.SOLIDUS)return void(this.state="SELF_CLOSING_START_TAG_STATE");if(e===a.GREATER_THAN_SIGN)return this.state=l,void this._emitCurrentToken()}this._emitChar("<"),this._emitChar("/"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState("RCDATA_STATE")}},N.RAWTEXT_LESS_THAN_SIGN_STATE=function(e){e===a.SOLIDUS?(this.tempBuff=[],this.state="RAWTEXT_END_TAG_OPEN_STATE"):(this._emitChar("<"),this._reconsumeInState("RAWTEXT_STATE"))},N.RAWTEXT_END_TAG_OPEN_STATE=function(e){d(e)?(this._createEndTagToken(),this._reconsumeInState("RAWTEXT_END_TAG_NAME_STATE")):(this._emitChar("<"),this._emitChar("/"),this._reconsumeInState("RAWTEXT_STATE"))},N.RAWTEXT_END_TAG_NAME_STATE=function(e){if(f(e))this.currentToken.tagName+=A(e),this.tempBuff.push(e);else if(T(e))this.currentToken.tagName+=_(e),this.tempBuff.push(e);else{if(this._isAppropriateEndTagToken()){if(h(e))return void(this.state="BEFORE_ATTRIBUTE_NAME_STATE");if(e===a.SOLIDUS)return void(this.state="SELF_CLOSING_START_TAG_STATE");if(e===a.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=l)}this._emitChar("<"),this._emitChar("/"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState("RAWTEXT_STATE")}},N.SCRIPT_DATA_LESS_THAN_SIGN_STATE=function(e){e===a.SOLIDUS?(this.tempBuff=[],this.state="SCRIPT_DATA_END_TAG_OPEN_STATE"):e===a.EXCLAMATION_MARK?(this.state="SCRIPT_DATA_ESCAPE_START_STATE",this._emitChar("<"),this._emitChar("!")):(this._emitChar("<"),this._reconsumeInState("SCRIPT_DATA_STATE"))},N.SCRIPT_DATA_END_TAG_OPEN_STATE=function(e){d(e)?(this._createEndTagToken(),this._reconsumeInState("SCRIPT_DATA_END_TAG_NAME_STATE")):(this._emitChar("<"),this._emitChar("/"),this._reconsumeInState("SCRIPT_DATA_STATE"))},N.SCRIPT_DATA_END_TAG_NAME_STATE=function(e){if(f(e))this.currentToken.tagName+=A(e),this.tempBuff.push(e);else if(T(e))this.currentToken.tagName+=_(e),this.tempBuff.push(e);else{if(this._isAppropriateEndTagToken()){if(h(e))return void(this.state="BEFORE_ATTRIBUTE_NAME_STATE");if(e===a.SOLIDUS)return void(this.state="SELF_CLOSING_START_TAG_STATE");if(e===a.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=l)}this._emitChar("<"),this._emitChar("/"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState("SCRIPT_DATA_STATE")}},N.SCRIPT_DATA_ESCAPE_START_STATE=function(e){e===a.HYPHEN_MINUS?(this.state="SCRIPT_DATA_ESCAPE_START_DASH_STATE",this._emitChar("-")):this._reconsumeInState("SCRIPT_DATA_STATE")},N.SCRIPT_DATA_ESCAPE_START_DASH_STATE=function(e){e===a.HYPHEN_MINUS?(this.state="SCRIPT_DATA_ESCAPED_DASH_DASH_STATE",this._emitChar("-")):this._reconsumeInState("SCRIPT_DATA_STATE")},N.SCRIPT_DATA_ESCAPED_STATE=function(e){e===a.HYPHEN_MINUS?(this.state="SCRIPT_DATA_ESCAPED_DASH_STATE",this._emitChar("-")):e===a.LESS_THAN_SIGN?this.state="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE":e===a.NULL?this._emitChar(o.REPLACEMENT_CHARACTER):e===a.EOF?this._reconsumeInState(l):this._emitCodePoint(e)},N.SCRIPT_DATA_ESCAPED_DASH_STATE=function(e){e===a.HYPHEN_MINUS?(this.state="SCRIPT_DATA_ESCAPED_DASH_DASH_STATE",this._emitChar("-")):e===a.LESS_THAN_SIGN?this.state="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE":e===a.NULL?(this.state="SCRIPT_DATA_ESCAPED_STATE",this._emitChar(o.REPLACEMENT_CHARACTER)):e===a.EOF?this._reconsumeInState(l):(this.state="SCRIPT_DATA_ESCAPED_STATE",this._emitCodePoint(e))},N.SCRIPT_DATA_ESCAPED_DASH_DASH_STATE=function(e){e===a.HYPHEN_MINUS?this._emitChar("-"):e===a.LESS_THAN_SIGN?this.state="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE":e===a.GREATER_THAN_SIGN?(this.state="SCRIPT_DATA_STATE",this._emitChar(">")):e===a.NULL?(this.state="SCRIPT_DATA_ESCAPED_STATE",this._emitChar(o.REPLACEMENT_CHARACTER)):e===a.EOF?this._reconsumeInState(l):(this.state="SCRIPT_DATA_ESCAPED_STATE",this._emitCodePoint(e))},N.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE=function(e){e===a.SOLIDUS?(this.tempBuff=[],this.state="SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE"):d(e)?(this.tempBuff=[],this._emitChar("<"),this._reconsumeInState("SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE")):(this._emitChar("<"),this._reconsumeInState("SCRIPT_DATA_ESCAPED_STATE"))},N.SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE=function(e){d(e)?(this._createEndTagToken(),this._reconsumeInState("SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE")):(this._emitChar("<"),this._emitChar("/"),this._reconsumeInState("SCRIPT_DATA_ESCAPED_STATE"))},N.SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE=function(e){if(f(e))this.currentToken.tagName+=A(e),this.tempBuff.push(e);else if(T(e))this.currentToken.tagName+=_(e),this.tempBuff.push(e);else{if(this._isAppropriateEndTagToken()){if(h(e))return void(this.state="BEFORE_ATTRIBUTE_NAME_STATE");if(e===a.SOLIDUS)return void(this.state="SELF_CLOSING_START_TAG_STATE");if(e===a.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=l)}this._emitChar("<"),this._emitChar("/"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState("SCRIPT_DATA_ESCAPED_STATE")}},N.SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE=function(e){h(e)||e===a.SOLIDUS||e===a.GREATER_THAN_SIGN?(this.state=this.isTempBufferEqualToScriptString()?"SCRIPT_DATA_DOUBLE_ESCAPED_STATE":"SCRIPT_DATA_ESCAPED_STATE",this._emitCodePoint(e)):f(e)?(this.tempBuff.push(m(e)),this._emitCodePoint(e)):T(e)?(this.tempBuff.push(e),this._emitCodePoint(e)):this._reconsumeInState("SCRIPT_DATA_ESCAPED_STATE")},N.SCRIPT_DATA_DOUBLE_ESCAPED_STATE=function(e){e===a.HYPHEN_MINUS?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE",this._emitChar("-")):e===a.LESS_THAN_SIGN?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",this._emitChar("<")):e===a.NULL?this._emitChar(o.REPLACEMENT_CHARACTER):e===a.EOF?this._reconsumeInState(l):this._emitCodePoint(e)},N.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE=function(e){e===a.HYPHEN_MINUS?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE",this._emitChar("-")):e===a.LESS_THAN_SIGN?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",this._emitChar("<")):e===a.NULL?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitChar(o.REPLACEMENT_CHARACTER)):e===a.EOF?this._reconsumeInState(l):(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitCodePoint(e))},N.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE=function(e){e===a.HYPHEN_MINUS?this._emitChar("-"):e===a.LESS_THAN_SIGN?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",this._emitChar("<")):e===a.GREATER_THAN_SIGN?(this.state="SCRIPT_DATA_STATE",this._emitChar(">")):e===a.NULL?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitChar(o.REPLACEMENT_CHARACTER)):e===a.EOF?this._reconsumeInState(l):(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitCodePoint(e))},N.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE=function(e){e===a.SOLIDUS?(this.tempBuff=[],this.state="SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE",this._emitChar("/")):this._reconsumeInState("SCRIPT_DATA_DOUBLE_ESCAPED_STATE")},N.SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE=function(e){h(e)||e===a.SOLIDUS||e===a.GREATER_THAN_SIGN?(this.state=this.isTempBufferEqualToScriptString()?"SCRIPT_DATA_ESCAPED_STATE":"SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitCodePoint(e)):f(e)?(this.tempBuff.push(m(e)),this._emitCodePoint(e)):T(e)?(this.tempBuff.push(e),this._emitCodePoint(e)):this._reconsumeInState("SCRIPT_DATA_DOUBLE_ESCAPED_STATE")},N.BEFORE_ATTRIBUTE_NAME_STATE=function(e){h(e)||(e===a.SOLIDUS||e===a.GREATER_THAN_SIGN||e===a.EOF?this._reconsumeInState("AFTER_ATTRIBUTE_NAME_STATE"):e===a.EQUALS_SIGN?(this._createAttr("="),this.state="ATTRIBUTE_NAME_STATE"):(this._createAttr(""),this._reconsumeInState("ATTRIBUTE_NAME_STATE")))},N.ATTRIBUTE_NAME_STATE=function(e){h(e)||e===a.SOLIDUS||e===a.GREATER_THAN_SIGN||e===a.EOF?(this._leaveAttrName("AFTER_ATTRIBUTE_NAME_STATE"),this._unconsume()):e===a.EQUALS_SIGN?this._leaveAttrName("BEFORE_ATTRIBUTE_VALUE_STATE"):f(e)?this.currentAttr.name+=A(e):e===a.QUOTATION_MARK||e===a.APOSTROPHE||e===a.LESS_THAN_SIGN?this.currentAttr.name+=_(e):e===a.NULL?this.currentAttr.name+=o.REPLACEMENT_CHARACTER:this.currentAttr.name+=_(e)},N.AFTER_ATTRIBUTE_NAME_STATE=function(e){h(e)||(e===a.SOLIDUS?this.state="SELF_CLOSING_START_TAG_STATE":e===a.EQUALS_SIGN?this.state="BEFORE_ATTRIBUTE_VALUE_STATE":e===a.GREATER_THAN_SIGN?(this.state=l,this._emitCurrentToken()):e===a.EOF?this._reconsumeInState(l):(this._createAttr(""),this._reconsumeInState("ATTRIBUTE_NAME_STATE")))},N.BEFORE_ATTRIBUTE_VALUE_STATE=function(e){h(e)||(e===a.QUOTATION_MARK?this.state="ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE":e===a.APOSTROPHE?this.state="ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE":this._reconsumeInState("ATTRIBUTE_VALUE_UNQUOTED_STATE"))},N.ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE=function(e){e===a.QUOTATION_MARK?this.state="AFTER_ATTRIBUTE_VALUE_QUOTED_STATE":e===a.AMPERSAND?(this.additionalAllowedCp=a.QUOTATION_MARK,this.returnState=this.state,this.state="CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE"):e===a.NULL?this.currentAttr.value+=o.REPLACEMENT_CHARACTER:e===a.EOF?this._reconsumeInState(l):this.currentAttr.value+=_(e)},N.ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE=function(e){e===a.APOSTROPHE?this.state="AFTER_ATTRIBUTE_VALUE_QUOTED_STATE":e===a.AMPERSAND?(this.additionalAllowedCp=a.APOSTROPHE,this.returnState=this.state,this.state="CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE"):e===a.NULL?this.currentAttr.value+=o.REPLACEMENT_CHARACTER:e===a.EOF?this._reconsumeInState(l):this.currentAttr.value+=_(e)},N.ATTRIBUTE_VALUE_UNQUOTED_STATE=function(e){h(e)?this._leaveAttrValue("BEFORE_ATTRIBUTE_NAME_STATE"):e===a.AMPERSAND?(this.additionalAllowedCp=a.GREATER_THAN_SIGN,this.returnState=this.state,this.state="CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE"):e===a.GREATER_THAN_SIGN?(this._leaveAttrValue(l),this._emitCurrentToken()):e===a.NULL?this.currentAttr.value+=o.REPLACEMENT_CHARACTER:e===a.QUOTATION_MARK||e===a.APOSTROPHE||e===a.LESS_THAN_SIGN||e===a.EQUALS_SIGN||e===a.GRAVE_ACCENT?this.currentAttr.value+=_(e):e===a.EOF?this._reconsumeInState(l):this.currentAttr.value+=_(e)},N.CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE=function(e){var t=this._consumeCharacterReference(e,!0);if(!this._ensureHibernation()){if(t)for(var n=0;n<t.length;n++)this.currentAttr.value+=_(t[n]);else this.currentAttr.value+="&";this.state=this.returnState}},N.AFTER_ATTRIBUTE_VALUE_QUOTED_STATE=function(e){h(e)?this._leaveAttrValue("BEFORE_ATTRIBUTE_NAME_STATE"):e===a.SOLIDUS?this._leaveAttrValue("SELF_CLOSING_START_TAG_STATE"):e===a.GREATER_THAN_SIGN?(this._leaveAttrValue(l),this._emitCurrentToken()):e===a.EOF?this._reconsumeInState(l):this._reconsumeInState("BEFORE_ATTRIBUTE_NAME_STATE")},N.SELF_CLOSING_START_TAG_STATE=function(e){e===a.GREATER_THAN_SIGN?(this.currentToken.selfClosing=!0,this.state=l,this._emitCurrentToken()):e===a.EOF?this._reconsumeInState(l):this._reconsumeInState("BEFORE_ATTRIBUTE_NAME_STATE")},N.BOGUS_COMMENT_STATE=function(){this._createCommentToken(),this._reconsumeInState("BOGUS_COMMENT_STATE_CONTINUATION")},N.BOGUS_COMMENT_STATE_CONTINUATION=function(e){for(;;){if(e===a.GREATER_THAN_SIGN){this.state=l;break}if(e===a.EOF){this._reconsumeInState(l);break}if(this.currentToken.data+=e===a.NULL?o.REPLACEMENT_CHARACTER:_(e),this._hibernationSnapshot(),e=this._consume(),this._ensureHibernation())return}this._emitCurrentToken()},N.MARKUP_DECLARATION_OPEN_STATE=function(e){var t=this._consumeSubsequentIfMatch(u.DASH_DASH_STRING,e,!0),n=!t&&this._consumeSubsequentIfMatch(u.DOCTYPE_STRING,e,!1),r=!t&&!n&&this.allowCDATA&&this._consumeSubsequentIfMatch(u.CDATA_START_STRING,e,!0);this._ensureHibernation()||(t?(this._createCommentToken(),this.state="COMMENT_START_STATE"):n?this.state="DOCTYPE_STATE":r?this.state="CDATA_SECTION_STATE":this._reconsumeInState("BOGUS_COMMENT_STATE"))},N.COMMENT_START_STATE=function(e){e===a.HYPHEN_MINUS?this.state="COMMENT_START_DASH_STATE":e===a.NULL?(this.currentToken.data+=o.REPLACEMENT_CHARACTER,this.state="COMMENT_STATE"):e===a.GREATER_THAN_SIGN?(this.state=l,this._emitCurrentToken()):e===a.EOF?(this._emitCurrentToken(),this._reconsumeInState(l)):(this.currentToken.data+=_(e),this.state="COMMENT_STATE")},N.COMMENT_START_DASH_STATE=function(e){e===a.HYPHEN_MINUS?this.state="COMMENT_END_STATE":e===a.NULL?(this.currentToken.data+="-",this.currentToken.data+=o.REPLACEMENT_CHARACTER,this.state="COMMENT_STATE"):e===a.GREATER_THAN_SIGN?(this.state=l,this._emitCurrentToken()):e===a.EOF?(this._emitCurrentToken(),this._reconsumeInState(l)):(this.currentToken.data+="-",this.currentToken.data+=_(e),this.state="COMMENT_STATE")},N.COMMENT_STATE=function(e){e===a.HYPHEN_MINUS?this.state="COMMENT_END_DASH_STATE":e===a.NULL?this.currentToken.data+=o.REPLACEMENT_CHARACTER:e===a.EOF?(this._emitCurrentToken(),this._reconsumeInState(l)):this.currentToken.data+=_(e)},N.COMMENT_END_DASH_STATE=function(e){e===a.HYPHEN_MINUS?this.state="COMMENT_END_STATE":e===a.NULL?(this.currentToken.data+="-",this.currentToken.data+=o.REPLACEMENT_CHARACTER,this.state="COMMENT_STATE"):e===a.EOF?(this._emitCurrentToken(),this._reconsumeInState(l)):(this.currentToken.data+="-",this.currentToken.data+=_(e),this.state="COMMENT_STATE")},N.COMMENT_END_STATE=function(e){e===a.GREATER_THAN_SIGN?(this.state=l,this._emitCurrentToken()):e===a.EXCLAMATION_MARK?this.state="COMMENT_END_BANG_STATE":e===a.HYPHEN_MINUS?this.currentToken.data+="-":e===a.NULL?(this.currentToken.data+="--",this.currentToken.data+=o.REPLACEMENT_CHARACTER,this.state="COMMENT_STATE"):e===a.EOF?(this._reconsumeInState(l),this._emitCurrentToken()):(this.currentToken.data+="--",this.currentToken.data+=_(e),this.state="COMMENT_STATE")},N.COMMENT_END_BANG_STATE=function(e){e===a.HYPHEN_MINUS?(this.currentToken.data+="--!",this.state="COMMENT_END_DASH_STATE"):e===a.GREATER_THAN_SIGN?(this.state=l,this._emitCurrentToken()):e===a.NULL?(this.currentToken.data+="--!",this.currentToken.data+=o.REPLACEMENT_CHARACTER,this.state="COMMENT_STATE"):e===a.EOF?(this._emitCurrentToken(),this._reconsumeInState(l)):(this.currentToken.data+="--!",this.currentToken.data+=_(e),this.state="COMMENT_STATE")},N.DOCTYPE_STATE=function(e){h(e)||(e===a.GREATER_THAN_SIGN?(this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=l):e===a.EOF?(this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._reconsumeInState(l)):(this._createDoctypeToken(""),this._reconsumeInState("DOCTYPE_NAME_STATE")))},N.DOCTYPE_NAME_STATE=function(e){h(e)||e===a.GREATER_THAN_SIGN||e===a.EOF?this._reconsumeInState("AFTER_DOCTYPE_NAME_STATE"):f(e)?this.currentToken.name+=A(e):e===a.NULL?this.currentToken.name+=o.REPLACEMENT_CHARACTER:this.currentToken.name+=_(e)},N.AFTER_DOCTYPE_NAME_STATE=function(e){if(!h(e))if(e===a.GREATER_THAN_SIGN)this.state=l,this._emitCurrentToken();else{var t=this._consumeSubsequentIfMatch(u.PUBLIC_STRING,e,!1),n=!t&&this._consumeSubsequentIfMatch(u.SYSTEM_STRING,e,!1);this._ensureHibernation()||(t?this.state="BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE":n?this.state="BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE":(this.currentToken.forceQuirks=!0,this.state="BOGUS_DOCTYPE_STATE"))}},N.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE=function(e){h(e)||(e===a.QUOTATION_MARK?(this.currentToken.publicId="",this.state="DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE"):e===a.APOSTROPHE?(this.currentToken.publicId="",this.state="DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE"):(this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE")))},N.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE=function(e){e===a.QUOTATION_MARK?this.state="BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE":e===a.NULL?this.currentToken.publicId+=o.REPLACEMENT_CHARACTER:e===a.GREATER_THAN_SIGN?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=l):e===a.EOF?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._reconsumeInState(l)):this.currentToken.publicId+=_(e)},N.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE=function(e){e===a.APOSTROPHE?this.state="BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE":e===a.NULL?this.currentToken.publicId+=o.REPLACEMENT_CHARACTER:e===a.GREATER_THAN_SIGN?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=l):e===a.EOF?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._reconsumeInState(l)):this.currentToken.publicId+=_(e)},N.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE=function(e){h(e)||(e===a.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=l):e===a.QUOTATION_MARK?(this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE"):e===a.APOSTROPHE?(this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE"):(this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE")))},N.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE=function(e){h(e)||(e===a.QUOTATION_MARK?(this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE"):e===a.APOSTROPHE?(this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE"):(this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE")))},N.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE=function(e){e===a.QUOTATION_MARK?this.state="AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE":e===a.GREATER_THAN_SIGN?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=l):e===a.NULL?this.currentToken.systemId+=o.REPLACEMENT_CHARACTER:e===a.EOF?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._reconsumeInState(l)):this.currentToken.systemId+=_(e)},N.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE=function(e){e===a.APOSTROPHE?this.state="AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE":e===a.GREATER_THAN_SIGN?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=l):e===a.NULL?this.currentToken.systemId+=o.REPLACEMENT_CHARACTER:e===a.EOF?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._reconsumeInState(l)):this.currentToken.systemId+=_(e)},N.AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE=function(e){h(e)||(e===a.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=l):e===a.EOF?(this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._reconsumeInState(l)):this.state="BOGUS_DOCTYPE_STATE")},N.BOGUS_DOCTYPE_STATE=function(e){e===a.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=l):e===a.EOF&&(this._emitCurrentToken(),this._reconsumeInState(l))},N.CDATA_SECTION_STATE=function(e){for(;;){if(e===a.EOF){this._reconsumeInState(l);break}var t=this._consumeSubsequentIfMatch(u.CDATA_END_STRING,e,!0);if(this._ensureHibernation())break;if(t){this.state=l;break}if(this._emitCodePoint(e),this._hibernationSnapshot(),e=this._consume(),this._ensureHibernation())break}}},function(e,t,n){e.exports=n(1)(38)},function(e,t,n){"use strict";!process.version||0===process.version.indexOf("v0.")||0===process.version.indexOf("v1.")&&0!==process.version.indexOf("v1.8.")?e.exports=function(e,t,n,r){if("function"!=typeof e)throw new TypeError('"callback" argument must be a function');var i,o,s=arguments.length;switch(s){case 0:case 1:return process.nextTick(e);case 2:return process.nextTick(function(){e.call(null,t)});case 3:return process.nextTick(function(){e.call(null,t,n)});case 4:return process.nextTick(function(){e.call(null,t,n,r)});default:for(i=new Array(s-1),o=0;o<i.length;)i[o++]=arguments[o];return process.nextTick(function(){e.apply(null,i)})}}:e.exports=process.nextTick},function(e,t,n){var r=n(60);function i(e){if(!(this instanceof i))return new i(e);if(this._bufs=[],this.length=0,"function"==typeof e){this._callback=e;var t=function(e){this._callback&&(this._callback(e),this._callback=null)}.bind(this);this.on("pipe",function(e){e.on("error",t)}),this.on("unpipe",function(e){e.removeListener("error",t)})}else this.append(e);r.call(this)}n(2).inherits(i,r),i.prototype._offset=function(e){var t,n=0,r=0;if(0===e)return[0,0];for(;r<this._bufs.length;r++){if(e<(t=n+this._bufs[r].length)||r==this._bufs.length-1)return[r,e-n];n=t}},i.prototype.append=function(e){var t=0;if(Buffer.isBuffer(e))this._appendBuffer(e);else if(Array.isArray(e))for(;t<e.length;t++)this.append(e[t]);else if(e instanceof i)for(;t<e._bufs.length;t++)this.append(e._bufs[t]);else null!=e&&("number"==typeof e&&(e=e.toString()),this._appendBuffer(new Buffer(e)));return this},i.prototype._appendBuffer=function(e){this._bufs.push(e),this.length+=e.length},i.prototype._write=function(e,t,n){this._appendBuffer(e),"function"==typeof n&&n()},i.prototype._read=function(e){if(!this.length)return this.push(null);e=Math.min(e,this.length),this.push(this.slice(0,e)),this.consume(e)},i.prototype.end=function(e){r.prototype.end.call(this,e),this._callback&&(this._callback(null,this.slice()),this._callback=null)},i.prototype.get=function(e){return this.slice(e,e+1)[0]},i.prototype.slice=function(e,t){return"number"==typeof e&&e<0&&(e+=this.length),"number"==typeof t&&t<0&&(t+=this.length),this.copy(null,0,e,t)},i.prototype.copy=function(e,t,n,r){if(("number"!=typeof n||n<0)&&(n=0),("number"!=typeof r||r>this.length)&&(r=this.length),n>=this.length)return e||new Buffer(0);if(r<=0)return e||new Buffer(0);var i,o,s=!!e,a=this._offset(n),u=r-n,c=u,l=s&&t||0,h=a[1];if(0===n&&r==this.length){if(!s)return 1===this._bufs.length?this._bufs[0]:Buffer.concat(this._bufs,this.length);for(o=0;o<this._bufs.length;o++)this._bufs[o].copy(e,l),l+=this._bufs[o].length;return e}if(c<=this._bufs[a[0]].length-h)return s?this._bufs[a[0]].copy(e,t,h,h+c):this._bufs[a[0]].slice(h,h+c);for(s||(e=new Buffer(u)),o=a[0];o<this._bufs.length;o++){if(!(c>(i=this._bufs[o].length-h))){this._bufs[o].copy(e,l,h,h+c);break}this._bufs[o].copy(e,l,h),l+=i,c-=i,h&&(h=0)}return e},i.prototype.shallowSlice=function(e,t){e=e||0,t=t||this.length,e<0&&(e+=this.length),t<0&&(t+=this.length);var n=this._offset(e),r=this._offset(t),o=this._bufs.slice(n[0],r[0]+1);return 0==r[1]?o.pop():o[o.length-1]=o[o.length-1].slice(0,r[1]),0!=n[1]&&(o[0]=o[0].slice(n[1])),new i(o)},i.prototype.toString=function(e,t,n){return this.slice(t,n).toString(e)},i.prototype.consume=function(e){for(;this._bufs.length;){if(!(e>=this._bufs[0].length)){this._bufs[0]=this._bufs[0].slice(e),this.length-=e;break}e-=this._bufs[0].length,this.length-=this._bufs[0].length,this._bufs.shift()}return this},i.prototype.duplicate=function(){for(var e=0,t=new i;e<this._bufs.length;e++)t.append(this._bufs[e]);return t},i.prototype.destroy=function(){this._bufs.length=0,this.length=0,this.push(null)},function(){var e={readDoubleBE:8,readDoubleLE:8,readFloatBE:4,readFloatLE:4,readInt32BE:4,readInt32LE:4,readUInt32BE:4,readUInt32LE:4,readInt16BE:2,readInt16LE:2,readUInt16BE:2,readUInt16LE:2,readInt8:1,readUInt8:1};for(var t in e)!function(t){i.prototype[t]=function(n){return this.slice(n,n+e[t])[t](0)}}(t)}(),e.exports=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(10);class i{log(e,t){}}t.NullLogger=i;class o{constructor(e){this.minimumLogLevel=e}log(e,t){e>=this.minimumLogLevel&&console.log(`${r.LogLevel[e]}: ${t}`)}}t.ConsoleLogger=o,function(e){e.createLogger=function(e){return void 0===e?new o(r.LogLevel.Information):null===e?new i:e.log?e:new o(e)}}(t.LoggerFactory||(t.LoggerFactory={}))},function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n(20)),r(n(33)),r(n(67)),r(n(19)),r(n(16)),r(n(64))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){const t=String.fromCharCode(30);e.write=function(e){return`${e}${t}`},e.parse=function(e){if(e[e.length-1]!=t)throw new Error("Message is incomplete.");let n=e.split(t);return n.pop(),n}}(t.TextMessageFormat||(t.TextMessageFormat={})),function(e){e.write=function(e){let t=e.byteLength||e.length,n=[];do{let e=127&t;(t>>=7)>0&&(e|=128),n.push(e)}while(t>0);t=e.byteLength||e.length;let r=new Uint8Array(n.length+t);return r.set(n,0),r.set(e,n.length),r.buffer},e.parse=function(e){let t=[],n=new Uint8Array(e);const r=[0,7,14,21,28];for(let i=0;i<e.byteLength;){let o,s=0,a=0;do{a|=(127&(o=n[i+s]))<<r[s],s++}while(s<Math.min(5,e.byteLength-i)&&0!=(128&o));if(0!=(128&o)&&s<5)throw new Error("Cannot read message size.");if(5===s&&o>7)throw new Error("Messages bigger than 2GB are not supported.");if(!(n.byteLength>=i+s+a))throw new Error("Incomplete message.");t.push(n.slice?n.slice(i+s,i+s+a):n.subarray(i+s,i+s+a)),i=i+s+a}return t}}(t.BinaryMessageFormat||(t.BinaryMessageFormat={}))},function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(i,o){function s(e){try{u(r.next(e))}catch(e){o(e)}}function a(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){e.done?i(e.value):new n(function(t){t(e.value)}).then(s,a)}u((r=r.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const i=n(34),o=n(10);!function(e){e[e.WebSockets=0]="WebSockets",e[e.ServerSentEvents=1]="ServerSentEvents",e[e.LongPolling=2]="LongPolling"}(t.TransportType||(t.TransportType={}));t.WebSocketTransport=class{constructor(e){this.logger=e}connect(e,t){return new Promise((n,r)=>{e=e.replace(/^http/,"ws");let i=new WebSocket(e);2==t&&(i.binaryType="arraybuffer"),i.onopen=(r=>{this.logger.log(o.LogLevel.Information,`WebSocket connected to ${e}`),this.webSocket=i,n(t)}),i.onerror=(e=>{r()}),i.onmessage=(e=>{this.logger.log(o.LogLevel.Trace,`(WebSockets transport) data received: ${e.data}`),this.onreceive&&this.onreceive(e.data)}),i.onclose=(e=>{this.onclose&&this.webSocket&&(!1===e.wasClean||1e3!==e.code?this.onclose(new Error(`Websocket closed with status code: ${e.code} (${e.reason})`)):this.onclose())})})}send(e){return this.webSocket&&this.webSocket.readyState===WebSocket.OPEN?(this.webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){this.webSocket&&(this.webSocket.close(),this.webSocket=null)}};t.ServerSentEventsTransport=class{constructor(e,t){this.httpClient=e,this.logger=t}connect(e,t){return"undefined"==typeof EventSource&&Promise.reject("EventSource not supported by the browser."),this.url=e,new Promise((e,t)=>{let n=new EventSource(this.url);try{n.onmessage=(e=>{if(this.onreceive)try{this.logger.log(o.LogLevel.Trace,`(SSE transport) data received: ${e.data}`),this.onreceive(e.data)}catch(e){return void(this.onclose&&this.onclose(e))}}),n.onerror=(e=>{t(),this.eventSource&&this.onclose&&this.onclose(new Error(e.message||"Error occurred"))}),n.onopen=(()=>{this.logger.log(o.LogLevel.Information,`SSE connected to ${this.url}`),this.eventSource=n,e(1)})}catch(e){return Promise.reject(e)}})}send(e){return r(this,void 0,void 0,function*(){return a(this.httpClient,this.url,e)})}stop(){this.eventSource&&(this.eventSource.close(),this.eventSource=null)}};t.LongPollingTransport=class{constructor(e,t){this.httpClient=e,this.logger=t}connect(e,t){if(this.url=e,this.shouldPoll=!0,2===t&&"string"!=typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");return this.poll(this.url,t),Promise.resolve(t)}poll(e,t){if(!this.shouldPoll)return;let n=new XMLHttpRequest;n.onload=(()=>{if(200==n.status){if(this.onreceive)try{let e=1===t?n.responseText:n.response;e?(this.logger.log(o.LogLevel.Trace,`(LongPolling transport) data received: ${e}`),this.onreceive(e)):this.logger.log(o.LogLevel.Information,"(LongPolling transport) timed out")}catch(e){return void(this.onclose&&this.onclose(e))}this.poll(e,t)}else 204==this.pollXhr.status?this.onclose&&this.onclose():this.onclose&&this.onclose(new i.HttpError(n.statusText,n.status))}),n.onerror=(()=>{this.onclose&&this.onclose(new Error("Sending HTTP request failed."))}),n.ontimeout=(()=>{this.poll(e,t)}),this.pollXhr=n,this.pollXhr.open("GET",`${e}&_=${Date.now()}`,!0),2===t&&(this.pollXhr.responseType="arraybuffer"),this.pollXhr.timeout=12e4,this.pollXhr.send()}send(e){return r(this,void 0,void 0,function*(){return a(this.httpClient,this.url,e)})}stop(){this.shouldPoll=!1,this.pollXhr&&(this.pollXhr.abort(),this.pollXhr=null)}};const s=new Map;function a(e,t,n){return r(this,void 0,void 0,function*(){yield e.post(t,n,s)})}},function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(i,o){function s(e){try{u(r.next(e))}catch(e){o(e)}}function a(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){e.done?i(e.value):new n(function(t){t(e.value)}).then(s,a)}u((r=r.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const i=n(19),o=n(33),s=n(10),a=n(16);t.HttpConnection=class{constructor(e,t={}){this.features={},this.logger=a.LoggerFactory.createLogger(t.logging),this.url=this.resolveUrl(e),t=t||{},this.httpClient=t.httpClient||new o.HttpClient,this.connectionState=0,this.options=t}start(){return r(this,void 0,void 0,function*(){return 0!=this.connectionState?Promise.reject(new Error("Cannot start a connection that is not in the 'Initial' state.")):(this.connectionState=1,this.startPromise=this.startInternal(),this.startPromise)})}startInternal(){return r(this,void 0,void 0,function*(){try{let e=yield this.httpClient.options(this.url),t=JSON.parse(e);if(this.connectionId=t.connectionId,3==this.connectionState)return;this.url+=(-1==this.url.indexOf("?")?"?":"&")+`id=${this.connectionId}`,this.transport=this.createTransport(this.options.transport,t.availableTransports),this.transport.onreceive=this.onreceive,this.transport.onclose=(e=>this.stopConnection(!0,e));let n=2===this.features.transferMode?2:1;this.features.transferMode=yield this.transport.connect(this.url,n),this.changeState(1,2)}catch(e){throw this.logger.log(s.LogLevel.Error,"Failed to start the connection. "+e),this.connectionState=3,this.transport=null,e}})}createTransport(e,t){if(!e&&t.length>0&&(e=i.TransportType[t[0]]),e===i.TransportType.WebSockets&&t.indexOf(i.TransportType[e])>=0)return new i.WebSocketTransport(this.logger);if(e===i.TransportType.ServerSentEvents&&t.indexOf(i.TransportType[e])>=0)return new i.ServerSentEventsTransport(this.httpClient,this.logger);if(e===i.TransportType.LongPolling&&t.indexOf(i.TransportType[e])>=0)return new i.LongPollingTransport(this.httpClient,this.logger);if(this.isITransport(e))return e;throw new Error("No available transports found.")}isITransport(e){return"object"==typeof e&&"connect"in e}changeState(e,t){return this.connectionState==e&&(this.connectionState=t,!0)}send(e){if(2!=this.connectionState)throw new Error("Cannot send data if the connection is not in the 'Connected' State");return this.transport.send(e)}stop(){return r(this,void 0,void 0,function*(){let e=this.connectionState;this.connectionState=3;try{yield this.startPromise}catch(e){}this.stopConnection(2==e)})}stopConnection(e,t){this.transport&&(this.transport.stop(),this.transport=null),this.connectionState=3,e&&this.onclose&&this.onclose(t)}resolveUrl(e){if(0===e.lastIndexOf("https://",0)||0===e.lastIndexOf("http://",0))return e;if("undefined"==typeof window||!window||!window.document)throw new Error(`Cannot resolve '${e}'.`);let t=window.document.createElement("a");t.href=e;let n=t.protocol&&":"!==t.protocol?`${t.protocol}//${t.host}`:`${window.document.location.protocol}//${t.host||window.document.location.host}`;e&&"/"==e[0]||(e="/"+e);let r=n+e;return this.logger.log(s.LogLevel.Information,`Normalizing '${e}' to '${r}'`),r}}},function(e,t,n){"use strict";e.exports=function(e,t){return[e,t=t||Object.create(null)].reduce(function(e,t){return Object.keys(t).forEach(function(n){e[n]=t[n]}),e},Object.create(null))}},function(e,t,n){"use strict";var r=n(3).DOCUMENT_MODE,i=["+//silmaril//dtd html pro v0r11 19970101//en","-//advasoft ltd//dtd html 3.0 aswedit + extensions//en","-//as//dtd html 3.0 aswedit + extensions//en","-//ietf//dtd html 2.0 level 1//en","-//ietf//dtd html 2.0 level 2//en","-//ietf//dtd html 2.0 strict level 1//en","-//ietf//dtd html 2.0 strict level 2//en","-//ietf//dtd html 2.0 strict//en","-//ietf//dtd html 2.0//en","-//ietf//dtd html 2.1e//en","-//ietf//dtd html 3.0//en","-//ietf//dtd html 3.0//en//","-//ietf//dtd html 3.2 final//en","-//ietf//dtd html 3.2//en","-//ietf//dtd html 3//en","-//ietf//dtd html level 0//en","-//ietf//dtd html level 0//en//2.0","-//ietf//dtd html level 1//en","-//ietf//dtd html level 1//en//2.0","-//ietf//dtd html level 2//en","-//ietf//dtd html level 2//en//2.0","-//ietf//dtd html level 3//en","-//ietf//dtd html level 3//en//3.0","-//ietf//dtd html strict level 0//en","-//ietf//dtd html strict level 0//en//2.0","-//ietf//dtd html strict level 1//en","-//ietf//dtd html strict level 1//en//2.0","-//ietf//dtd html strict level 2//en","-//ietf//dtd html strict level 2//en//2.0","-//ietf//dtd html strict level 3//en","-//ietf//dtd html strict level 3//en//3.0","-//ietf//dtd html strict//en","-//ietf//dtd html strict//en//2.0","-//ietf//dtd html strict//en//3.0","-//ietf//dtd html//en","-//ietf//dtd html//en//2.0","-//ietf//dtd html//en//3.0","-//metrius//dtd metrius presentational//en","-//microsoft//dtd internet explorer 2.0 html strict//en","-//microsoft//dtd internet explorer 2.0 html//en","-//microsoft//dtd internet explorer 2.0 tables//en","-//microsoft//dtd internet explorer 3.0 html strict//en","-//microsoft//dtd internet explorer 3.0 html//en","-//microsoft//dtd internet explorer 3.0 tables//en","-//netscape comm. corp.//dtd html//en","-//netscape comm. corp.//dtd strict html//en","-//o'reilly and associates//dtd html 2.0//en","-//o'reilly and associates//dtd html extended 1.0//en","-//spyglass//dtd html 2.0 extended//en","-//sq//dtd html 2.0 hotmetal + extensions//en","-//sun microsystems corp.//dtd hotjava html//en","-//sun microsystems corp.//dtd hotjava strict html//en","-//w3c//dtd html 3 1995-03-24//en","-//w3c//dtd html 3.2 draft//en","-//w3c//dtd html 3.2 final//en","-//w3c//dtd html 3.2//en","-//w3c//dtd html 3.2s draft//en","-//w3c//dtd html 4.0 frameset//en","-//w3c//dtd html 4.0 transitional//en","-//w3c//dtd html experimental 19960712//en","-//w3c//dtd html experimental 970421//en","-//w3c//dtd w3 html//en","-//w3o//dtd w3 html 3.0//en","-//w3o//dtd w3 html 3.0//en//","-//webtechs//dtd mozilla html 2.0//en","-//webtechs//dtd mozilla html//en"],o=i.concat(["-//w3c//dtd html 4.01 frameset//","-//w3c//dtd html 4.01 transitional//"]),s=["-//w3o//dtd w3 html strict 3.0//en//","-/w3c/dtd html 4.0 transitional/en","html"],a=["-//W3C//DTD XHTML 1.0 Frameset//","-//W3C//DTD XHTML 1.0 Transitional//"],u=a.concat(["-//W3C//DTD HTML 4.01 Frameset//","-//W3C//DTD HTML 4.01 Transitional//"]);function c(e){var t=-1!==e.indexOf('"')?"'":'"';return t+e+t}function l(e,t){for(var n=0;n<t.length;n++)if(0===e.indexOf(t[n]))return!0;return!1}t.getDocumentMode=function(e,t,n){if("html"!==e)return r.QUIRKS;if(n&&"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd"===n.toLowerCase())return r.QUIRKS;if(null!==t){if(t=t.toLowerCase(),s.indexOf(t)>-1)return r.QUIRKS;var c=null===n?o:i;if(l(t,c))return r.QUIRKS;if(l(t,c=null===n?a:u))return r.LIMITED_QUIRKS}return r.NO_QUIRKS},t.serializeContent=function(e,t,n){var r="!DOCTYPE ";return e&&(r+=e),null!==t?r+=" PUBLIC "+c(t):null!==n&&(r+=" SYSTEM"),null!==n&&(r+=" "+c(n)),r}},function(e,t,n){"use strict";var r=n(3).DOCUMENT_MODE;t.createDocument=function(){return{nodeName:"#document",mode:r.NO_QUIRKS,childNodes:[]}},t.createDocumentFragment=function(){return{nodeName:"#document-fragment",childNodes:[]}},t.createElement=function(e,t,n){return{nodeName:e,tagName:e,attrs:n,namespaceURI:t,childNodes:[],parentNode:null}},t.createCommentNode=function(e){return{nodeName:"#comment",data:e,parentNode:null}};var i=function(e){return{nodeName:"#text",value:e,parentNode:null}},o=t.appendChild=function(e,t){e.childNodes.push(t),t.parentNode=e},s=t.insertBefore=function(e,t,n){var r=e.childNodes.indexOf(n);e.childNodes.splice(r,0,t),t.parentNode=e};t.setTemplateContent=function(e,t){e.content=t},t.getTemplateContent=function(e){return e.content},t.setDocumentType=function(e,t,n,r){for(var i=null,s=0;s<e.childNodes.length;s++)if("#documentType"===e.childNodes[s].nodeName){i=e.childNodes[s];break}i?(i.name=t,i.publicId=n,i.systemId=r):o(e,{nodeName:"#documentType",name:t,publicId:n,systemId:r})},t.setDocumentMode=function(e,t){e.mode=t},t.getDocumentMode=function(e){return e.mode},t.detachNode=function(e){if(e.parentNode){var t=e.parentNode.childNodes.indexOf(e);e.parentNode.childNodes.splice(t,1),e.parentNode=null}},t.insertText=function(e,t){if(e.childNodes.length){var n=e.childNodes[e.childNodes.length-1];if("#text"===n.nodeName)return void(n.value+=t)}o(e,i(t))},t.insertTextBefore=function(e,t,n){var r=e.childNodes[e.childNodes.indexOf(n)-1];r&&"#text"===r.nodeName?r.value+=t:s(e,i(t),n)},t.adoptAttributes=function(e,t){for(var n=[],r=0;r<e.attrs.length;r++)n.push(e.attrs[r].name);for(var i=0;i<t.length;i++)-1===n.indexOf(t[i].name)&&e.attrs.push(t[i])},t.getFirstChild=function(e){return e.childNodes[0]},t.getChildNodes=function(e){return e.childNodes},t.getParentNode=function(e){return e.parentNode},t.getAttrList=function(e){return e.attrs},t.getTagName=function(e){return e.tagName},t.getNamespaceURI=function(e){return e.namespaceURI},t.getTextNodeContent=function(e){return e.value},t.getCommentNodeContent=function(e){return e.data},t.getDocumentTypeNodeName=function(e){return e.name},t.getDocumentTypeNodePublicId=function(e){return e.publicId},t.getDocumentTypeNodeSystemId=function(e){return e.systemId},t.isTextNode=function(e){return"#text"===e.nodeName},t.isCommentNode=function(e){return"#comment"===e.nodeName},t.isDocumentTypeNode=function(e){return"#documentType"===e.nodeName},t.isElementNode=function(e){return!!e.tagName}},function(e,t,n){"use strict";var r=n(40),i=n(37);t.parse=function(e,t){return new r(t).parse(e)},t.parseFragment=function(e,t,n){return"string"==typeof e&&(n=t,t=e,e=null),new r(n).parseFragment(t,e)},t.serialize=function(e,t){return new i(e,t).serialize()},t.treeAdapters={default:n(23),htmlparser2:n(84)},t.ParserStream=n(36),t.PlainTextConversionStream=n(83),t.SerializerStream=n(82),t.SAXParser=n(81)},function(e,t,n){"use strict";e.exports=s;var r=n(4),i=n(9);function o(e){this.afterTransform=function(t,n){return function(e,t,n){var r=e._transformState;r.transforming=!1;var i=r.writecb;if(!i)return e.emit("error",new Error("write callback called multiple times"));r.writechunk=null,r.writecb=null,null!==n&&void 0!==n&&e.push(n);i(t);var o=e._readableState;o.reading=!1,(o.needReadable||o.length<o.highWaterMark)&&e._read(o.highWaterMark)}(e,t,n)},this.needTransform=!1,this.transforming=!1,this.writecb=null,this.writechunk=null,this.writeencoding=null}function s(e){if(!(this instanceof s))return new s(e);r.call(this,e),this._transformState=new o(this);var t=this;this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.once("prefinish",function(){"function"==typeof this._flush?this._flush(function(e,n){a(t,e,n)}):a(t)})}function a(e,t,n){if(t)return e.emit("error",t);null!==n&&void 0!==n&&e.push(n);var r=e._writableState,i=e._transformState;if(r.length)throw new Error("Calling transform done when ws.length != 0");if(i.transforming)throw new Error("Calling transform done when still transforming");return e.push(null)}i.inherits=n(5),i.inherits(s,r),s.prototype.push=function(e,t){return this._transformState.needTransform=!1,r.prototype.push.call(this,e,t)},s.prototype._transform=function(e,t,n){throw new Error("_transform() is not implemented")},s.prototype._write=function(e,t,n){var r=this._transformState;if(r.writecb=n,r.writechunk=e,r.writeencoding=t,!r.transforming){var i=this._readableState;(r.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},s.prototype._read=function(e){var t=this._transformState;null!==t.writechunk&&t.writecb&&!t.transforming?(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform)):t.needTransform=!0},s.prototype._destroy=function(e,t){var n=this;r.prototype._destroy.call(this,e,function(e){t(e),n.emit("close")})}},function(e,t,n){"use strict";var r=n(6).Buffer,i=r.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function o(e){var t;switch(this.encoding=function(e){var t=function(e){if(!e)return"utf8";for(var t;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(t)return;e=(""+e).toLowerCase(),t=!0}}(e);if("string"!=typeof t&&(r.isEncoding===i||!i(e)))throw new Error("Unknown encoding: "+e);return t||e}(e),this.encoding){case"utf16le":this.text=u,this.end=c,t=4;break;case"utf8":this.fillLast=a,t=4;break;case"base64":this.text=l,this.end=h,t=3;break;default:return this.write=p,void(this.end=f)}this.lastNeed=0,this.lastTotal=0,this.lastChar=r.allocUnsafe(t)}function s(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:-1}function a(e){var t=this.lastTotal-this.lastNeed,n=function(e,t,n){if(128!=(192&t[0]))return e.lastNeed=0,"�".repeat(n);if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,"�".repeat(n+1);if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,"�".repeat(n+2)}}(this,e,t);return void 0!==n?n:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function u(e,t){if((e.length-t)%2==0){var n=e.toString("utf16le",t);if(n){var r=n.charCodeAt(n.length-1);if(r>=55296&&r<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",t,e.length-1)}function c(e){var t=e&&e.length?this.write(e):"";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,n)}return t}function l(e,t){var n=(e.length-t)%3;return 0===n?e.toString("base64",t):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",t,e.length-n))}function h(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function p(e){return e.toString(this.encoding)}function f(e){return e&&e.length?this.write(e):""}t.StringDecoder=o,o.prototype.write=function(e){if(0===e.length)return"";var t,n;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return"";n=this.lastNeed,this.lastNeed=0}else n=0;return n<e.length?t?t+this.text(e,n):this.text(e,n):t||""},o.prototype.end=function(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+"�".repeat(this.lastTotal-this.lastNeed):t},o.prototype.text=function(e,t){var n=function(e,t,n){var r=t.length-1;if(r<n)return 0;var i=s(t[r]);if(i>=0)return i>0&&(e.lastNeed=i-1),i;if(--r<n)return 0;if((i=s(t[r]))>=0)return i>0&&(e.lastNeed=i-2),i;if(--r<n)return 0;if((i=s(t[r]))>=0)return i>0&&(2===i?i=0:e.lastNeed=i-3),i;return 0}(this,e,t);if(!this.lastNeed)return e.toString("utf8",t);this.lastTotal=n;var r=e.length-(n-this.lastNeed);return e.copy(this.lastChar,0,r),e.toString("utf8",t,r)},o.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}},function(e,t,n){"use strict";var r=n(14);function i(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,n){var r=e.entry;e.entry=null;for(;r;){var i=r.callback;t.pendingcb--,i(n),r=r.next}t.corkedRequestsFree?t.corkedRequestsFree.next=e:t.corkedRequestsFree=e}(t,e)}}e.exports=E;var o,s=!process.browser&&["v0.10","v0.9."].indexOf(process.version.slice(0,5))>-1?setImmediate:r;E.WritableState=d;var a=n(9);a.inherits=n(5);var u={deprecate:n(55)},c=n(29),l=n(6).Buffer,h=global.Uint8Array||function(){};var p,f=n(28);function T(){}function d(e,t){o=o||n(4),e=e||{},this.objectMode=!!e.objectMode,t instanceof o&&(this.objectMode=this.objectMode||!!e.writableObjectMode);var a=e.highWaterMark,u=this.objectMode?16:16384;this.highWaterMark=a||0===a?a:u,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var c=!1===e.decodeStrings;this.decodeStrings=!c,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,t){var n=e._writableState,i=n.sync,o=n.writecb;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(n),t)!function(e,t,n,i,o){--t.pendingcb,n?(r(o,i),r(N,e,t),e._writableState.errorEmitted=!0,e.emit("error",i)):(o(i),e._writableState.errorEmitted=!0,e.emit("error",i),N(e,t))}(e,n,i,t,o);else{var a=g(n);a||n.corked||n.bufferProcessing||!n.bufferedRequest||A(e,n),i?s(_,e,n,a,o):_(e,n,a,o)}}(t,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new i(this)}function E(e){if(o=o||n(4),!(p.call(E,this)||this instanceof o))return new E(e);this._writableState=new d(e,this),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.final&&(this._final=e.final)),c.call(this)}function m(e,t,n,r,i,o,s){t.writelen=r,t.writecb=s,t.writing=!0,t.sync=!0,n?e._writev(i,t.onwrite):e._write(i,o,t.onwrite),t.sync=!1}function _(e,t,n,r){n||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}(e,t),t.pendingcb--,r(),N(e,t)}function A(e,t){t.bufferProcessing=!0;var n=t.bufferedRequest;if(e._writev&&n&&n.next){var r=t.bufferedRequestCount,o=new Array(r),s=t.corkedRequestsFree;s.entry=n;for(var a=0,u=!0;n;)o[a]=n,n.isBuf||(u=!1),n=n.next,a+=1;o.allBuffers=u,m(e,t,!0,t.length,o,"",s.finish),t.pendingcb++,t.lastBufferedRequest=null,s.next?(t.corkedRequestsFree=s.next,s.next=null):t.corkedRequestsFree=new i(t)}else{for(;n;){var c=n.chunk,l=n.encoding,h=n.callback;if(m(e,t,!1,t.objectMode?1:c.length,c,l,h),n=n.next,t.writing)break}null===n&&(t.lastBufferedRequest=null)}t.bufferedRequestCount=0,t.bufferedRequest=n,t.bufferProcessing=!1}function g(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function y(e,t){e._final(function(n){t.pendingcb--,n&&e.emit("error",n),t.prefinished=!0,e.emit("prefinish"),N(e,t)})}function N(e,t){var n=g(t);return n&&(!function(e,t){t.prefinished||t.finalCalled||("function"==typeof e._final?(t.pendingcb++,t.finalCalled=!0,r(y,e,t)):(t.prefinished=!0,e.emit("prefinish")))}(e,t),0===t.pendingcb&&(t.finished=!0,e.emit("finish"))),n}a.inherits(E,c),d.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(d.prototype,"buffer",{get:u.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(p=Function.prototype[Symbol.hasInstance],Object.defineProperty(E,Symbol.hasInstance,{value:function(e){return!!p.call(this,e)||e&&e._writableState instanceof d}})):p=function(e){return e instanceof this},E.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},E.prototype.write=function(e,t,n){var i,o=this._writableState,s=!1,a=(i=e,(l.isBuffer(i)||i instanceof h)&&!o.objectMode);return a&&!l.isBuffer(e)&&(e=function(e){return l.from(e)}(e)),"function"==typeof t&&(n=t,t=null),a?t="buffer":t||(t=o.defaultEncoding),"function"!=typeof n&&(n=T),o.ended?function(e,t){var n=new Error("write after end");e.emit("error",n),r(t,n)}(this,n):(a||function(e,t,n,i){var o=!0,s=!1;return null===n?s=new TypeError("May not write null values to stream"):"string"==typeof n||void 0===n||t.objectMode||(s=new TypeError("Invalid non-string/buffer chunk")),s&&(e.emit("error",s),r(i,s),o=!1),o}(this,o,e,n))&&(o.pendingcb++,s=function(e,t,n,r,i,o){if(!n){var s=function(e,t,n){e.objectMode||!1===e.decodeStrings||"string"!=typeof t||(t=l.from(t,n));return t}(t,r,i);r!==s&&(n=!0,i="buffer",r=s)}var a=t.objectMode?1:r.length;t.length+=a;var u=t.length<t.highWaterMark;u||(t.needDrain=!0);if(t.writing||t.corked){var c=t.lastBufferedRequest;t.lastBufferedRequest={chunk:r,encoding:i,isBuf:n,callback:o,next:null},c?c.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else m(e,t,!1,a,r,i,o);return u}(this,o,a,e,t,n)),s},E.prototype.cork=function(){this._writableState.corked++},E.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.finished||e.bufferProcessing||!e.bufferedRequest||A(this,e))},E.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+e);return this._writableState.defaultEncoding=e,this},E.prototype._write=function(e,t,n){n(new Error("_write() is not implemented"))},E.prototype._writev=null,E.prototype.end=function(e,t,n){var i=this._writableState;"function"==typeof e?(n=e,e=null,t=null):"function"==typeof t&&(n=t,t=null),null!==e&&void 0!==e&&this.write(e,t),i.corked&&(i.corked=1,this.uncork()),i.ending||i.finished||function(e,t,n){t.ending=!0,N(e,t),n&&(t.finished?r(n):e.once("finish",n));t.ended=!0,e.writable=!1}(this,i,n)},Object.defineProperty(E.prototype,"destroyed",{get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),E.prototype.destroy=f.destroy,E.prototype._undestroy=f.undestroy,E.prototype._destroy=function(e,t){this.end(),t(e)}},function(e,t,n){"use strict";var r=n(14);function i(e,t){e.emit("error",t)}e.exports={destroy:function(e,t){var n=this,o=this._readableState&&this._readableState.destroyed,s=this._writableState&&this._writableState.destroyed;o||s?t?t(e):!e||this._writableState&&this._writableState.errorEmitted||r(i,this,e):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(e||null,function(e){!t&&e?(r(i,n,e),n._writableState&&(n._writableState.errorEmitted=!0)):t&&t(e)}))},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}}},function(e,t,n){e.exports=n(7)},function(e,t,n){"use strict";var r=n(14);e.exports=_;var i,o=n(59);_.ReadableState=m;n(58).EventEmitter;var s=function(e,t){return e.listeners(t).length},a=n(29),u=n(6).Buffer,c=global.Uint8Array||function(){};var l=n(9);l.inherits=n(5);var h=n(2),p=void 0;p=h&&h.debuglog?h.debuglog("stream"):function(){};var f,T=n(56),d=n(28);l.inherits(_,a);var E=["error","close","destroy","pause","resume"];function m(e,t){i=i||n(4),e=e||{},this.objectMode=!!e.objectMode,t instanceof i&&(this.objectMode=this.objectMode||!!e.readableObjectMode);var r=e.highWaterMark,o=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:o,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new T,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(f||(f=n(26).StringDecoder),this.decoder=new f(e.encoding),this.encoding=e.encoding)}function _(e){if(i=i||n(4),!(this instanceof _))return new _(e);this._readableState=new m(e,this),this.readable=!0,e&&("function"==typeof e.read&&(this._read=e.read),"function"==typeof e.destroy&&(this._destroy=e.destroy)),a.call(this)}function A(e,t,n,r,i){var o,s=e._readableState;null===t?(s.reading=!1,function(e,t){if(t.ended)return;if(t.decoder){var n=t.decoder.end();n&&n.length&&(t.buffer.push(n),t.length+=t.objectMode?1:n.length)}t.ended=!0,S(e)}(e,s)):(i||(o=function(e,t){var n;r=t,u.isBuffer(r)||r instanceof c||"string"==typeof t||void 0===t||e.objectMode||(n=new TypeError("Invalid non-string/buffer chunk"));var r;return n}(s,t)),o?e.emit("error",o):s.objectMode||t&&t.length>0?("string"==typeof t||s.objectMode||Object.getPrototypeOf(t)===u.prototype||(t=function(e){return u.from(e)}(t)),r?s.endEmitted?e.emit("error",new Error("stream.unshift() after end event")):g(e,s,t,!0):s.ended?e.emit("error",new Error("stream.push() after EOF")):(s.reading=!1,s.decoder&&!n?(t=s.decoder.write(t),s.objectMode||0!==t.length?g(e,s,t,!1):C(e,s)):g(e,s,t,!1))):r||(s.reading=!1));return function(e){return!e.ended&&(e.needReadable||e.length<e.highWaterMark||0===e.length)}(s)}function g(e,t,n,r){t.flowing&&0===t.length&&!t.sync?(e.emit("data",n),e.read(0)):(t.length+=t.objectMode?1:n.length,r?t.buffer.unshift(n):t.buffer.push(n),t.needReadable&&S(e)),C(e,t)}Object.defineProperty(_.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),_.prototype.destroy=d.destroy,_.prototype._undestroy=d.undestroy,_.prototype._destroy=function(e,t){this.push(null),t(e)},_.prototype.push=function(e,t){var n,r=this._readableState;return r.objectMode?n=!0:"string"==typeof e&&((t=t||r.defaultEncoding)!==r.encoding&&(e=u.from(e,t),t=""),n=!0),A(this,e,t,!1,n)},_.prototype.unshift=function(e){return A(this,e,null,!0,!1)},_.prototype.isPaused=function(){return!1===this._readableState.flowing},_.prototype.setEncoding=function(e){return f||(f=n(26).StringDecoder),this._readableState.decoder=new f(e),this._readableState.encoding=e,this};var y=8388608;function N(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=y?e=y:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function S(e){var t=e._readableState;t.needReadable=!1,t.emittedReadable||(p("emitReadable",t.flowing),t.emittedReadable=!0,t.sync?r(v,e):v(e))}function v(e){p("emit readable"),e.emit("readable"),M(e)}function C(e,t){t.readingMore||(t.readingMore=!0,r(O,e,t))}function O(e,t){for(var n=t.length;!t.reading&&!t.flowing&&!t.ended&&t.length<t.highWaterMark&&(p("maybeReadMore read 0"),e.read(0),n!==t.length);)n=t.length;t.readingMore=!1}function R(e){p("readable nexttick read 0"),e.read(0)}function b(e,t){t.reading||(p("resume read 0"),e.read(0)),t.resumeScheduled=!1,t.awaitDrain=0,e.emit("resume"),M(e),t.flowing&&!t.reading&&e.read(0)}function M(e){var t=e._readableState;for(p("flow",t.flowing);t.flowing&&null!==e.read(););}function I(e,t){return 0===t.length?null:(t.objectMode?n=t.buffer.shift():!e||e>=t.length?(n=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.head.data:t.buffer.concat(t.length),t.buffer.clear()):n=function(e,t,n){var r;e<t.head.data.length?(r=t.head.data.slice(0,e),t.head.data=t.head.data.slice(e)):r=e===t.head.data.length?t.shift():n?function(e,t){var n=t.head,r=1,i=n.data;e-=i.length;for(;n=n.next;){var o=n.data,s=e>o.length?o.length:e;if(s===o.length?i+=o:i+=o.slice(0,e),0===(e-=s)){s===o.length?(++r,n.next?t.head=n.next:t.head=t.tail=null):(t.head=n,n.data=o.slice(s));break}++r}return t.length-=r,i}(e,t):function(e,t){var n=u.allocUnsafe(e),r=t.head,i=1;r.data.copy(n),e-=r.data.length;for(;r=r.next;){var o=r.data,s=e>o.length?o.length:e;if(o.copy(n,n.length-e,0,s),0===(e-=s)){s===o.length?(++i,r.next?t.head=r.next:t.head=t.tail=null):(t.head=r,r.data=o.slice(s));break}++i}return t.length-=i,n}(e,t);return r}(e,t.buffer,t.decoder),n);var n}function L(e){var t=e._readableState;if(t.length>0)throw new Error('"endReadable()" called on non-empty stream');t.endEmitted||(t.ended=!0,r(P,t,e))}function P(e,t){e.endEmitted||0!==e.length||(e.endEmitted=!0,t.readable=!1,t.emit("end"))}function k(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1}_.prototype.read=function(e){p("read",e),e=parseInt(e,10);var t=this._readableState,n=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&(t.length>=t.highWaterMark||t.ended))return p("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?L(this):S(this),null;if(0===(e=N(e,t))&&t.ended)return 0===t.length&&L(this),null;var r,i=t.needReadable;return p("need readable",i),(0===t.length||t.length-e<t.highWaterMark)&&p("length less than watermark",i=!0),t.ended||t.reading?p("reading or ended",i=!1):i&&(p("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=N(n,t))),null===(r=e>0?I(e,t):null)?(t.needReadable=!0,e=0):t.length-=e,0===t.length&&(t.ended||(t.needReadable=!0),n!==e&&t.ended&&L(this)),null!==r&&this.emit("data",r),r},_.prototype._read=function(e){this.emit("error",new Error("_read() is not implemented"))},_.prototype.pipe=function(e,t){var n=this,i=this._readableState;switch(i.pipesCount){case 0:i.pipes=e;break;case 1:i.pipes=[i.pipes,e];break;default:i.pipes.push(e)}i.pipesCount+=1,p("pipe count=%d opts=%j",i.pipesCount,t);var a=(!t||!1!==t.end)&&e!==process.stdout&&e!==process.stderr?c:_;function u(t,r){p("onunpipe"),t===n&&r&&!1===r.hasUnpiped&&(r.hasUnpiped=!0,p("cleanup"),e.removeListener("close",E),e.removeListener("finish",m),e.removeListener("drain",l),e.removeListener("error",d),e.removeListener("unpipe",u),n.removeListener("end",c),n.removeListener("end",_),n.removeListener("data",T),h=!0,!i.awaitDrain||e._writableState&&!e._writableState.needDrain||l())}function c(){p("onend"),e.end()}i.endEmitted?r(a):n.once("end",a),e.on("unpipe",u);var l=function(e){return function(){var t=e._readableState;p("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&s(e,"data")&&(t.flowing=!0,M(e))}}(n);e.on("drain",l);var h=!1;var f=!1;function T(t){p("ondata"),f=!1,!1!==e.write(t)||f||((1===i.pipesCount&&i.pipes===e||i.pipesCount>1&&-1!==k(i.pipes,e))&&!h&&(p("false write response, pause",n._readableState.awaitDrain),n._readableState.awaitDrain++,f=!0),n.pause())}function d(t){p("onerror",t),_(),e.removeListener("error",d),0===s(e,"error")&&e.emit("error",t)}function E(){e.removeListener("finish",m),_()}function m(){p("onfinish"),e.removeListener("close",E),_()}function _(){p("unpipe"),n.unpipe(e)}return n.on("data",T),function(e,t,n){if("function"==typeof e.prependListener)return e.prependListener(t,n);e._events&&e._events[t]?o(e._events[t])?e._events[t].unshift(n):e._events[t]=[n,e._events[t]]:e.on(t,n)}(e,"error",d),e.once("close",E),e.once("finish",m),e.emit("pipe",n),i.flowing||(p("pipe resume"),n.resume()),e},_.prototype.unpipe=function(e){var t=this._readableState,n={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes?this:(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this,n),this);if(!e){var r=t.pipes,i=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var o=0;o<i;o++)r[o].emit("unpipe",this,n);return this}var s=k(t.pipes,e);return-1===s?this:(t.pipes.splice(s,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this,n),this)},_.prototype.on=function(e,t){var n=a.prototype.on.call(this,e,t);if("data"===e)!1!==this._readableState.flowing&&this.resume();else if("readable"===e){var i=this._readableState;i.endEmitted||i.readableListening||(i.readableListening=i.needReadable=!0,i.emittedReadable=!1,i.reading?i.length&&S(this):r(R,this))}return n},_.prototype.addListener=_.prototype.on,_.prototype.resume=function(){var e=this._readableState;return e.flowing||(p("resume"),e.flowing=!0,function(e,t){t.resumeScheduled||(t.resumeScheduled=!0,r(b,e,t))}(this,e)),this},_.prototype.pause=function(){return p("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(p("pause"),this._readableState.flowing=!1,this.emit("pause")),this},_.prototype.wrap=function(e){var t=this._readableState,n=!1,r=this;for(var i in e.on("end",function(){if(p("wrapped end"),t.decoder&&!t.ended){var e=t.decoder.end();e&&e.length&&r.push(e)}r.push(null)}),e.on("data",function(i){(p("wrapped data"),t.decoder&&(i=t.decoder.write(i)),!t.objectMode||null!==i&&void 0!==i)&&((t.objectMode||i&&i.length)&&(r.push(i)||(n=!0,e.pause())))}),e)void 0===this[i]&&"function"==typeof e[i]&&(this[i]=function(t){return function(){return e[t].apply(e,arguments)}}(i));for(var o=0;o<E.length;o++)e.on(E[o],r.emit.bind(r,E[o]));return r._read=function(t){p("wrapped _read",t),n&&(n=!1,e.resume())},r},_._fromList=I},function(e,t,n){var r=n(7);"disable"===process.env.READABLE_STREAM&&r?(e.exports=r,(t=e.exports=r.Readable).Readable=r.Readable,t.Writable=r.Writable,t.Duplex=r.Duplex,t.Transform=r.Transform,t.PassThrough=r.PassThrough,t.Stream=r):((t=e.exports=n(30)).Stream=r||t,t.Readable=t,t.Writable=n(27),t.Duplex=n(4),t.Transform=n(25),t.PassThrough=n(54))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(18);t.JsonHubProtocol=class{constructor(){this.name="json",this.type=1}parseMessages(e){if(!e)return[];let t=r.TextMessageFormat.parse(e),n=[];for(var i=0;i<t.length;++i)n.push(JSON.parse(t[i]));return n}writeMessage(e){return r.TextMessageFormat.write(JSON.stringify(e))}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(34);t.HttpClient=class{get(e,t){return this.xhr("GET",e,t)}options(e,t){return this.xhr("OPTIONS",e,t)}post(e,t,n){return this.xhr("POST",e,n,t)}xhr(e,t,n,i){return new Promise((o,s)=>{let a=new XMLHttpRequest;a.open(e,t,!0),a.setRequestHeader("X-Requested-With","XMLHttpRequest"),n&&n.forEach((e,t)=>a.setRequestHeader(t,e)),a.send(i),a.onload=(()=>{a.status>=200&&a.status<300?o(a.response||a.responseText):s(new r.HttpError(a.statusText,a.status))}),a.onerror=(()=>{s(new r.HttpError(a.statusText,a.status))})})}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.HttpError=class extends Error{constructor(e,t){super(e),this.statusCode=t}}},function(e,t,n){e.exports=n(1)(62)},function(e,t,n){"use strict";var r=n(7).Writable,i=n(2).inherits,o=n(40),s=e.exports=function(e){r.call(this),this.parser=new o(e),this.lastChunkWritten=!1,this.writeCallback=null,this.pausedByScript=!1,this.document=this.parser.treeAdapter.createDocument(),this.pendingHtmlInsertions=[],this._resume=this._resume.bind(this),this._documentWrite=this._documentWrite.bind(this),this._scriptHandler=this._scriptHandler.bind(this),this.parser._bootstrap(this.document,null)};i(s,r),s.prototype._write=function(e,t,n){this.writeCallback=n,this.parser.tokenizer.write(e.toString("utf8"),this.lastChunkWritten),this._runParsingLoop()},s.prototype.end=function(e,t,n){this.lastChunkWritten=!0,r.prototype.end.call(this,e,t,n)},s.prototype._runParsingLoop=function(){this.parser.runParsingLoopForCurrentChunk(this.writeCallback,this._scriptHandler)},s.prototype._resume=function(){if(!this.pausedByScript)throw new Error("Parser was already resumed");for(;this.pendingHtmlInsertions.length;){var e=this.pendingHtmlInsertions.pop();this.parser.tokenizer.insertHtmlAtCurrentPos(e)}this.pausedByScript=!1,this.parser.tokenizer.active&&this._runParsingLoop()},s.prototype._documentWrite=function(e){this.parser.stopped||this.pendingHtmlInsertions.push(e)},s.prototype._scriptHandler=function(e){this.listeners("script").length?(this.pausedByScript=!0,this.emit("script",e,this._documentWrite,this._resume)):this._runParsingLoop()}},function(e,t,n){"use strict";var r=n(23),i=n(22),o=n(21),s=n(3),a=s.TAG_NAMES,u=s.NAMESPACES,c={treeAdapter:r},l=/&/g,h=/\u00a0/g,p=/"/g,f=/</g,T=/>/g,d=e.exports=function(e,t){this.options=o(c,t),this.treeAdapter=this.options.treeAdapter,this.html="",this.startNode=e};d.escapeString=function(e,t){return e=e.replace(l,"&amp;").replace(h,"&nbsp;"),e=t?e.replace(p,"&quot;"):e.replace(f,"&lt;").replace(T,"&gt;")},d.prototype.serialize=function(){return this._serializeChildNodes(this.startNode),this.html},d.prototype._serializeChildNodes=function(e){var t=this.treeAdapter.getChildNodes(e);if(t)for(var n=0,r=t.length;n<r;n++){var i=t[n];this.treeAdapter.isElementNode(i)?this._serializeElement(i):this.treeAdapter.isTextNode(i)?this._serializeTextNode(i):this.treeAdapter.isCommentNode(i)?this._serializeCommentNode(i):this.treeAdapter.isDocumentTypeNode(i)&&this._serializeDocumentTypeNode(i)}},d.prototype._serializeElement=function(e){var t=this.treeAdapter.getTagName(e),n=this.treeAdapter.getNamespaceURI(e);if(this.html+="<"+t,this._serializeAttributes(e),this.html+=">",t!==a.AREA&&t!==a.BASE&&t!==a.BASEFONT&&t!==a.BGSOUND&&t!==a.BR&&t!==a.BR&&t!==a.COL&&t!==a.EMBED&&t!==a.FRAME&&t!==a.HR&&t!==a.IMG&&t!==a.INPUT&&t!==a.KEYGEN&&t!==a.LINK&&t!==a.MENUITEM&&t!==a.META&&t!==a.PARAM&&t!==a.SOURCE&&t!==a.TRACK&&t!==a.WBR){var r=t===a.TEMPLATE&&n===u.HTML?this.treeAdapter.getTemplateContent(e):e;this._serializeChildNodes(r),this.html+="</"+t+">"}},d.prototype._serializeAttributes=function(e){for(var t=this.treeAdapter.getAttrList(e),n=0,r=t.length;n<r;n++){var i=t[n],o=d.escapeString(i.value,!0);this.html+=" ",i.namespace?i.namespace===u.XML?this.html+="xml:"+i.name:i.namespace===u.XMLNS?("xmlns"!==i.name&&(this.html+="xmlns:"),this.html+=i.name):i.namespace===u.XLINK?this.html+="xlink:"+i.name:this.html+=i.namespace+":"+i.name:this.html+=i.name,this.html+='="'+o+'"'}},d.prototype._serializeTextNode=function(e){var t=this.treeAdapter.getTextNodeContent(e),n=this.treeAdapter.getParentNode(e),r=void 0;n&&this.treeAdapter.isElementNode(n)&&(r=this.treeAdapter.getTagName(n)),r===a.STYLE||r===a.SCRIPT||r===a.XMP||r===a.IFRAME||r===a.NOEMBED||r===a.NOFRAMES||r===a.PLAINTEXT||r===a.NOSCRIPT?this.html+=t:this.html+=d.escapeString(t,!1)},d.prototype._serializeCommentNode=function(e){this.html+="\x3c!--"+this.treeAdapter.getCommentNodeContent(e)+"--\x3e"},d.prototype._serializeDocumentTypeNode=function(e){var t=this.treeAdapter.getDocumentTypeNodeName(e);this.html+="<"+i.serializeContent(t,null,null)+">"}},function(e,t,n){"use strict";var r=n(12),i=n(3),o=i.TAG_NAMES,s=i.NAMESPACES,a=i.ATTRS,u={TEXT_HTML:"text/html",APPLICATION_XML:"application/xhtml+xml"},c={attributename:"attributeName",attributetype:"attributeType",basefrequency:"baseFrequency",baseprofile:"baseProfile",calcmode:"calcMode",clippathunits:"clipPathUnits",diffuseconstant:"diffuseConstant",edgemode:"edgeMode",filterunits:"filterUnits",glyphref:"glyphRef",gradienttransform:"gradientTransform",gradientunits:"gradientUnits",kernelmatrix:"kernelMatrix",kernelunitlength:"kernelUnitLength",keypoints:"keyPoints",keysplines:"keySplines",keytimes:"keyTimes",lengthadjust:"lengthAdjust",limitingconeangle:"limitingConeAngle",markerheight:"markerHeight",markerunits:"markerUnits",markerwidth:"markerWidth",maskcontentunits:"maskContentUnits",maskunits:"maskUnits",numoctaves:"numOctaves",pathlength:"pathLength",patterncontentunits:"patternContentUnits",patterntransform:"patternTransform",patternunits:"patternUnits",pointsatx:"pointsAtX",pointsaty:"pointsAtY",pointsatz:"pointsAtZ",preservealpha:"preserveAlpha",preserveaspectratio:"preserveAspectRatio",primitiveunits:"primitiveUnits",refx:"refX",refy:"refY",repeatcount:"repeatCount",repeatdur:"repeatDur",requiredextensions:"requiredExtensions",requiredfeatures:"requiredFeatures",specularconstant:"specularConstant",specularexponent:"specularExponent",spreadmethod:"spreadMethod",startoffset:"startOffset",stddeviation:"stdDeviation",stitchtiles:"stitchTiles",surfacescale:"surfaceScale",systemlanguage:"systemLanguage",tablevalues:"tableValues",targetx:"targetX",targety:"targetY",textlength:"textLength",viewbox:"viewBox",viewtarget:"viewTarget",xchannelselector:"xChannelSelector",ychannelselector:"yChannelSelector",zoomandpan:"zoomAndPan"},l={"xlink:actuate":{prefix:"xlink",name:"actuate",namespace:s.XLINK},"xlink:arcrole":{prefix:"xlink",name:"arcrole",namespace:s.XLINK},"xlink:href":{prefix:"xlink",name:"href",namespace:s.XLINK},"xlink:role":{prefix:"xlink",name:"role",namespace:s.XLINK},"xlink:show":{prefix:"xlink",name:"show",namespace:s.XLINK},"xlink:title":{prefix:"xlink",name:"title",namespace:s.XLINK},"xlink:type":{prefix:"xlink",name:"type",namespace:s.XLINK},"xml:base":{prefix:"xml",name:"base",namespace:s.XML},"xml:lang":{prefix:"xml",name:"lang",namespace:s.XML},"xml:space":{prefix:"xml",name:"space",namespace:s.XML},xmlns:{prefix:"",name:"xmlns",namespace:s.XMLNS},"xmlns:xlink":{prefix:"xmlns",name:"xlink",namespace:s.XMLNS}},h=t.SVG_TAG_NAMES_ADJUSTMENT_MAP={altglyph:"altGlyph",altglyphdef:"altGlyphDef",altglyphitem:"altGlyphItem",animatecolor:"animateColor",animatemotion:"animateMotion",animatetransform:"animateTransform",clippath:"clipPath",feblend:"feBlend",fecolormatrix:"feColorMatrix",fecomponenttransfer:"feComponentTransfer",fecomposite:"feComposite",feconvolvematrix:"feConvolveMatrix",fediffuselighting:"feDiffuseLighting",fedisplacementmap:"feDisplacementMap",fedistantlight:"feDistantLight",feflood:"feFlood",fefunca:"feFuncA",fefuncb:"feFuncB",fefuncg:"feFuncG",fefuncr:"feFuncR",fegaussianblur:"feGaussianBlur",feimage:"feImage",femerge:"feMerge",femergenode:"feMergeNode",femorphology:"feMorphology",feoffset:"feOffset",fepointlight:"fePointLight",fespecularlighting:"feSpecularLighting",fespotlight:"feSpotLight",fetile:"feTile",feturbulence:"feTurbulence",foreignobject:"foreignObject",glyphref:"glyphRef",lineargradient:"linearGradient",radialgradient:"radialGradient",textpath:"textPath"},p=Object.create(null);p[o.B]=!0,p[o.BIG]=!0,p[o.BLOCKQUOTE]=!0,p[o.BODY]=!0,p[o.BR]=!0,p[o.CENTER]=!0,p[o.CODE]=!0,p[o.DD]=!0,p[o.DIV]=!0,p[o.DL]=!0,p[o.DT]=!0,p[o.EM]=!0,p[o.EMBED]=!0,p[o.H1]=!0,p[o.H2]=!0,p[o.H3]=!0,p[o.H4]=!0,p[o.H5]=!0,p[o.H6]=!0,p[o.HEAD]=!0,p[o.HR]=!0,p[o.I]=!0,p[o.IMG]=!0,p[o.LI]=!0,p[o.LISTING]=!0,p[o.MENU]=!0,p[o.META]=!0,p[o.NOBR]=!0,p[o.OL]=!0,p[o.P]=!0,p[o.PRE]=!0,p[o.RUBY]=!0,p[o.S]=!0,p[o.SMALL]=!0,p[o.SPAN]=!0,p[o.STRONG]=!0,p[o.STRIKE]=!0,p[o.SUB]=!0,p[o.SUP]=!0,p[o.TABLE]=!0,p[o.TT]=!0,p[o.U]=!0,p[o.UL]=!0,p[o.VAR]=!0,t.causesExit=function(e){var t=e.tagName;return!!(t===o.FONT&&(null!==r.getTokenAttr(e,a.COLOR)||null!==r.getTokenAttr(e,a.SIZE)||null!==r.getTokenAttr(e,a.FACE)))||p[t]},t.adjustTokenMathMLAttrs=function(e){for(var t=0;t<e.attrs.length;t++)if("definitionurl"===e.attrs[t].name){e.attrs[t].name="definitionURL";break}},t.adjustTokenSVGAttrs=function(e){for(var t=0;t<e.attrs.length;t++){var n=c[e.attrs[t].name];n&&(e.attrs[t].name=n)}},t.adjustTokenXMLAttrs=function(e){for(var t=0;t<e.attrs.length;t++){var n=l[e.attrs[t].name];n&&(e.attrs[t].prefix=n.prefix,e.attrs[t].name=n.name,e.attrs[t].namespace=n.namespace)}},t.adjustTokenSVGTagName=function(e){var t=h[e.tagName];t&&(e.tagName=t)},t.isIntegrationPoint=function(e,t,n,r){return!(r&&r!==s.HTML||!function(e,t,n){if(t===s.MATHML&&e===o.ANNOTATION_XML)for(var r=0;r<n.length;r++)if(n[r].name===a.ENCODING){var i=n[r].value.toLowerCase();return i===u.TEXT_HTML||i===u.APPLICATION_XML}return t===s.SVG&&(e===o.FOREIGN_OBJECT||e===o.DESC||e===o.TITLE)}(e,t,n))||!(r&&r!==s.MATHML||!function(e,t){return t===s.MATHML&&(e===o.MI||e===o.MO||e===o.MN||e===o.MS||e===o.MTEXT)}(e,t))}},function(e,t,n){"use strict";var r=n(3),i=r.TAG_NAMES,o=r.NAMESPACES;function s(e){switch(e.length){case 1:return e===i.P;case 2:return e===i.RB||e===i.RP||e===i.RT||e===i.DD||e===i.DT||e===i.LI;case 3:return e===i.RTC;case 6:return e===i.OPTION;case 8:return e===i.OPTGROUP||e===i.MENUITEM}return!1}function a(e,t){switch(e.length){case 2:if(e===i.TD||e===i.TH)return t===o.HTML;if(e===i.MI||e===i.MO||e===i.MN||e===i.MS)return t===o.MATHML;break;case 4:if(e===i.HTML)return t===o.HTML;if(e===i.DESC)return t===o.SVG;break;case 5:if(e===i.TABLE)return t===o.HTML;if(e===i.MTEXT)return t===o.MATHML;if(e===i.TITLE)return t===o.SVG;break;case 6:return(e===i.APPLET||e===i.OBJECT)&&t===o.HTML;case 7:return(e===i.CAPTION||e===i.MARQUEE)&&t===o.HTML;case 8:return e===i.TEMPLATE&&t===o.HTML;case 13:return e===i.FOREIGN_OBJECT&&t===o.SVG;case 14:return e===i.ANNOTATION_XML&&t===o.MATHML}return!1}var u=e.exports=function(e,t){this.stackTop=-1,this.items=[],this.current=e,this.currentTagName=null,this.currentTmplContent=null,this.tmplCount=0,this.treeAdapter=t};u.prototype._indexOf=function(e){for(var t=-1,n=this.stackTop;n>=0;n--)if(this.items[n]===e){t=n;break}return t},u.prototype._isInTemplate=function(){return this.currentTagName===i.TEMPLATE&&this.treeAdapter.getNamespaceURI(this.current)===o.HTML},u.prototype._updateCurrentElement=function(){this.current=this.items[this.stackTop],this.currentTagName=this.current&&this.treeAdapter.getTagName(this.current),this.currentTmplContent=this._isInTemplate()?this.treeAdapter.getTemplateContent(this.current):null},u.prototype.push=function(e){this.items[++this.stackTop]=e,this._updateCurrentElement(),this._isInTemplate()&&this.tmplCount++},u.prototype.pop=function(){this.stackTop--,this.tmplCount>0&&this._isInTemplate()&&this.tmplCount--,this._updateCurrentElement()},u.prototype.replace=function(e,t){var n=this._indexOf(e);this.items[n]=t,n===this.stackTop&&this._updateCurrentElement()},u.prototype.insertAfter=function(e,t){var n=this._indexOf(e)+1;this.items.splice(n,0,t),n===++this.stackTop&&this._updateCurrentElement()},u.prototype.popUntilTagNamePopped=function(e){for(;this.stackTop>-1;){var t=this.currentTagName,n=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),t===e&&n===o.HTML)break}},u.prototype.popUntilElementPopped=function(e){for(;this.stackTop>-1;){var t=this.current;if(this.pop(),t===e)break}},u.prototype.popUntilNumberedHeaderPopped=function(){for(;this.stackTop>-1;){var e=this.currentTagName,t=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),e===i.H1||e===i.H2||e===i.H3||e===i.H4||e===i.H5||e===i.H6&&t===o.HTML)break}},u.prototype.popUntilTableCellPopped=function(){for(;this.stackTop>-1;){var e=this.currentTagName,t=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),e===i.TD||e===i.TH&&t===o.HTML)break}},u.prototype.popAllUpToHtmlElement=function(){this.stackTop=0,this._updateCurrentElement()},u.prototype.clearBackToTableContext=function(){for(;this.currentTagName!==i.TABLE&&this.currentTagName!==i.TEMPLATE&&this.currentTagName!==i.HTML||this.treeAdapter.getNamespaceURI(this.current)!==o.HTML;)this.pop()},u.prototype.clearBackToTableBodyContext=function(){for(;this.currentTagName!==i.TBODY&&this.currentTagName!==i.TFOOT&&this.currentTagName!==i.THEAD&&this.currentTagName!==i.TEMPLATE&&this.currentTagName!==i.HTML||this.treeAdapter.getNamespaceURI(this.current)!==o.HTML;)this.pop()},u.prototype.clearBackToTableRowContext=function(){for(;this.currentTagName!==i.TR&&this.currentTagName!==i.TEMPLATE&&this.currentTagName!==i.HTML||this.treeAdapter.getNamespaceURI(this.current)!==o.HTML;)this.pop()},u.prototype.remove=function(e){for(var t=this.stackTop;t>=0;t--)if(this.items[t]===e){this.items.splice(t,1),this.stackTop--,this._updateCurrentElement();break}},u.prototype.tryPeekProperlyNestedBodyElement=function(){var e=this.items[1];return e&&this.treeAdapter.getTagName(e)===i.BODY?e:null},u.prototype.contains=function(e){return this._indexOf(e)>-1},u.prototype.getCommonAncestor=function(e){var t=this._indexOf(e);return--t>=0?this.items[t]:null},u.prototype.isRootHtmlElementCurrent=function(){return 0===this.stackTop&&this.currentTagName===i.HTML},u.prototype.hasInScope=function(e){for(var t=this.stackTop;t>=0;t--){var n=this.treeAdapter.getTagName(this.items[t]),r=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&r===o.HTML)return!0;if(a(n,r))return!1}return!0},u.prototype.hasNumberedHeaderInScope=function(){for(var e=this.stackTop;e>=0;e--){var t=this.treeAdapter.getTagName(this.items[e]),n=this.treeAdapter.getNamespaceURI(this.items[e]);if((t===i.H1||t===i.H2||t===i.H3||t===i.H4||t===i.H5||t===i.H6)&&n===o.HTML)return!0;if(a(t,n))return!1}return!0},u.prototype.hasInListItemScope=function(e){for(var t=this.stackTop;t>=0;t--){var n=this.treeAdapter.getTagName(this.items[t]),r=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&r===o.HTML)return!0;if((n===i.UL||n===i.OL)&&r===o.HTML||a(n,r))return!1}return!0},u.prototype.hasInButtonScope=function(e){for(var t=this.stackTop;t>=0;t--){var n=this.treeAdapter.getTagName(this.items[t]),r=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&r===o.HTML)return!0;if(n===i.BUTTON&&r===o.HTML||a(n,r))return!1}return!0},u.prototype.hasInTableScope=function(e){for(var t=this.stackTop;t>=0;t--){var n=this.treeAdapter.getTagName(this.items[t]);if(this.treeAdapter.getNamespaceURI(this.items[t])===o.HTML){if(n===e)return!0;if(n===i.TABLE||n===i.TEMPLATE||n===i.HTML)return!1}}return!0},u.prototype.hasTableBodyContextInTableScope=function(){for(var e=this.stackTop;e>=0;e--){var t=this.treeAdapter.getTagName(this.items[e]);if(this.treeAdapter.getNamespaceURI(this.items[e])===o.HTML){if(t===i.TBODY||t===i.THEAD||t===i.TFOOT)return!0;if(t===i.TABLE||t===i.HTML)return!1}}return!0},u.prototype.hasInSelectScope=function(e){for(var t=this.stackTop;t>=0;t--){var n=this.treeAdapter.getTagName(this.items[t]);if(this.treeAdapter.getNamespaceURI(this.items[t])===o.HTML){if(n===e)return!0;if(n!==i.OPTION&&n!==i.OPTGROUP)return!1}}return!0},u.prototype.generateImpliedEndTags=function(){for(;s(this.currentTagName);)this.pop()},u.prototype.generateImpliedEndTagsWithExclusion=function(e){for(;s(this.currentTagName)&&this.currentTagName!==e;)this.pop()}},function(e,t,n){"use strict";var r=n(12),i=n(39),o=n(86),s=n(85),a=n(23),u=n(22),c=n(38),l=n(21),h=n(11),p=n(3),f=p.TAG_NAMES,T=p.NAMESPACES,d=p.ATTRS,E={locationInfo:!1,treeAdapter:a},m="hidden",_=8,A=3,g="BEFORE_HTML_MODE",y="BEFORE_HEAD_MODE",N="IN_HEAD_MODE",S="AFTER_HEAD_MODE",v="IN_BODY_MODE",C="TEXT_MODE",O="IN_TABLE_MODE",R="IN_TABLE_TEXT_MODE",b="IN_CAPTION_MODE",M="IN_COLUMN_GROUP_MODE",I="IN_TABLE_BODY_MODE",L="IN_ROW_MODE",P="IN_CELL_MODE",k="IN_SELECT_MODE",w="IN_SELECT_IN_TABLE_MODE",D="IN_TEMPLATE_MODE",H="AFTER_BODY_MODE",U="IN_FRAMESET_MODE",x="AFTER_FRAMESET_MODE",B="AFTER_AFTER_BODY_MODE",F="AFTER_AFTER_FRAMESET_MODE",G=Object.create(null);G[f.TR]=L,G[f.TBODY]=G[f.THEAD]=G[f.TFOOT]=I,G[f.CAPTION]=b,G[f.COLGROUP]=M,G[f.TABLE]=O,G[f.BODY]=v,G[f.FRAMESET]=U;var K=Object.create(null);K[f.CAPTION]=K[f.COLGROUP]=K[f.TBODY]=K[f.TFOOT]=K[f.THEAD]=O,K[f.COL]=M,K[f.TR]=I,K[f.TD]=K[f.TH]=L;var j=Object.create(null);j.INITIAL_MODE=Object.create(null),j.INITIAL_MODE[r.CHARACTER_TOKEN]=j.INITIAL_MODE[r.NULL_CHARACTER_TOKEN]=re,j.INITIAL_MODE[r.WHITESPACE_CHARACTER_TOKEN]=J,j.INITIAL_MODE[r.COMMENT_TOKEN]=Z,j.INITIAL_MODE[r.DOCTYPE_TOKEN]=function(e,t){e._setDocumentType(t);var n=t.forceQuirks?p.DOCUMENT_MODE.QUIRKS:u.getDocumentMode(t.name,t.publicId,t.systemId);e.treeAdapter.setDocumentMode(e.document,n),e.insertionMode=g},j.INITIAL_MODE[r.START_TAG_TOKEN]=j.INITIAL_MODE[r.END_TAG_TOKEN]=j.INITIAL_MODE[r.EOF_TOKEN]=re,j[g]=Object.create(null),j[g][r.CHARACTER_TOKEN]=j[g][r.NULL_CHARACTER_TOKEN]=ie,j[g][r.WHITESPACE_CHARACTER_TOKEN]=J,j[g][r.COMMENT_TOKEN]=Z,j[g][r.DOCTYPE_TOKEN]=J,j[g][r.START_TAG_TOKEN]=function(e,t){t.tagName===f.HTML?(e._insertElement(t,T.HTML),e.insertionMode=y):ie(e,t)},j[g][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n!==f.HTML&&n!==f.HEAD&&n!==f.BODY&&n!==f.BR||ie(e,t)},j[g][r.EOF_TOKEN]=ie,j[y]=Object.create(null),j[y][r.CHARACTER_TOKEN]=j[y][r.NULL_CHARACTER_TOKEN]=oe,j[y][r.WHITESPACE_CHARACTER_TOKEN]=J,j[y][r.COMMENT_TOKEN]=Z,j[y][r.DOCTYPE_TOKEN]=J,j[y][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.HTML?Ne(e,t):n===f.HEAD?(e._insertElement(t,T.HTML),e.headElement=e.openElements.current,e.insertionMode=N):oe(e,t)},j[y][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n!==f.HEAD&&n!==f.BODY&&n!==f.HTML&&n!==f.BR||oe(e,t)},j[y][r.EOF_TOKEN]=oe,j[N]=Object.create(null),j[N][r.CHARACTER_TOKEN]=j[N][r.NULL_CHARACTER_TOKEN]=ue,j[N][r.WHITESPACE_CHARACTER_TOKEN]=te,j[N][r.COMMENT_TOKEN]=Z,j[N][r.DOCTYPE_TOKEN]=J,j[N][r.START_TAG_TOKEN]=se,j[N][r.END_TAG_TOKEN]=ae,j[N][r.EOF_TOKEN]=ue,j[S]=Object.create(null),j[S][r.CHARACTER_TOKEN]=j[S][r.NULL_CHARACTER_TOKEN]=ce,j[S][r.WHITESPACE_CHARACTER_TOKEN]=te,j[S][r.COMMENT_TOKEN]=Z,j[S][r.DOCTYPE_TOKEN]=J,j[S][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.HTML?Ne(e,t):n===f.BODY?(e._insertElement(t,T.HTML),e.framesetOk=!1,e.insertionMode=v):n===f.FRAMESET?(e._insertElement(t,T.HTML),e.insertionMode=U):n===f.BASE||n===f.BASEFONT||n===f.BGSOUND||n===f.LINK||n===f.META||n===f.NOFRAMES||n===f.SCRIPT||n===f.STYLE||n===f.TEMPLATE||n===f.TITLE?(e.openElements.push(e.headElement),se(e,t),e.openElements.remove(e.headElement)):n!==f.HEAD&&ce(e,t)},j[S][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.BODY||n===f.HTML||n===f.BR?ce(e,t):n===f.TEMPLATE&&ae(e,t)},j[S][r.EOF_TOKEN]=ce,j[v]=Object.create(null),j[v][r.CHARACTER_TOKEN]=he,j[v][r.NULL_CHARACTER_TOKEN]=J,j[v][r.WHITESPACE_CHARACTER_TOKEN]=le,j[v][r.COMMENT_TOKEN]=Z,j[v][r.DOCTYPE_TOKEN]=J,j[v][r.START_TAG_TOKEN]=Ne,j[v][r.END_TAG_TOKEN]=Oe,j[v][r.EOF_TOKEN]=Re,j[C]=Object.create(null),j[C][r.CHARACTER_TOKEN]=j[C][r.NULL_CHARACTER_TOKEN]=j[C][r.WHITESPACE_CHARACTER_TOKEN]=te,j[C][r.COMMENT_TOKEN]=j[C][r.DOCTYPE_TOKEN]=j[C][r.START_TAG_TOKEN]=J,j[C][r.END_TAG_TOKEN]=function(e,t){t.tagName===f.SCRIPT&&(e.pendingScript=e.openElements.current);e.openElements.pop(),e.insertionMode=e.originalInsertionMode},j[C][r.EOF_TOKEN]=function(e,t){e.openElements.pop(),e.insertionMode=e.originalInsertionMode,e._processToken(t)},j[O]=Object.create(null),j[O][r.CHARACTER_TOKEN]=j[O][r.NULL_CHARACTER_TOKEN]=j[O][r.WHITESPACE_CHARACTER_TOKEN]=be,j[O][r.COMMENT_TOKEN]=Z,j[O][r.DOCTYPE_TOKEN]=J,j[O][r.START_TAG_TOKEN]=Me,j[O][r.END_TAG_TOKEN]=Ie,j[O][r.EOF_TOKEN]=Re,j[R]=Object.create(null),j[R][r.CHARACTER_TOKEN]=function(e,t){e.pendingCharacterTokens.push(t),e.hasNonWhitespacePendingCharacterToken=!0},j[R][r.NULL_CHARACTER_TOKEN]=J,j[R][r.WHITESPACE_CHARACTER_TOKEN]=function(e,t){e.pendingCharacterTokens.push(t)},j[R][r.COMMENT_TOKEN]=j[R][r.DOCTYPE_TOKEN]=j[R][r.START_TAG_TOKEN]=j[R][r.END_TAG_TOKEN]=j[R][r.EOF_TOKEN]=function(e,t){var n=0;if(e.hasNonWhitespacePendingCharacterToken)for(;n<e.pendingCharacterTokens.length;n++)Le(e,e.pendingCharacterTokens[n]);else for(;n<e.pendingCharacterTokens.length;n++)e._insertCharacters(e.pendingCharacterTokens[n]);e.insertionMode=e.originalInsertionMode,e._processToken(t)},j[b]=Object.create(null),j[b][r.CHARACTER_TOKEN]=he,j[b][r.NULL_CHARACTER_TOKEN]=J,j[b][r.WHITESPACE_CHARACTER_TOKEN]=le,j[b][r.COMMENT_TOKEN]=Z,j[b][r.DOCTYPE_TOKEN]=J,j[b][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.CAPTION||n===f.COL||n===f.COLGROUP||n===f.TBODY||n===f.TD||n===f.TFOOT||n===f.TH||n===f.THEAD||n===f.TR?e.openElements.hasInTableScope(f.CAPTION)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(f.CAPTION),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=O,e._processToken(t)):Ne(e,t)},j[b][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.CAPTION||n===f.TABLE?e.openElements.hasInTableScope(f.CAPTION)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(f.CAPTION),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=O,n===f.TABLE&&e._processToken(t)):n!==f.BODY&&n!==f.COL&&n!==f.COLGROUP&&n!==f.HTML&&n!==f.TBODY&&n!==f.TD&&n!==f.TFOOT&&n!==f.TH&&n!==f.THEAD&&n!==f.TR&&Oe(e,t)},j[b][r.EOF_TOKEN]=Re,j[M]=Object.create(null),j[M][r.CHARACTER_TOKEN]=j[M][r.NULL_CHARACTER_TOKEN]=Pe,j[M][r.WHITESPACE_CHARACTER_TOKEN]=te,j[M][r.COMMENT_TOKEN]=Z,j[M][r.DOCTYPE_TOKEN]=J,j[M][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.HTML?Ne(e,t):n===f.COL?e._appendElement(t,T.HTML):n===f.TEMPLATE?se(e,t):Pe(e,t)},j[M][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.COLGROUP?e.openElements.currentTagName===f.COLGROUP&&(e.openElements.pop(),e.insertionMode=O):n===f.TEMPLATE?ae(e,t):n!==f.COL&&Pe(e,t)},j[M][r.EOF_TOKEN]=Re,j[I]=Object.create(null),j[I][r.CHARACTER_TOKEN]=j[I][r.NULL_CHARACTER_TOKEN]=j[I][r.WHITESPACE_CHARACTER_TOKEN]=be,j[I][r.COMMENT_TOKEN]=Z,j[I][r.DOCTYPE_TOKEN]=J,j[I][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.TR?(e.openElements.clearBackToTableBodyContext(),e._insertElement(t,T.HTML),e.insertionMode=L):n===f.TH||n===f.TD?(e.openElements.clearBackToTableBodyContext(),e._insertFakeElement(f.TR),e.insertionMode=L,e._processToken(t)):n===f.CAPTION||n===f.COL||n===f.COLGROUP||n===f.TBODY||n===f.TFOOT||n===f.THEAD?e.openElements.hasTableBodyContextInTableScope()&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=O,e._processToken(t)):Me(e,t)},j[I][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.TBODY||n===f.TFOOT||n===f.THEAD?e.openElements.hasInTableScope(n)&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=O):n===f.TABLE?e.openElements.hasTableBodyContextInTableScope()&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=O,e._processToken(t)):(n!==f.BODY&&n!==f.CAPTION&&n!==f.COL&&n!==f.COLGROUP||n!==f.HTML&&n!==f.TD&&n!==f.TH&&n!==f.TR)&&Ie(e,t)},j[I][r.EOF_TOKEN]=Re,j[L]=Object.create(null),j[L][r.CHARACTER_TOKEN]=j[L][r.NULL_CHARACTER_TOKEN]=j[L][r.WHITESPACE_CHARACTER_TOKEN]=be,j[L][r.COMMENT_TOKEN]=Z,j[L][r.DOCTYPE_TOKEN]=J,j[L][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.TH||n===f.TD?(e.openElements.clearBackToTableRowContext(),e._insertElement(t,T.HTML),e.insertionMode=P,e.activeFormattingElements.insertMarker()):n===f.CAPTION||n===f.COL||n===f.COLGROUP||n===f.TBODY||n===f.TFOOT||n===f.THEAD||n===f.TR?e.openElements.hasInTableScope(f.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=I,e._processToken(t)):Me(e,t)},j[L][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.TR?e.openElements.hasInTableScope(f.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=I):n===f.TABLE?e.openElements.hasInTableScope(f.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=I,e._processToken(t)):n===f.TBODY||n===f.TFOOT||n===f.THEAD?(e.openElements.hasInTableScope(n)||e.openElements.hasInTableScope(f.TR))&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=I,e._processToken(t)):(n!==f.BODY&&n!==f.CAPTION&&n!==f.COL&&n!==f.COLGROUP||n!==f.HTML&&n!==f.TD&&n!==f.TH)&&Ie(e,t)},j[L][r.EOF_TOKEN]=Re,j[P]=Object.create(null),j[P][r.CHARACTER_TOKEN]=he,j[P][r.NULL_CHARACTER_TOKEN]=J,j[P][r.WHITESPACE_CHARACTER_TOKEN]=le,j[P][r.COMMENT_TOKEN]=Z,j[P][r.DOCTYPE_TOKEN]=J,j[P][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.CAPTION||n===f.COL||n===f.COLGROUP||n===f.TBODY||n===f.TD||n===f.TFOOT||n===f.TH||n===f.THEAD||n===f.TR?(e.openElements.hasInTableScope(f.TD)||e.openElements.hasInTableScope(f.TH))&&(e._closeTableCell(),e._processToken(t)):Ne(e,t)},j[P][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.TD||n===f.TH?e.openElements.hasInTableScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=L):n===f.TABLE||n===f.TBODY||n===f.TFOOT||n===f.THEAD||n===f.TR?e.openElements.hasInTableScope(n)&&(e._closeTableCell(),e._processToken(t)):n!==f.BODY&&n!==f.CAPTION&&n!==f.COL&&n!==f.COLGROUP&&n!==f.HTML&&Oe(e,t)},j[P][r.EOF_TOKEN]=Re,j[k]=Object.create(null),j[k][r.CHARACTER_TOKEN]=te,j[k][r.NULL_CHARACTER_TOKEN]=J,j[k][r.WHITESPACE_CHARACTER_TOKEN]=te,j[k][r.COMMENT_TOKEN]=Z,j[k][r.DOCTYPE_TOKEN]=J,j[k][r.START_TAG_TOKEN]=ke,j[k][r.END_TAG_TOKEN]=we,j[k][r.EOF_TOKEN]=Re,j[w]=Object.create(null),j[w][r.CHARACTER_TOKEN]=te,j[w][r.NULL_CHARACTER_TOKEN]=J,j[w][r.WHITESPACE_CHARACTER_TOKEN]=te,j[w][r.COMMENT_TOKEN]=Z,j[w][r.DOCTYPE_TOKEN]=J,j[w][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.CAPTION||n===f.TABLE||n===f.TBODY||n===f.TFOOT||n===f.THEAD||n===f.TR||n===f.TD||n===f.TH?(e.openElements.popUntilTagNamePopped(f.SELECT),e._resetInsertionMode(),e._processToken(t)):ke(e,t)},j[w][r.END_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.CAPTION||n===f.TABLE||n===f.TBODY||n===f.TFOOT||n===f.THEAD||n===f.TR||n===f.TD||n===f.TH?e.openElements.hasInTableScope(n)&&(e.openElements.popUntilTagNamePopped(f.SELECT),e._resetInsertionMode(),e._processToken(t)):we(e,t)},j[w][r.EOF_TOKEN]=Re,j[D]=Object.create(null),j[D][r.CHARACTER_TOKEN]=he,j[D][r.NULL_CHARACTER_TOKEN]=J,j[D][r.WHITESPACE_CHARACTER_TOKEN]=le,j[D][r.COMMENT_TOKEN]=Z,j[D][r.DOCTYPE_TOKEN]=J,j[D][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;if(n===f.BASE||n===f.BASEFONT||n===f.BGSOUND||n===f.LINK||n===f.META||n===f.NOFRAMES||n===f.SCRIPT||n===f.STYLE||n===f.TEMPLATE||n===f.TITLE)se(e,t);else{var r=K[n]||v;e._popTmplInsertionMode(),e._pushTmplInsertionMode(r),e.insertionMode=r,e._processToken(t)}},j[D][r.END_TAG_TOKEN]=function(e,t){t.tagName===f.TEMPLATE&&ae(e,t)},j[D][r.EOF_TOKEN]=De,j[H]=Object.create(null),j[H][r.CHARACTER_TOKEN]=j[H][r.NULL_CHARACTER_TOKEN]=He,j[H][r.WHITESPACE_CHARACTER_TOKEN]=le,j[H][r.COMMENT_TOKEN]=function(e,t){e._appendCommentNode(t,e.openElements.items[0])},j[H][r.DOCTYPE_TOKEN]=J,j[H][r.START_TAG_TOKEN]=function(e,t){t.tagName===f.HTML?Ne(e,t):He(e,t)},j[H][r.END_TAG_TOKEN]=function(e,t){t.tagName===f.HTML?e.fragmentContext||(e.insertionMode=B):He(e,t)},j[H][r.EOF_TOKEN]=ne,j[U]=Object.create(null),j[U][r.CHARACTER_TOKEN]=j[U][r.NULL_CHARACTER_TOKEN]=J,j[U][r.WHITESPACE_CHARACTER_TOKEN]=te,j[U][r.COMMENT_TOKEN]=Z,j[U][r.DOCTYPE_TOKEN]=J,j[U][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.HTML?Ne(e,t):n===f.FRAMESET?e._insertElement(t,T.HTML):n===f.FRAME?e._appendElement(t,T.HTML):n===f.NOFRAMES&&se(e,t)},j[U][r.END_TAG_TOKEN]=function(e,t){t.tagName!==f.FRAMESET||e.openElements.isRootHtmlElementCurrent()||(e.openElements.pop(),e.fragmentContext||e.openElements.currentTagName===f.FRAMESET||(e.insertionMode=x))},j[U][r.EOF_TOKEN]=ne,j[x]=Object.create(null),j[x][r.CHARACTER_TOKEN]=j[x][r.NULL_CHARACTER_TOKEN]=J,j[x][r.WHITESPACE_CHARACTER_TOKEN]=te,j[x][r.COMMENT_TOKEN]=Z,j[x][r.DOCTYPE_TOKEN]=J,j[x][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.HTML?Ne(e,t):n===f.NOFRAMES&&se(e,t)},j[x][r.END_TAG_TOKEN]=function(e,t){t.tagName===f.HTML&&(e.insertionMode=F)},j[x][r.EOF_TOKEN]=ne,j[B]=Object.create(null),j[B][r.CHARACTER_TOKEN]=Ue,j[B][r.NULL_CHARACTER_TOKEN]=Ue,j[B][r.WHITESPACE_CHARACTER_TOKEN]=le,j[B][r.COMMENT_TOKEN]=ee,j[B][r.DOCTYPE_TOKEN]=J,j[B][r.START_TAG_TOKEN]=function(e,t){t.tagName===f.HTML?Ne(e,t):Ue(e,t)},j[B][r.END_TAG_TOKEN]=Ue,j[B][r.EOF_TOKEN]=ne,j[F]=Object.create(null),j[F][r.CHARACTER_TOKEN]=j[F][r.NULL_CHARACTER_TOKEN]=J,j[F][r.WHITESPACE_CHARACTER_TOKEN]=le,j[F][r.COMMENT_TOKEN]=ee,j[F][r.DOCTYPE_TOKEN]=J,j[F][r.START_TAG_TOKEN]=function(e,t){var n=t.tagName;n===f.HTML?Ne(e,t):n===f.NOFRAMES&&se(e,t)},j[F][r.END_TAG_TOKEN]=J,j[F][r.EOF_TOKEN]=ne;var Y=e.exports=function(e){this.options=l(E,e),this.treeAdapter=this.options.treeAdapter,this.pendingScript=null,this.options.locationInfo&&s.assign(this)};function W(e,t){var n=e.activeFormattingElements.getElementEntryInScopeWithTagName(t.tagName);return n?e.openElements.contains(n.element)?e.openElements.hasInScope(t.tagName)||(n=null):(e.activeFormattingElements.removeEntry(n),n=null):Ce(e,t),n}function q(e,t){for(var n=null,r=e.openElements.stackTop;r>=0;r--){var i=e.openElements.items[r];if(i===t.element)break;e._isSpecialElement(i)&&(n=i)}return n||(e.openElements.popUntilElementPopped(t.element),e.activeFormattingElements.removeEntry(t)),n}function z(e,t,n){for(var r=t,i=e.openElements.getCommonAncestor(t),o=0,s=i;s!==n;o++,s=i){i=e.openElements.getCommonAncestor(s);var a=e.activeFormattingElements.getElementEntry(s),u=a&&o>=A;!a||u?(u&&e.activeFormattingElements.removeEntry(a),e.openElements.remove(s)):(s=X(e,a),r===t&&(e.activeFormattingElements.bookmark=a),e.treeAdapter.detachNode(r),e.treeAdapter.appendChild(s,r),r=s)}return r}function X(e,t){var n=e.treeAdapter.getNamespaceURI(t.element),r=e.treeAdapter.createElement(t.token.tagName,n,t.token.attrs);return e.openElements.replace(t.element,r),t.element=r,r}function V(e,t,n){if(e._isElementCausesFosterParenting(t))e._fosterParentElement(n);else{var r=e.treeAdapter.getTagName(t),i=e.treeAdapter.getNamespaceURI(t);r===f.TEMPLATE&&i===T.HTML&&(t=e.treeAdapter.getTemplateContent(t)),e.treeAdapter.appendChild(t,n)}}function Q(e,t,n){var r=e.treeAdapter.getNamespaceURI(n.element),i=n.token,o=e.treeAdapter.createElement(i.tagName,r,i.attrs);e._adoptNodes(t,o),e.treeAdapter.appendChild(t,o),e.activeFormattingElements.insertElementAfterBookmark(o,n.token),e.activeFormattingElements.removeEntry(n),e.openElements.remove(n.element),e.openElements.insertAfter(t,o)}function $(e,t){for(var n,r=0;r<_&&(n=W(e,t));r++){var i=q(e,n);if(!i)break;e.activeFormattingElements.bookmark=n;var o=z(e,i,n.element),s=e.openElements.getCommonAncestor(n.element);e.treeAdapter.detachNode(o),V(e,s,o),Q(e,i,n)}}function J(){}function Z(e,t){e._appendCommentNode(t,e.openElements.currentTmplContent||e.openElements.current)}function ee(e,t){e._appendCommentNode(t,e.document)}function te(e,t){e._insertCharacters(t)}function ne(e){e.stopped=!0}function re(e,t){e.treeAdapter.setDocumentMode(e.document,p.DOCUMENT_MODE.QUIRKS),e.insertionMode=g,e._processToken(t)}function ie(e,t){e._insertFakeRootElement(),e.insertionMode=y,e._processToken(t)}function oe(e,t){e._insertFakeElement(f.HEAD),e.headElement=e.openElements.current,e.insertionMode=N,e._processToken(t)}function se(e,t){var n=t.tagName;n===f.HTML?Ne(e,t):n===f.BASE||n===f.BASEFONT||n===f.BGSOUND||n===f.LINK||n===f.META?e._appendElement(t,T.HTML):n===f.TITLE?e._switchToTextParsing(t,r.MODE.RCDATA):n===f.NOSCRIPT||n===f.NOFRAMES||n===f.STYLE?e._switchToTextParsing(t,r.MODE.RAWTEXT):n===f.SCRIPT?e._switchToTextParsing(t,r.MODE.SCRIPT_DATA):n===f.TEMPLATE?(e._insertTemplate(t,T.HTML),e.activeFormattingElements.insertMarker(),e.framesetOk=!1,e.insertionMode=D,e._pushTmplInsertionMode(D)):n!==f.HEAD&&ue(e,t)}function ae(e,t){var n=t.tagName;n===f.HEAD?(e.openElements.pop(),e.insertionMode=S):n===f.BODY||n===f.BR||n===f.HTML?ue(e,t):n===f.TEMPLATE&&e.openElements.tmplCount>0&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(f.TEMPLATE),e.activeFormattingElements.clearToLastMarker(),e._popTmplInsertionMode(),e._resetInsertionMode())}function ue(e,t){e.openElements.pop(),e.insertionMode=S,e._processToken(t)}function ce(e,t){e._insertFakeElement(f.BODY),e.insertionMode=v,e._processToken(t)}function le(e,t){e._reconstructActiveFormattingElements(),e._insertCharacters(t)}function he(e,t){e._reconstructActiveFormattingElements(),e._insertCharacters(t),e.framesetOk=!1}function pe(e,t){e.openElements.hasInButtonScope(f.P)&&e._closePElement(),e._insertElement(t,T.HTML)}function fe(e,t){e.openElements.hasInButtonScope(f.P)&&e._closePElement(),e._insertElement(t,T.HTML),e.skipNextNewLine=!0,e.framesetOk=!1}function Te(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,T.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t)}function de(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,T.HTML),e.activeFormattingElements.insertMarker(),e.framesetOk=!1}function Ee(e,t){e._reconstructActiveFormattingElements(),e._appendElement(t,T.HTML),e.framesetOk=!1}function me(e,t){e._appendElement(t,T.HTML)}function _e(e,t){e._switchToTextParsing(t,r.MODE.RAWTEXT)}function Ae(e,t){e.openElements.currentTagName===f.OPTION&&e.openElements.pop(),e._reconstructActiveFormattingElements(),e._insertElement(t,T.HTML)}function ge(e,t){e.openElements.hasInScope(f.RUBY)&&e.openElements.generateImpliedEndTags(),e._insertElement(t,T.HTML)}function ye(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,T.HTML)}function Ne(e,t){var n=t.tagName;switch(n.length){case 1:n===f.I||n===f.S||n===f.B||n===f.U?Te(e,t):n===f.P?pe(e,t):n===f.A?function(e,t){var n=e.activeFormattingElements.getElementEntryInScopeWithTagName(f.A);n&&($(e,t),e.openElements.remove(n.element),e.activeFormattingElements.removeEntry(n)),e._reconstructActiveFormattingElements(),e._insertElement(t,T.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t)}(e,t):ye(e,t);break;case 2:n===f.DL||n===f.OL||n===f.UL?pe(e,t):n===f.H1||n===f.H2||n===f.H3||n===f.H4||n===f.H5||n===f.H6?function(e,t){e.openElements.hasInButtonScope(f.P)&&e._closePElement();var n=e.openElements.currentTagName;n!==f.H1&&n!==f.H2&&n!==f.H3&&n!==f.H4&&n!==f.H5&&n!==f.H6||e.openElements.pop(),e._insertElement(t,T.HTML)}(e,t):n===f.LI||n===f.DD||n===f.DT?function(e,t){e.framesetOk=!1;for(var n=t.tagName,r=e.openElements.stackTop;r>=0;r--){var i=e.openElements.items[r],o=e.treeAdapter.getTagName(i),s=null;if(n===f.LI&&o===f.LI?s=f.LI:n!==f.DD&&n!==f.DT||o!==f.DD&&o!==f.DT||(s=o),s){e.openElements.generateImpliedEndTagsWithExclusion(s),e.openElements.popUntilTagNamePopped(s);break}if(o!==f.ADDRESS&&o!==f.DIV&&o!==f.P&&e._isSpecialElement(i))break}e.openElements.hasInButtonScope(f.P)&&e._closePElement(),e._insertElement(t,T.HTML)}(e,t):n===f.EM||n===f.TT?Te(e,t):n===f.BR?Ee(e,t):n===f.HR?function(e,t){e.openElements.hasInButtonScope(f.P)&&e._closePElement(),e.openElements.currentTagName===f.MENUITEM&&e.openElements.pop(),e._appendElement(t,T.HTML),e.framesetOk=!1}(e,t):n===f.RB?ge(e,t):n===f.RT||n===f.RP?function(e,t){e.openElements.hasInScope(f.RUBY)&&e.openElements.generateImpliedEndTagsWithExclusion(f.RTC),e._insertElement(t,T.HTML)}(e,t):n!==f.TH&&n!==f.TD&&n!==f.TR&&ye(e,t);break;case 3:n===f.DIV||n===f.DIR||n===f.NAV?pe(e,t):n===f.PRE?fe(e,t):n===f.BIG?Te(e,t):n===f.IMG||n===f.WBR?Ee(e,t):n===f.XMP?function(e,t){e.openElements.hasInButtonScope(f.P)&&e._closePElement(),e._reconstructActiveFormattingElements(),e.framesetOk=!1,e._switchToTextParsing(t,r.MODE.RAWTEXT)}(e,t):n===f.SVG?function(e,t){e._reconstructActiveFormattingElements(),c.adjustTokenSVGAttrs(t),c.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,T.SVG):e._insertElement(t,T.SVG)}(e,t):n===f.RTC?ge(e,t):n!==f.COL&&ye(e,t);break;case 4:n===f.HTML?function(e,t){0===e.openElements.tmplCount&&e.treeAdapter.adoptAttributes(e.openElements.items[0],t.attrs)}(e,t):n===f.BASE||n===f.LINK||n===f.META?se(e,t):n===f.BODY?function(e,t){var n=e.openElements.tryPeekProperlyNestedBodyElement();n&&0===e.openElements.tmplCount&&(e.framesetOk=!1,e.treeAdapter.adoptAttributes(n,t.attrs))}(e,t):n===f.MAIN?pe(e,t):n===f.FORM?function(e,t){var n=e.openElements.tmplCount>0;e.formElement&&!n||(e.openElements.hasInButtonScope(f.P)&&e._closePElement(),e._insertElement(t,T.HTML),n||(e.formElement=e.openElements.current))}(e,t):n===f.CODE||n===f.FONT?Te(e,t):n===f.NOBR?function(e,t){e._reconstructActiveFormattingElements(),e.openElements.hasInScope(f.NOBR)&&($(e,t),e._reconstructActiveFormattingElements()),e._insertElement(t,T.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t)}(e,t):n===f.AREA?Ee(e,t):n===f.MATH?function(e,t){e._reconstructActiveFormattingElements(),c.adjustTokenMathMLAttrs(t),c.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,T.MATHML):e._insertElement(t,T.MATHML)}(e,t):n===f.MENU?function(e,t){e.openElements.hasInButtonScope(f.P)&&e._closePElement(),e.openElements.currentTagName===f.MENUITEM&&e.openElements.pop(),e._insertElement(t,T.HTML)}(e,t):n!==f.HEAD&&ye(e,t);break;case 5:n===f.STYLE||n===f.TITLE?se(e,t):n===f.ASIDE?pe(e,t):n===f.SMALL?Te(e,t):n===f.TABLE?function(e,t){e.treeAdapter.getDocumentMode(e.document)!==p.DOCUMENT_MODE.QUIRKS&&e.openElements.hasInButtonScope(f.P)&&e._closePElement(),e._insertElement(t,T.HTML),e.framesetOk=!1,e.insertionMode=O}(e,t):n===f.EMBED?Ee(e,t):n===f.INPUT?function(e,t){e._reconstructActiveFormattingElements(),e._appendElement(t,T.HTML);var n=r.getTokenAttr(t,d.TYPE);n&&n.toLowerCase()===m||(e.framesetOk=!1)}(e,t):n===f.PARAM||n===f.TRACK?me(e,t):n===f.IMAGE?function(e,t){t.tagName=f.IMG,Ee(e,t)}(e,t):n!==f.FRAME&&n!==f.TBODY&&n!==f.TFOOT&&n!==f.THEAD&&ye(e,t);break;case 6:n===f.SCRIPT?se(e,t):n===f.CENTER||n===f.FIGURE||n===f.FOOTER||n===f.HEADER||n===f.HGROUP?pe(e,t):n===f.BUTTON?function(e,t){e.openElements.hasInScope(f.BUTTON)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(f.BUTTON)),e._reconstructActiveFormattingElements(),e._insertElement(t,T.HTML),e.framesetOk=!1}(e,t):n===f.STRIKE||n===f.STRONG?Te(e,t):n===f.APPLET||n===f.OBJECT?de(e,t):n===f.KEYGEN?Ee(e,t):n===f.SOURCE?me(e,t):n===f.IFRAME?function(e,t){e.framesetOk=!1,e._switchToTextParsing(t,r.MODE.RAWTEXT)}(e,t):n===f.SELECT?function(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,T.HTML),e.framesetOk=!1,e.insertionMode===O||e.insertionMode===b||e.insertionMode===I||e.insertionMode===L||e.insertionMode===P?e.insertionMode=w:e.insertionMode=k}(e,t):n===f.OPTION?Ae(e,t):ye(e,t);break;case 7:n===f.BGSOUND?se(e,t):n===f.DETAILS||n===f.ADDRESS||n===f.ARTICLE||n===f.SECTION||n===f.SUMMARY?pe(e,t):n===f.LISTING?fe(e,t):n===f.MARQUEE?de(e,t):n===f.NOEMBED?_e(e,t):n!==f.CAPTION&&ye(e,t);break;case 8:n===f.BASEFONT?se(e,t):n===f.MENUITEM?function(e,t){e.openElements.currentTagName===f.MENUITEM&&e.openElements.pop(),e._reconstructActiveFormattingElements(),e._insertElement(t,T.HTML)}(e,t):n===f.FRAMESET?function(e,t){var n=e.openElements.tryPeekProperlyNestedBodyElement();e.framesetOk&&n&&(e.treeAdapter.detachNode(n),e.openElements.popAllUpToHtmlElement(),e._insertElement(t,T.HTML),e.insertionMode=U)}(e,t):n===f.FIELDSET?pe(e,t):n===f.TEXTAREA?function(e,t){e._insertElement(t,T.HTML),e.skipNextNewLine=!0,e.tokenizer.state=r.MODE.RCDATA,e.originalInsertionMode=e.insertionMode,e.framesetOk=!1,e.insertionMode=C}(e,t):n===f.TEMPLATE?se(e,t):n===f.NOSCRIPT?_e(e,t):n===f.OPTGROUP?Ae(e,t):n!==f.COLGROUP&&ye(e,t);break;case 9:n===f.PLAINTEXT?function(e,t){e.openElements.hasInButtonScope(f.P)&&e._closePElement(),e._insertElement(t,T.HTML),e.tokenizer.state=r.MODE.PLAINTEXT}(e,t):ye(e,t);break;case 10:n===f.BLOCKQUOTE||n===f.FIGCAPTION?pe(e,t):ye(e,t);break;default:ye(e,t)}}function Se(e,t){var n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n))}function ve(e,t){var n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n),e.activeFormattingElements.clearToLastMarker())}function Ce(e,t){for(var n=t.tagName,r=e.openElements.stackTop;r>0;r--){var i=e.openElements.items[r];if(e.treeAdapter.getTagName(i)===n){e.openElements.generateImpliedEndTagsWithExclusion(n),e.openElements.popUntilElementPopped(i);break}if(e._isSpecialElement(i))break}}function Oe(e,t){var n=t.tagName;switch(n.length){case 1:n===f.A||n===f.B||n===f.I||n===f.S||n===f.U?$(e,t):n===f.P?function(e){e.openElements.hasInButtonScope(f.P)||e._insertFakeElement(f.P),e._closePElement()}(e):Ce(e,t);break;case 2:n===f.DL||n===f.UL||n===f.OL?Se(e,t):n===f.LI?function(e){e.openElements.hasInListItemScope(f.LI)&&(e.openElements.generateImpliedEndTagsWithExclusion(f.LI),e.openElements.popUntilTagNamePopped(f.LI))}(e):n===f.DD||n===f.DT?function(e,t){var n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTagsWithExclusion(n),e.openElements.popUntilTagNamePopped(n))}(e,t):n===f.H1||n===f.H2||n===f.H3||n===f.H4||n===f.H5||n===f.H6?function(e){e.openElements.hasNumberedHeaderInScope()&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilNumberedHeaderPopped())}(e):n===f.BR?function(e){e._reconstructActiveFormattingElements(),e._insertFakeElement(f.BR),e.openElements.pop(),e.framesetOk=!1}(e):n===f.EM||n===f.TT?$(e,t):Ce(e,t);break;case 3:n===f.BIG?$(e,t):n===f.DIR||n===f.DIV||n===f.NAV?Se(e,t):Ce(e,t);break;case 4:n===f.BODY?function(e){e.openElements.hasInScope(f.BODY)&&(e.insertionMode=H)}(e):n===f.HTML?function(e,t){e.openElements.hasInScope(f.BODY)&&(e.insertionMode=H,e._processToken(t))}(e,t):n===f.FORM?function(e){var t=e.openElements.tmplCount>0,n=e.formElement;t||(e.formElement=null),(n||t)&&e.openElements.hasInScope(f.FORM)&&(e.openElements.generateImpliedEndTags(),t?e.openElements.popUntilTagNamePopped(f.FORM):e.openElements.remove(n))}(e):n===f.CODE||n===f.FONT||n===f.NOBR?$(e,t):n===f.MAIN||n===f.MENU?Se(e,t):Ce(e,t);break;case 5:n===f.ASIDE?Se(e,t):n===f.SMALL?$(e,t):Ce(e,t);break;case 6:n===f.CENTER||n===f.FIGURE||n===f.FOOTER||n===f.HEADER||n===f.HGROUP?Se(e,t):n===f.APPLET||n===f.OBJECT?ve(e,t):n===f.STRIKE||n===f.STRONG?$(e,t):Ce(e,t);break;case 7:n===f.ADDRESS||n===f.ARTICLE||n===f.DETAILS||n===f.SECTION||n===f.SUMMARY?Se(e,t):n===f.MARQUEE?ve(e,t):Ce(e,t);break;case 8:n===f.FIELDSET?Se(e,t):n===f.TEMPLATE?ae(e,t):Ce(e,t);break;case 10:n===f.BLOCKQUOTE||n===f.FIGCAPTION?Se(e,t):Ce(e,t);break;default:Ce(e,t)}}function Re(e,t){e.tmplInsertionModeStackTop>-1?De(e,t):e.stopped=!0}function be(e,t){var n=e.openElements.currentTagName;n===f.TABLE||n===f.TBODY||n===f.TFOOT||n===f.THEAD||n===f.TR?(e.pendingCharacterTokens=[],e.hasNonWhitespacePendingCharacterToken=!1,e.originalInsertionMode=e.insertionMode,e.insertionMode=R,e._processToken(t)):Le(e,t)}function Me(e,t){var n=t.tagName;switch(n.length){case 2:n===f.TD||n===f.TH||n===f.TR?function(e,t){e.openElements.clearBackToTableContext(),e._insertFakeElement(f.TBODY),e.insertionMode=I,e._processToken(t)}(e,t):Le(e,t);break;case 3:n===f.COL?function(e,t){e.openElements.clearBackToTableContext(),e._insertFakeElement(f.COLGROUP),e.insertionMode=M,e._processToken(t)}(e,t):Le(e,t);break;case 4:n===f.FORM?function(e,t){e.formElement||0!==e.openElements.tmplCount||(e._insertElement(t,T.HTML),e.formElement=e.openElements.current,e.openElements.pop())}(e,t):Le(e,t);break;case 5:n===f.TABLE?function(e,t){e.openElements.hasInTableScope(f.TABLE)&&(e.openElements.popUntilTagNamePopped(f.TABLE),e._resetInsertionMode(),e._processToken(t))}(e,t):n===f.STYLE?se(e,t):n===f.TBODY||n===f.TFOOT||n===f.THEAD?function(e,t){e.openElements.clearBackToTableContext(),e._insertElement(t,T.HTML),e.insertionMode=I}(e,t):n===f.INPUT?function(e,t){var n=r.getTokenAttr(t,d.TYPE);n&&n.toLowerCase()===m?e._appendElement(t,T.HTML):Le(e,t)}(e,t):Le(e,t);break;case 6:n===f.SCRIPT?se(e,t):Le(e,t);break;case 7:n===f.CAPTION?function(e,t){e.openElements.clearBackToTableContext(),e.activeFormattingElements.insertMarker(),e._insertElement(t,T.HTML),e.insertionMode=b}(e,t):Le(e,t);break;case 8:n===f.COLGROUP?function(e,t){e.openElements.clearBackToTableContext(),e._insertElement(t,T.HTML),e.insertionMode=M}(e,t):n===f.TEMPLATE?se(e,t):Le(e,t);break;default:Le(e,t)}}function Ie(e,t){var n=t.tagName;n===f.TABLE?e.openElements.hasInTableScope(f.TABLE)&&(e.openElements.popUntilTagNamePopped(f.TABLE),e._resetInsertionMode()):n===f.TEMPLATE?ae(e,t):n!==f.BODY&&n!==f.CAPTION&&n!==f.COL&&n!==f.COLGROUP&&n!==f.HTML&&n!==f.TBODY&&n!==f.TD&&n!==f.TFOOT&&n!==f.TH&&n!==f.THEAD&&n!==f.TR&&Le(e,t)}function Le(e,t){var n=e.fosterParentingEnabled;e.fosterParentingEnabled=!0,e._processTokenInBodyMode(t),e.fosterParentingEnabled=n}function Pe(e,t){e.openElements.currentTagName===f.COLGROUP&&(e.openElements.pop(),e.insertionMode=O,e._processToken(t))}function ke(e,t){var n=t.tagName;n===f.HTML?Ne(e,t):n===f.OPTION?(e.openElements.currentTagName===f.OPTION&&e.openElements.pop(),e._insertElement(t,T.HTML)):n===f.OPTGROUP?(e.openElements.currentTagName===f.OPTION&&e.openElements.pop(),e.openElements.currentTagName===f.OPTGROUP&&e.openElements.pop(),e._insertElement(t,T.HTML)):n===f.INPUT||n===f.KEYGEN||n===f.TEXTAREA||n===f.SELECT?e.openElements.hasInSelectScope(f.SELECT)&&(e.openElements.popUntilTagNamePopped(f.SELECT),e._resetInsertionMode(),n!==f.SELECT&&e._processToken(t)):n!==f.SCRIPT&&n!==f.TEMPLATE||se(e,t)}function we(e,t){var n=t.tagName;if(n===f.OPTGROUP){var r=e.openElements.items[e.openElements.stackTop-1],i=r&&e.treeAdapter.getTagName(r);e.openElements.currentTagName===f.OPTION&&i===f.OPTGROUP&&e.openElements.pop(),e.openElements.currentTagName===f.OPTGROUP&&e.openElements.pop()}else n===f.OPTION?e.openElements.currentTagName===f.OPTION&&e.openElements.pop():n===f.SELECT&&e.openElements.hasInSelectScope(f.SELECT)?(e.openElements.popUntilTagNamePopped(f.SELECT),e._resetInsertionMode()):n===f.TEMPLATE&&ae(e,t)}function De(e,t){e.openElements.tmplCount>0?(e.openElements.popUntilTagNamePopped(f.TEMPLATE),e.activeFormattingElements.clearToLastMarker(),e._popTmplInsertionMode(),e._resetInsertionMode(),e._processToken(t)):e.stopped=!0}function He(e,t){e.insertionMode=v,e._processToken(t)}function Ue(e,t){e.insertionMode=v,e._processToken(t)}Y.prototype.parse=function(e){var t=this.treeAdapter.createDocument();return this._bootstrap(t,null),this.tokenizer.write(e,!0),this._runParsingLoop(null),t},Y.prototype.parseFragment=function(e,t){t||(t=this.treeAdapter.createElement(f.TEMPLATE,T.HTML,[]));var n=this.treeAdapter.createElement("documentmock",T.HTML,[]);this._bootstrap(n,t),this.treeAdapter.getTagName(t)===f.TEMPLATE&&this._pushTmplInsertionMode(D),this._initTokenizerForFragmentParsing(),this._insertFakeRootElement(),this._resetInsertionMode(),this._findFormInFragmentContext(),this.tokenizer.write(e,!0),this._runParsingLoop(null);var r=this.treeAdapter.getFirstChild(n),i=this.treeAdapter.createDocumentFragment();return this._adoptNodes(r,i),i},Y.prototype._bootstrap=function(e,t){this.tokenizer=new r(this.options),this.stopped=!1,this.insertionMode="INITIAL_MODE",this.originalInsertionMode="",this.document=e,this.fragmentContext=t,this.headElement=null,this.formElement=null,this.openElements=new i(this.document,this.treeAdapter),this.activeFormattingElements=new o(this.treeAdapter),this.tmplInsertionModeStack=[],this.tmplInsertionModeStackTop=-1,this.currentTmplInsertionMode=null,this.pendingCharacterTokens=[],this.hasNonWhitespacePendingCharacterToken=!1,this.framesetOk=!0,this.skipNextNewLine=!1,this.fosterParentingEnabled=!1},Y.prototype._runParsingLoop=function(e){for(;!this.stopped;){this._setupTokenizerCDATAMode();var t=this.tokenizer.getNextToken();if(t.type===r.HIBERNATION_TOKEN)break;if(this.skipNextNewLine&&(this.skipNextNewLine=!1,t.type===r.WHITESPACE_CHARACTER_TOKEN&&"\n"===t.chars[0])){if(1===t.chars.length)continue;t.chars=t.chars.substr(1)}if(this._processInputToken(t),e&&this.pendingScript)break}},Y.prototype.runParsingLoopForCurrentChunk=function(e,t){if(this._runParsingLoop(t),t&&this.pendingScript){var n=this.pendingScript;return this.pendingScript=null,void t(n)}e&&e()},Y.prototype._setupTokenizerCDATAMode=function(){var e=this._getAdjustedCurrentElement();this.tokenizer.allowCDATA=e&&e!==this.document&&this.treeAdapter.getNamespaceURI(e)!==T.HTML&&!this._isIntegrationPoint(e)},Y.prototype._switchToTextParsing=function(e,t){this._insertElement(e,T.HTML),this.tokenizer.state=t,this.originalInsertionMode=this.insertionMode,this.insertionMode=C},Y.prototype.switchToPlaintextParsing=function(){this.insertionMode=C,this.originalInsertionMode=v,this.tokenizer.state=r.MODE.PLAINTEXT},Y.prototype._getAdjustedCurrentElement=function(){return 0===this.openElements.stackTop&&this.fragmentContext?this.fragmentContext:this.openElements.current},Y.prototype._findFormInFragmentContext=function(){var e=this.fragmentContext;do{if(this.treeAdapter.getTagName(e)===f.FORM){this.formElement=e;break}e=this.treeAdapter.getParentNode(e)}while(e)},Y.prototype._initTokenizerForFragmentParsing=function(){if(this.treeAdapter.getNamespaceURI(this.fragmentContext)===T.HTML){var e=this.treeAdapter.getTagName(this.fragmentContext);e===f.TITLE||e===f.TEXTAREA?this.tokenizer.state=r.MODE.RCDATA:e===f.STYLE||e===f.XMP||e===f.IFRAME||e===f.NOEMBED||e===f.NOFRAMES||e===f.NOSCRIPT?this.tokenizer.state=r.MODE.RAWTEXT:e===f.SCRIPT?this.tokenizer.state=r.MODE.SCRIPT_DATA:e===f.PLAINTEXT&&(this.tokenizer.state=r.MODE.PLAINTEXT)}},Y.prototype._setDocumentType=function(e){this.treeAdapter.setDocumentType(this.document,e.name,e.publicId,e.systemId)},Y.prototype._attachElementToTree=function(e){if(this._shouldFosterParentOnInsertion())this._fosterParentElement(e);else{var t=this.openElements.currentTmplContent||this.openElements.current;this.treeAdapter.appendChild(t,e)}},Y.prototype._appendElement=function(e,t){var n=this.treeAdapter.createElement(e.tagName,t,e.attrs);this._attachElementToTree(n)},Y.prototype._insertElement=function(e,t){var n=this.treeAdapter.createElement(e.tagName,t,e.attrs);this._attachElementToTree(n),this.openElements.push(n)},Y.prototype._insertFakeElement=function(e){var t=this.treeAdapter.createElement(e,T.HTML,[]);this._attachElementToTree(t),this.openElements.push(t)},Y.prototype._insertTemplate=function(e){var t=this.treeAdapter.createElement(e.tagName,T.HTML,e.attrs),n=this.treeAdapter.createDocumentFragment();this.treeAdapter.setTemplateContent(t,n),this._attachElementToTree(t),this.openElements.push(t)},Y.prototype._insertFakeRootElement=function(){var e=this.treeAdapter.createElement(f.HTML,T.HTML,[]);this.treeAdapter.appendChild(this.openElements.current,e),this.openElements.push(e)},Y.prototype._appendCommentNode=function(e,t){var n=this.treeAdapter.createCommentNode(e.data);this.treeAdapter.appendChild(t,n)},Y.prototype._insertCharacters=function(e){if(this._shouldFosterParentOnInsertion())this._fosterParentText(e.chars);else{var t=this.openElements.currentTmplContent||this.openElements.current;this.treeAdapter.insertText(t,e.chars)}},Y.prototype._adoptNodes=function(e,t){for(;;){var n=this.treeAdapter.getFirstChild(e);if(!n)break;this.treeAdapter.detachNode(n),this.treeAdapter.appendChild(t,n)}},Y.prototype._shouldProcessTokenInForeignContent=function(e){var t=this._getAdjustedCurrentElement();if(!t||t===this.document)return!1;var n=this.treeAdapter.getNamespaceURI(t);if(n===T.HTML)return!1;if(this.treeAdapter.getTagName(t)===f.ANNOTATION_XML&&n===T.MATHML&&e.type===r.START_TAG_TOKEN&&e.tagName===f.SVG)return!1;var i=e.type===r.CHARACTER_TOKEN||e.type===r.NULL_CHARACTER_TOKEN||e.type===r.WHITESPACE_CHARACTER_TOKEN;return(!(e.type===r.START_TAG_TOKEN&&e.tagName!==f.MGLYPH&&e.tagName!==f.MALIGNMARK)&&!i||!this._isIntegrationPoint(t,T.MATHML))&&((e.type!==r.START_TAG_TOKEN&&!i||!this._isIntegrationPoint(t,T.HTML))&&e.type!==r.EOF_TOKEN)},Y.prototype._processToken=function(e){j[this.insertionMode][e.type](this,e)},Y.prototype._processTokenInBodyMode=function(e){j[v][e.type](this,e)},Y.prototype._processTokenInForeignContent=function(e){e.type===r.CHARACTER_TOKEN?function(e,t){e._insertCharacters(t),e.framesetOk=!1}(this,e):e.type===r.NULL_CHARACTER_TOKEN?function(e,t){t.chars=h.REPLACEMENT_CHARACTER,e._insertCharacters(t)}(this,e):e.type===r.WHITESPACE_CHARACTER_TOKEN?te(this,e):e.type===r.COMMENT_TOKEN?Z(this,e):e.type===r.START_TAG_TOKEN?function(e,t){if(c.causesExit(t)&&!e.fragmentContext){for(;e.treeAdapter.getNamespaceURI(e.openElements.current)!==T.HTML&&!e._isIntegrationPoint(e.openElements.current);)e.openElements.pop();e._processToken(t)}else{var n=e._getAdjustedCurrentElement(),r=e.treeAdapter.getNamespaceURI(n);r===T.MATHML?c.adjustTokenMathMLAttrs(t):r===T.SVG&&(c.adjustTokenSVGTagName(t),c.adjustTokenSVGAttrs(t)),c.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,r):e._insertElement(t,r)}}(this,e):e.type===r.END_TAG_TOKEN&&function(e,t){for(var n=e.openElements.stackTop;n>0;n--){var r=e.openElements.items[n];if(e.treeAdapter.getNamespaceURI(r)===T.HTML){e._processToken(t);break}if(e.treeAdapter.getTagName(r).toLowerCase()===t.tagName){e.openElements.popUntilElementPopped(r);break}}}(this,e)},Y.prototype._processInputToken=function(e){this._shouldProcessTokenInForeignContent(e)?this._processTokenInForeignContent(e):this._processToken(e)},Y.prototype._isIntegrationPoint=function(e,t){var n=this.treeAdapter.getTagName(e),r=this.treeAdapter.getNamespaceURI(e),i=this.treeAdapter.getAttrList(e);return c.isIntegrationPoint(n,r,i,t)},Y.prototype._reconstructActiveFormattingElements=function(){var e=this.activeFormattingElements.length;if(e){var t=e,n=null;do{if(t--,(n=this.activeFormattingElements.entries[t]).type===o.MARKER_ENTRY||this.openElements.contains(n.element)){t++;break}}while(t>0);for(var r=t;r<e;r++)n=this.activeFormattingElements.entries[r],this._insertElement(n.token,this.treeAdapter.getNamespaceURI(n.element)),n.element=this.openElements.current}},Y.prototype._closeTableCell=function(){this.openElements.generateImpliedEndTags(),this.openElements.popUntilTableCellPopped(),this.activeFormattingElements.clearToLastMarker(),this.insertionMode=L},Y.prototype._closePElement=function(){this.openElements.generateImpliedEndTagsWithExclusion(f.P),this.openElements.popUntilTagNamePopped(f.P)},Y.prototype._resetInsertionMode=function(){for(var e=this.openElements.stackTop,t=!1;e>=0;e--){var n=this.openElements.items[e];0===e&&(t=!0,this.fragmentContext&&(n=this.fragmentContext));var r=this.treeAdapter.getTagName(n),i=G[r];if(i){this.insertionMode=i;break}if(!(t||r!==f.TD&&r!==f.TH)){this.insertionMode=P;break}if(!t&&r===f.HEAD){this.insertionMode=N;break}if(r===f.SELECT){this._resetInsertionModeForSelect(e);break}if(r===f.TEMPLATE){this.insertionMode=this.currentTmplInsertionMode;break}if(r===f.HTML){this.insertionMode=this.headElement?S:y;break}if(t){this.insertionMode=v;break}}},Y.prototype._resetInsertionModeForSelect=function(e){if(e>0)for(var t=e-1;t>0;t--){var n=this.openElements.items[t],r=this.treeAdapter.getTagName(n);if(r===f.TEMPLATE)break;if(r===f.TABLE)return void(this.insertionMode=w)}this.insertionMode=k},Y.prototype._pushTmplInsertionMode=function(e){this.tmplInsertionModeStack.push(e),this.tmplInsertionModeStackTop++,this.currentTmplInsertionMode=e},Y.prototype._popTmplInsertionMode=function(){this.tmplInsertionModeStack.pop(),this.tmplInsertionModeStackTop--,this.currentTmplInsertionMode=this.tmplInsertionModeStack[this.tmplInsertionModeStackTop]},Y.prototype._isElementCausesFosterParenting=function(e){var t=this.treeAdapter.getTagName(e);return t===f.TABLE||t===f.TBODY||t===f.TFOOT||t===f.THEAD||t===f.TR},Y.prototype._shouldFosterParentOnInsertion=function(){return this.fosterParentingEnabled&&this._isElementCausesFosterParenting(this.openElements.current)},Y.prototype._findFosterParentingLocation=function(){for(var e={parent:null,beforeElement:null},t=this.openElements.stackTop;t>=0;t--){var n=this.openElements.items[t],r=this.treeAdapter.getTagName(n),i=this.treeAdapter.getNamespaceURI(n);if(r===f.TEMPLATE&&i===T.HTML){e.parent=this.treeAdapter.getTemplateContent(n);break}if(r===f.TABLE){e.parent=this.treeAdapter.getParentNode(n),e.parent?e.beforeElement=n:e.parent=this.openElements.items[t-1];break}}return e.parent||(e.parent=this.openElements.items[0]),e},Y.prototype._fosterParentElement=function(e){var t=this._findFosterParentingLocation();t.beforeElement?this.treeAdapter.insertBefore(t.parent,e,t.beforeElement):this.treeAdapter.appendChild(t.parent,e)},Y.prototype._fosterParentText=function(e){var t=this._findFosterParentingLocation();t.beforeElement?this.treeAdapter.insertTextBefore(t.parent,e,t.beforeElement):this.treeAdapter.insertText(t.parent,e)},Y.prototype._isSpecialElement=function(e){var t=this.treeAdapter.getTagName(e),n=this.treeAdapter.getNamespaceURI(e);return p.SPECIAL_ELEMENTS[n][t]}},function(e,t){e.exports=require("url")},function(e,t,n){!function(e,t){"use strict";var n=function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);function r(){this.constructor=e}e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},r=function(){function e(){}return e.prototype.animate=function(e,n,r,i,o,s){return void 0===s&&(s=[]),new t.NoopAnimationPlayer},e}(),i=function(){};i.NOOP=new r;var o=function(){function e(){}return e.prototype.registerTrigger=function(e,t){},e.prototype.onInsert=function(e,t){},e.prototype.onRemove=function(e,t){},e.prototype.setProperty=function(e,t,n){},e.prototype.listen=function(e,t,n,r){},e.prototype.flush=function(){},Object.defineProperty(e.prototype,"activePlayers",{get:function(){throw new Error("...")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"queuedPlayers",{get:function(){throw new Error("...")},enumerable:!0,configurable:!0}),e}(),s=1e3;function a(e,t){var n,r=0,i=null;if("string"==typeof e){var o=e.match(/^([\.\d]+)(m?s)(?:\s+([\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);if(null===o)return t.push('The provided timing value "'+e+'" is invalid.'),{duration:0,delay:0,easing:null};var a=parseFloat(o[1]),u=o[2];"s"==u&&(a*=s),n=Math.floor(a);var c=o[3],l=o[4];if(null!=c){var h=parseFloat(c);null!=l&&"s"==l&&(h*=s),r=Math.floor(h)}var p=o[5];p&&(i=p)}else n=e;return{duration:n,delay:r,easing:i}}function u(e){var t={};return Array.isArray(e)?e.forEach(function(e){return c(e,!1,t)}):c(e,!1,t),t}function c(e,t,n){if(void 0===n&&(n={}),t)for(var r in e)n[r]=e[r];else Object.keys(e).forEach(function(t){return n[t]=e[t]});return n}function l(e,t){e.style&&Object.keys(t).forEach(function(n){return e.style[n]=t[n]})}function h(e,t){e.style&&Object.keys(t).forEach(function(t){e.style[t]=""})}function p(e,t,n){switch(t.type){case 0:return e.visitState(t,n);case 1:return e.visitTransition(t,n);case 2:return e.visitSequence(t,n);case 3:return e.visitGroup(t,n);case 4:return e.visitAnimate(t,n);case 5:return e.visitKeyframeSequence(t,n);case 6:return e.visitStyle(t,n);default:throw new Error("Unable to resolve animation metadata node #"+t.type)}}var f="*";function T(e,t){var n=[];return"string"==typeof e?e.split(/\s*,\s*/).forEach(function(e){return function(e,t,n){":"==e[0]&&(e=function(e,t){switch(e){case":enter":return"void => *";case":leave":return"* => void";default:return t.push('The transition alias value "'+e+'" is not supported'),"* => *"}}(e,n));var r=e.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);if(null==r||r.length<4)return n.push('The provided transition expression "'+e+'" is not supported'),t;var i=r[1],o=r[2],s=r[3];t.push(d(i,s));var a=i==f&&s==f;"<"!=o[0]||a||t.push(d(s,i))}(e,n,t)}):n.push(e),n}function d(e,t){return function(n,r){var i=e==f||e==n,o=t==f||t==r;return i&&o}}function E(e,t,n,r){return{type:1,keyframes:e,duration:t,delay:n,totalTime:t+n,easing:r}}function m(e,n,r){void 0===n&&(n={}),void 0===r&&(r={});var i=Array.isArray(e)?t.sequence(e):e;return(new A).buildKeyframes(i,n,r)}var _=function(){function e(e,t,n){this.errors=e,this.timelines=t,this.previousNode={},this.subContextCount=0,this.currentTimeline=n||new g(0),t.push(this.currentTimeline)}return e.prototype.createSubContext=function(){var t=new e(this.errors,this.timelines,this.currentTimeline.fork());return t.previousNode=this.previousNode,t.currentAnimateTimings=this.currentAnimateTimings,this.subContextCount++,t},e.prototype.transformIntoNewTimeline=function(e){return void 0===e&&(e=0),this.currentTimeline=this.currentTimeline.fork(e),this.timelines.push(this.currentTimeline),this.currentTimeline},e.prototype.incrementTime=function(e){this.currentTimeline.forwardTime(this.currentTimeline.duration+e)},e}(),A=function(){function e(){}return e.prototype.buildKeyframes=function(e,t,n){var r=new _([],[]);r.currentTimeline.setStyles(t),p(this,e,r);var i=r.timelines.filter(function(e){return e.hasStyling()});if(i.length&&Object.keys(n).length){var o=i[i.length-1];o.allowOnlyTimelineStyles()||o.setStyles(n)}return i.length?i.map(function(e){return e.buildKeyframes()}):[E([],0,0,"")]},e.prototype.visitState=function(e,t){},e.prototype.visitTransition=function(e,t){},e.prototype.visitSequence=function(e,t){var n=this,r=t.subContextCount;6==t.previousNode.type&&(t.currentTimeline.forwardFrame(),t.currentTimeline.snapshotCurrentStyles()),e.steps.forEach(function(e){return p(n,e,t)}),t.subContextCount>r&&t.transformIntoNewTimeline(),t.previousNode=e},e.prototype.visitGroup=function(e,t){var n=this,r=[],i=t.currentTimeline.currentTime;e.steps.forEach(function(e){var o=t.createSubContext();p(n,e,o),i=Math.max(i,o.currentTimeline.currentTime),r.push(o.currentTimeline)}),r.forEach(function(e){return t.currentTimeline.mergeTimelineCollectedStyles(e)}),t.transformIntoNewTimeline(i),t.previousNode=e},e.prototype.visitAnimate=function(e,n){var r=e.timings.hasOwnProperty("duration")?e.timings:a(e.timings,n.errors);n.currentAnimateTimings=r,r.delay&&(n.incrementTime(r.delay),n.currentTimeline.snapshotCurrentStyles());var i=e.styles?e.styles.type:-1;if(5==i)this.visitKeyframeSequence(e.styles,n);else{var o=e.styles;if(!o){var s={};r.easing&&(s.easing=r.easing),(o=t.style(s)).treatAsEmptyStep=!0}n.incrementTime(r.duration),o&&this.visitStyle(o,n)}n.currentAnimateTimings=null,n.previousNode=e},e.prototype.visitStyle=function(e,t){t.currentAnimateTimings||4!=t.previousNode.type||t.currentTimeline.forwardFrame();var n=u(e.styles),r=t.currentAnimateTimings&&t.currentAnimateTimings.easing;this._applyStyles(n,r,!!e.treatAsEmptyStep,t),t.previousNode=e},e.prototype._applyStyles=function(e,t,n,r){e.hasOwnProperty("easing")&&(t=t||e.easing,delete e.easing),r.currentTimeline.setStyles(e,t,n)},e.prototype.visitKeyframeSequence=function(e,t){var n=this,r=e.steps.length-1,i=e.steps[0],o=0,s=null!=function(e){var t=e.offset;if(null==t){var n=e.styles;if(Array.isArray(n))for(var r=0;r<n.length;r++){var i=n[r].offset;if(null!=i){t=i;break}}else t=n.offset}return t}(i);s||(o=1/r);var a=t.currentTimeline.duration,c=t.currentAnimateTimings.duration,l=t.createSubContext(),h=l.currentTimeline;h.easing=t.currentAnimateTimings.easing,e.steps.forEach(function(e,t){var i=u(e.styles),a=s?null!=e.offset?e.offset:parseFloat(i.offset):t==r?1:t*o;h.forwardTime(a*c),n._applyStyles(i,null,!1,l)}),t.currentTimeline.mergeTimelineCollectedStyles(h),t.transformIntoNewTimeline(a+c),t.previousNode=e},e}(),g=function(){function e(e,t){this.startTime=e,this.duration=0,this.easing="",this._previousKeyframe={},this._keyframes=new Map,this._styleSummary={},this._backFill={},this._currentEmptyStepKeyframe=null,this._localTimelineStyles=Object.create(this._backFill,{}),this._globalTimelineStyles=t||this._localTimelineStyles,this._loadKeyframe()}return e.prototype.hasStyling=function(){return this._keyframes.size>1},Object.defineProperty(e.prototype,"currentTime",{get:function(){return this.startTime+this.duration},enumerable:!0,configurable:!0}),e.prototype.fork=function(t){return void 0===t&&(t=0),new e(t||this.currentTime,this._globalTimelineStyles)},e.prototype._loadKeyframe=function(){this._currentKeyframe&&(this._previousKeyframe=this._currentKeyframe),this._currentKeyframe=this._keyframes.get(this.duration),this._currentKeyframe||(this._currentKeyframe=Object.create(this._backFill,{}),this._keyframes.set(this.duration,this._currentKeyframe))},e.prototype.forwardFrame=function(){this.duration++,this._loadKeyframe()},e.prototype.forwardTime=function(e){this.duration=e,this._loadKeyframe()},e.prototype._updateStyle=function(e,t){this._localTimelineStyles[e]=t,this._globalTimelineStyles[e]=t,this._styleSummary[e]={time:this.currentTime,value:t}},e.prototype.allowOnlyTimelineStyles=function(){return this._currentEmptyStepKeyframe!==this._currentKeyframe},e.prototype.setStyles=function(e,n,r){var i=this;void 0===n&&(n=null),void 0===r&&(r=!1),n&&(this._previousKeyframe.easing=n),r?(Object.keys(this._globalTimelineStyles).forEach(function(e){i._backFill[e]=i._globalTimelineStyles[e]||t.AUTO_STYLE,i._currentKeyframe[e]=t.AUTO_STYLE}),this._currentEmptyStepKeyframe=this._currentKeyframe):(Object.keys(e).forEach(function(n){if("offset"!==n){var r=e[n];i._currentKeyframe[n]=r,i._localTimelineStyles[n]||(i._backFill[n]=i._globalTimelineStyles[n]||t.AUTO_STYLE),i._updateStyle(n,r)}}),Object.keys(this._localTimelineStyles).forEach(function(e){i._currentKeyframe.hasOwnProperty(e)||(i._currentKeyframe[e]=i._localTimelineStyles[e])}))},e.prototype.snapshotCurrentStyles=function(){c(this._localTimelineStyles,!1,this._currentKeyframe)},e.prototype.getFinalKeyframe=function(){return this._keyframes.get(this.duration)},Object.defineProperty(e.prototype,"properties",{get:function(){var e=[];for(var t in this._currentKeyframe)e.push(t);return e},enumerable:!0,configurable:!0}),e.prototype.mergeTimelineCollectedStyles=function(e){var t=this;Object.keys(e._styleSummary).forEach(function(n){var r=t._styleSummary[n],i=e._styleSummary[n];(!r||i.time>r.time)&&t._updateStyle(n,i.value)})},e.prototype.buildKeyframes=function(){var e=this,t=[];if(0==this.duration){var n=this.getFinalKeyframe(),r=c(n,!0);r.offset=0,t.push(r);var i=c(n,!0);i.offset=1,t.push(i)}else this._keyframes.forEach(function(n,r){var i=c(n,!0);i.offset=r/e.duration,t.push(i)});return E(t,this.duration,this.startTime,this.easing)},e}();function y(e,t,n,r,i,o,s){return{type:0,triggerName:e,isRemovalTransition:r,fromState:t,fromStyles:i,toState:n,toStyles:o,timelines:s}}var N=function(){function e(e,n,r,i){this._triggerName=e,this.matchFns=r,this._stateStyles=i;var o=Array.isArray(n.animation)?t.sequence(n.animation):n.animation;this._animationAst=o}return e.prototype.match=function(e,t){if(function(e,t,n){return e.some(function(e){return e(t,n)})}(this.matchFns,e,t)){var n=this._stateStyles["*"]||{},r=this._stateStyles[e]||n,i=this._stateStyles[t]||n,o=m(this._animationAst,r,i);return y(this._triggerName,e,t,"void"===t,r,i,o)}},e}();function S(e){var n=Array.isArray(e)?t.sequence(e):e;return(new v).validate(n)}var v=function(){function e(){}return e.prototype.validate=function(e){var t=new C;return p(this,e,t),t.errors},e.prototype.visitState=function(e,t){},e.prototype.visitTransition=function(e,t){},e.prototype.visitSequence=function(e,t){var n=this;e.steps.forEach(function(e){return p(n,e,t)})},e.prototype.visitGroup=function(e,t){var n=this,r=t.currentTime,i=0;e.steps.forEach(function(e){t.currentTime=r,p(n,e,t),i=Math.max(i,t.currentTime)}),t.currentTime=i},e.prototype.visitAnimate=function(e,t){t.currentAnimateTimings=e.timings=a(e.timings,t.errors);var n=e.styles&&e.styles.type;5==n?this.visitKeyframeSequence(e.styles,t):(t.currentTime+=t.currentAnimateTimings.duration+t.currentAnimateTimings.delay,6==n&&this.visitStyle(e.styles,t)),t.currentAnimateTimings=null},e.prototype.visitStyle=function(e,t){var n=u(e.styles),r=t.currentAnimateTimings,i=t.currentTime,o=t.currentTime;r&&o>0&&(o-=r.duration+r.delay),Object.keys(n).forEach(function(e){var n=t.collectedStyles[e],r=!0;n&&(o!=i&&o>=n.startTime&&i<=n.endTime&&(t.errors.push('The CSS property "'+e+'" that exists between the times of "'+n.startTime+'ms" and "'+n.endTime+'ms" is also being animated in a parallel animation between the times of "'+o+'ms" and "'+i+'ms"'),r=!1),o=n.startTime),r&&(t.collectedStyles[e]={startTime:o,endTime:i})})},e.prototype.visitKeyframeSequence=function(e,t){var n=this,r=0,i=[],o=!1,s=!1,a=0;e.steps.forEach(function(e){var t=u(e.styles),n=0;t.hasOwnProperty("offset")&&(r++,n=t.offset),s=s||n<0||n>1,o=o||n<a,a=n,i.push(n)}),s&&t.errors.push("Please ensure that all keyframe offsets are between 0 and 1"),o&&t.errors.push("Please ensure that all keyframe offsets are in order");var c=e.steps.length,l=0;r>0&&r<c?t.errors.push("Not all style() steps within the declared keyframes() contain offsets"):0==r&&(l=1/c);var h=c-1,p=t.currentTime,f=t.currentAnimateTimings.duration;e.steps.forEach(function(e,r){var o=l>0?r==h?1:l*r:i[r],s=o*f;t.currentTime=p+t.currentAnimateTimings.delay+s,t.currentAnimateTimings.duration=s,n.visitStyle(e,t)})},e}(),C=function(){this.errors=[],this.currentTime=0,this.collectedStyles={}},O=function(){function e(e,t,n){var r=this;this.name=e,this._transitionAsts=n,this.transitionFactories=[],this.states={},Object.keys(t).forEach(function(e){r.states[e]=c(t[e],!1)});var i=[];if(n.forEach(function(e){var n=T(e.expr,i),o=S(e);o.length?i.push.apply(i,o):r.transitionFactories.push(new N(r.name,e,n,t))}),i.length)throw new Error("Animation parsing for the "+e+" trigger have failed:\n - "+i.join("\n - "))}return e.prototype.createFallbackInstruction=function(e,t){var n=this.states["*"]||{},r=this.states[e]||n,i=this.states[t]||n;return y(this.name,e,t,"void"==t,r,i,[])},e.prototype.matchTransition=function(e,t){for(var n=0;n<this.transitionFactories.length;n++){var r=this.transitionFactories[n].match(e,t);if(r)return r}return null},e}(),R=function(){this.errors=[],this.states={},this.transitions=[]},b=function(){function e(){}return e.prototype.buildTrigger=function(e,t){var n=this,r=new R;return t.forEach(function(e){return p(n,e,r)}),new O(e,r.states,r.transitions)},e.prototype.visitState=function(e,t){var n=u(e.styles.styles);e.name.split(/\s*,\s*/).forEach(function(e){t.states[e]=n})},e.prototype.visitTransition=function(e,t){t.transitions.push(e)},e.prototype.visitSequence=function(e,t){},e.prototype.visitGroup=function(e,t){},e.prototype.visitAnimate=function(e,t){},e.prototype.visitStyle=function(e,t){},e.prototype.visitKeyframeSequence=function(e,t){},e}(),M=function(){function e(e,t){this._driver=e,this._normalizer=t,this._flaggedInserts=new Set,this._queuedRemovals=new Map,this._queuedTransitionAnimations=[],this._activeTransitionAnimations=new Map,this._activeElementAnimations=new Map,this._elementTriggerStates=new Map,this._triggers=Object.create(null),this._triggerListeners=new Map,this._pendingListenerRemovals=new Map}return Object.defineProperty(e.prototype,"queuedPlayers",{get:function(){return this._queuedTransitionAnimations.map(function(e){return e.player})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"activePlayers",{get:function(){var e=[];return this._activeElementAnimations.forEach(function(t){return e.push.apply(e,t)}),e},enumerable:!0,configurable:!0}),e.prototype.registerTrigger=function(e,t){t=t||e.name,this._triggers[t]||(this._triggers[t]=function(e,t){return(new b).buildTrigger(e,t)}(t,e.definitions))},e.prototype.onInsert=function(e,t){1==e.nodeType&&this._flaggedInserts.add(e),t()},e.prototype.onRemove=function(e,t){var n=this;if(1==e.nodeType){var r=this._elementTriggerStates.get(e);if(r){var i=Object.keys(r),o=i.some(function(e){var t=r[e],i=n._triggers[e].matchTransition(t,"void");return!!i});if(o)return e.$$ngRemove=!0,void this._queuedRemovals.set(e,t)}this._triggerListeners.has(e)&&(e.$$ngRemove=!0,this._queuedRemovals.set(e,function(){})),this._onRemovalTransition(e).forEach(function(e){return e.destroy()}),t()}else t()},e.prototype.setProperty=function(e,t,n){var r=this._triggers[t];if(!r)throw new Error('The provided animation trigger "'+t+'" has not been registered!');var i=this._elementTriggerStates.get(e);i||this._elementTriggerStates.set(e,i={});var o=i.hasOwnProperty(t)?i[t]:"void";if(o!==n){n=function(e){switch(typeof e){case"boolean":return e?"1":"0";default:return e?e.toString():null}}(n);var s=r.matchTransition(o,n);s||(s=r.createFallbackInstruction(o,n)),this.animateTransition(e,s),i[t]=n}},e.prototype.listen=function(e,t,n,r){var i=this;if(!n)throw new Error('Unable to listen on the animation trigger "'+t+'" because the provided event is undefined!');if(!this._triggers[t])throw new Error('Unable to listen on the animation trigger event "'+n+'" because the animation trigger "'+t+"\" doesn't exist!");var o=this._triggerListeners.get(e);o||this._triggerListeners.set(e,o=[]),function(e,t){switch(t){case"start":case"done":return;default:throw new Error('The provided animation trigger event "'+t+'" for the animation trigger "'+e+'" is not supported!')}}(t,n);var s={triggerName:t,phase:n,callback:r};return o.push(s),function(){I(i._pendingListenerRemovals,e,[]).push(s)}},e.prototype._clearPendingListenerRemovals=function(){var e=this;this._pendingListenerRemovals.forEach(function(t,n){var r=e._triggerListeners.get(n);r&&t.forEach(function(e){var t=r.indexOf(e);t>=0&&r.splice(t,1)})}),this._pendingListenerRemovals.clear()},e.prototype._onRemovalTransition=function(e){for(var t,n=e.querySelectorAll(".ng-animating"),r=function(e){var t=n[e],r=i._activeElementAnimations.get(t);r&&r.forEach(function(e){return e.destroy()});var o=i._activeTransitionAnimations.get(t);o&&Object.keys(o).forEach(function(e){var t=o[e];t&&t.destroy()})},i=this,o=0;o<n.length;o++)r(o);return(t=this._activeElementAnimations.get(e))?t.splice(0):[]},e.prototype.animateTransition=function(e,t){var n,r=this,i=t.triggerName;if(t.isRemovalTransition)n=this._onRemovalTransition(e);else{n=[];var o=this._activeTransitionAnimations.get(e),s=o?o[i]:null;s&&n.push(s)}h(e,t.fromStyles);var a=0,u=t.timelines.map(function(t,i){return a=Math.max(a,t.totalTime),r._buildPlayer(e,t,n,i)});n.forEach(function(e){return e.destroy()});var c=P(u);c.onDone(function(){c.destroy();var n=r._activeTransitionAnimations.get(e);n&&(delete n[i],0==Object.keys(n).length&&r._activeTransitionAnimations.delete(e)),L(r._activeElementAnimations,e,c),l(e,t.toStyles)});var p=I(this._activeTransitionAnimations,e,{});return p[i]=c,this._queuePlayer(e,i,c,w(e,i,t.fromState,t.toState,null,a)),c},e.prototype.animateTimeline=function(e,t,n){var r=this;void 0===n&&(n=[]);var i=t.map(function(t,i){var o=r._buildPlayer(e,t,n,i);return o.onDestroy(function(){L(r._activeElementAnimations,e,o)}),r._markPlayerAsActive(e,o),o});return P(i)},e.prototype._buildPlayer=function(e,t,n,r){return void 0===r&&(r=0),r&&n.length&&(n=[]),this._driver.animate(e,this._normalizeKeyframes(t.keyframes),t.duration,t.delay,t.easing,n)},e.prototype._normalizeKeyframes=function(e){var t=this,n=[],r=[];if(e.forEach(function(e){var i={};Object.keys(e).forEach(function(r){var o=r,s=e[r];"offset"!=r&&(o=t._normalizer.normalizePropertyName(r,n),s=t._normalizer.normalizeStyleValue(r,o,e[r],n)),i[o]=s}),r.push(i)}),n.length)throw new Error("Unable to animate due to the following errors:\n - "+n.join("\n - "));return r},e.prototype._markPlayerAsActive=function(e,t){var n=I(this._activeElementAnimations,e,[]);n.push(t)},e.prototype._queuePlayer=function(e,t,n,r){var i={element:e,player:n,triggerName:t,event:r};this._queuedTransitionAnimations.push(i),n.init(),e.classList.add("ng-animating"),n.onDone(function(){e.classList.remove("ng-animating")})},e.prototype._flushQueuedAnimations=function(){var e=function(){for(var e=t._queuedTransitionAnimations.shift(),n=e.player,r=e.element,i=e.triggerName,o=e.event,s=r;s=s.parentNode;)if(s.$$ngRemove)return"continue-parentLoop";var a=t._triggerListeners.get(r);if(a&&a.forEach(function(e){e.triggerName==i&&function(e,t,n,r){switch(t){case"start":e.onStart(function(){var e=k(n);e.phaseName="start",r(e)});break;case"done":e.onDone(function(){var e=k(n);e.phaseName="done",r(e)})}}(n,e.phase,o,e.callback)}),t._queuedRemovals.has(r))return n.destroy(),"continue";t._markPlayerAsActive(r,n),n.init(),n.hasStarted()||n.play()},t=this;e:for(;this._queuedTransitionAnimations.length;){var n=e();switch(n){case"continue-parentLoop":continue e}}},e.prototype.flush=function(){var e=this,n=new Map;this._queuedRemovals.forEach(function(t,r){var i=e._pendingListenerRemovals.get(r);i&&(n.set(r,i),e._pendingListenerRemovals.delete(r))}),this._clearPendingListenerRemovals(),this._pendingListenerRemovals=n,this._flushQueuedAnimations();var r=!1;this._queuedRemovals.forEach(function(n,i){if(!e._flaggedInserts.has(i)){for(var o=i,s=[];o=o.parentNode;){if(o.$$ngRemove)return void n();var a=e._activeElementAnimations.get(o);if(a){s.push.apply(s,a);break}}if(0==s.length){var u=e._elementTriggerStates.get(i);u&&Object.keys(u).forEach(function(n){r=!0;var o=u[n],a=e._triggers[n].matchTransition(o,"void");if(a)s.push(e.animateTransition(i,a));else{var c=w(i,n,o,"void","",0),l=new t.NoopAnimationPlayer;e._queuePlayer(i,n,l,c)}})}s.length?P(s).onDone(n):n()}}),this._queuedRemovals.clear(),this._flaggedInserts.clear(),r&&(this._flushQueuedAnimations(),this._clearPendingListenerRemovals())},e}();function I(e,t,n){var r=e.get(t);return r||e.set(t,r=n),r}function L(e,t,n){var r=e.get(t);if(r){var i=r.indexOf(n);i>=0&&(r.splice(i,1),0==r.length&&e.delete(t))}}function P(e){switch(e.length){case 0:return new t.NoopAnimationPlayer;case 1:return e[0];default:return new t.ɵAnimationGroupPlayer(e)}}function k(e){return w(e.element,e.triggerName,e.fromState,e.toState,e.phaseName,e.totalTime)}function w(e,t,n,r,i,o){return{element:e,triggerName:t,fromState:n,toState:r,phaseName:i,totalTime:o}}var D,H,U=function(){function e(){}return e.prototype.normalizePropertyName=function(e,t){},e.prototype.normalizeStyleValue=function(e,t,n,r){},e}(),x=function(){function e(){}return e.prototype.normalizePropertyName=function(e,t){return e},e.prototype.normalizeStyleValue=function(e,t,n,r){return n},e}(),B=function(){function e(e){var n=Array.isArray(e)?t.sequence(e):e,r=S(n);if(r.length){var i="animation validation failed:\n"+r.join("\n");throw new Error(i)}this._animationAst=n}return e.prototype.buildTimelines=function(e,t){var n=Array.isArray(e)?u(e):e,r=Array.isArray(t)?u(t):t;return m(this._animationAst,n,r)},e.prototype.create=function(e,t,n,r){void 0===n&&(n={}),void 0===r&&(r={});var o=this.buildTimelines(n,r),s=e.get(i),a=e.get(U),u=new M(s,a);return u.animateTimeline(t,o)},e}(),F=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t.prototype.normalizePropertyName=function(e,t){return e.replace(K,function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e[1].toUpperCase()})},t.prototype.normalizeStyleValue=function(e,t,n,r){var i="",o=n.toString().trim();if(G[t]&&0!==n&&"0"!==n)if("number"==typeof n)i="px";else{var s=n.match(/^[+-]?[\d\.]+([a-z]*)$/);s&&0==s[1].length&&r.push("Please provide a CSS unit value for "+e+":"+n)}return o+i},t}(U),G=(D="width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent".split(","),H={},D.forEach(function(e){return H[e]=!0}),H),K=/-+([a-z0-9])/g,j=function(e){function t(){var t=e.apply(this,arguments)||this;return t._listeners=new Map,t._changes=[],t._flaggedRemovals=new Set,t._onDoneFns=[],t._triggerStyles=Object.create(null),t}return n(t,e),t.prototype.registerTrigger=function(e,t){if(t=t||e.name,!this._triggerStyles[t]){var n={};e.definitions.forEach(function(e){if(0===e.type){var t=e;n[t.name]=u(t.styles.styles)}}),this._triggerStyles[t]=n}},t.prototype.onInsert=function(e,t){t()},t.prototype.onRemove=function(e,t){t(),1==e.nodeType&&this._flaggedRemovals.add(e)},t.prototype.setProperty=function(e,t,n){var r=Y(t),i=e[r]||"void";this._changes.push({element:e,oldValue:i,newValue:n,triggerName:t});var o=this._triggerStyles[t]||{},s=o[i]||o["*"];s&&h(e,s),e[r]=n,this._onDoneFns.push(function(){var t=o[n]||o["*"];t&&l(e,t)})},t.prototype.listen=function(e,t,n,r){var i=this._listeners.get(e);i||this._listeners.set(e,i=[]);var o={triggerName:t,eventPhase:n,callback:r};return i.push(o),function(){return o.doRemove=!0}},t.prototype.flush=function(){var e=this,t=[],n=[];function r(e,r){var i,o,s,a,u=e.eventPhase,c=(i=r.element,o=r.triggerName,s=r.oldValue,a=r.newValue,{element:i,triggerName:o,fromState:s,toState:a,phaseName:u,totalTime:0});"start"==u?t.push(function(){return e.callback(c)}):"done"==u&&n.push(function(){return e.callback(c)})}this._changes.forEach(function(t){var n=t.element,i=e._listeners.get(n);i&&i.forEach(function(e){e.triggerName==t.triggerName&&r(e,t)})}),this._flaggedRemovals.forEach(function(t){var n=e._listeners.get(t);n&&n.forEach(function(e){var n=e.triggerName,i=Y(n);r(e,{element:t,triggerName:n,oldValue:t[i]||"void",newValue:"void"})})}),Array.from(this._listeners.keys()).forEach(function(t){var n=e._listeners.get(t).filter(function(e){return!e.doRemove});n.length?e._listeners.set(t,n):e._listeners.delete(t)}),t.forEach(function(e){return e()}),n.forEach(function(e){return e()}),this._flaggedRemovals.clear(),this._changes=[],this._onDoneFns.forEach(function(e){return e()}),this._onDoneFns=[]},Object.defineProperty(t.prototype,"activePlayers",{get:function(){return[]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"queuedPlayers",{get:function(){return[]},enumerable:!0,configurable:!0}),t}(o);function Y(e){return"_@_"+e}var W=function(){function e(e,t,n,r){void 0===r&&(r=[]);var i=this;this.element=e,this.keyframes=t,this.options=n,this._onDoneFns=[],this._onStartFns=[],this._onDestroyFns=[],this._initialized=!1,this._finished=!1,this._started=!1,this._destroyed=!1,this.time=0,this.parentPlayer=null,this._duration=n.duration,this._delay=n.delay||0,this.time=this._duration+this._delay,this.previousStyles={},r.forEach(function(e){var t=e._captureStyles();Object.keys(t).forEach(function(e){return i.previousStyles[e]=t[e]})})}return e.prototype._onFinish=function(){this._finished||(this._finished=!0,this._onDoneFns.forEach(function(e){return e()}),this._onDoneFns=[])},e.prototype.init=function(){var e=this;if(!this._initialized){this._initialized=!0;var n,r,i=this.keyframes.map(function(n){var r={};return Object.keys(n).forEach(function(i,o){var s=n[i];s==t.AUTO_STYLE&&(s=q(e.element,i)),void 0!=s&&(r[i]=s)}),r}),o=Object.keys(this.previousStyles);if(o.length){var s=i[0],a=[];if(o.forEach(function(t){s.hasOwnProperty(t)||a.push(t),s[t]=e.previousStyles[t]}),a.length)for(var u=this,c=function(){var e=i[l];a.forEach(function(t){e[t]=q(u.element,t)})},l=1;l<i.length;l++)c()}this._player=this._triggerWebAnimation(this.element,i,this.options),this._finalKeyframe=i.length?(n=i[i.length-1],r={},Object.keys(n).forEach(function(e){"offset"!=e&&(r[e]=n[e])}),r):{},this._resetDomPlayerState(),this._player.addEventListener("finish",function(){return e._onFinish()})}},e.prototype._triggerWebAnimation=function(e,t,n){return e.animate(t,n)},Object.defineProperty(e.prototype,"domPlayer",{get:function(){return this._player},enumerable:!0,configurable:!0}),e.prototype.onStart=function(e){this._onStartFns.push(e)},e.prototype.onDone=function(e){this._onDoneFns.push(e)},e.prototype.onDestroy=function(e){this._onDestroyFns.push(e)},e.prototype.play=function(){this.init(),this.hasStarted()||(this._onStartFns.forEach(function(e){return e()}),this._onStartFns=[],this._started=!0),this._player.play()},e.prototype.pause=function(){this.init(),this._player.pause()},e.prototype.finish=function(){this.init(),this._onFinish(),this._player.finish()},e.prototype.reset=function(){this._resetDomPlayerState(),this._destroyed=!1,this._finished=!1,this._started=!1},e.prototype._resetDomPlayerState=function(){this._player&&this._player.cancel()},e.prototype.restart=function(){this.reset(),this.play()},e.prototype.hasStarted=function(){return this._started},e.prototype.destroy=function(){this._destroyed||(this._resetDomPlayerState(),this._onFinish(),this._destroyed=!0,this._onDestroyFns.forEach(function(e){return e()}),this._onDestroyFns=[])},e.prototype.setPosition=function(e){this._player.currentTime=e*this.time},e.prototype.getPosition=function(){return this._player.currentTime/this.time},e.prototype._captureStyles=function(){var e=this,t={};return this.hasStarted()&&Object.keys(this._finalKeyframe).forEach(function(n){"offset"!=n&&(t[n]=e._finished?e._finalKeyframe[n]:q(e.element,n))}),t},e}();function q(e,t){return window.getComputedStyle(e)[t]}var z=function(){function e(){}return e.prototype.animate=function(e,t,n,r,i,o){void 0===o&&(o=[]);var s={duration:n,delay:r,fill:"forwards"};i&&(s.easing=i);var a=o.filter(function(e){return e instanceof W});return new W(e,t,s,a)},e}();e.AnimationDriver=i,e.ɵAnimationEngine=o,e.ɵAnimation=B,e.ɵAnimationStyleNormalizer=U,e.ɵNoopAnimationStyleNormalizer=x,e.ɵWebAnimationsStyleNormalizer=F,e.ɵNoopAnimationDriver=r,e.ɵDomAnimationEngine=M,e.ɵNoopAnimationEngine=j,e.ɵWebAnimationsDriver=z,e.ɵsupportsWebAnimations=function(){return"undefined"!=typeof Element&&"function"==typeof Element.prototype.animate},e.ɵWebAnimationsPlayer=W,Object.defineProperty(e,"__esModule",{value:!0})}(t,n(97))},function(e,t,n){e.exports=n(1)(5)},function(e,t,n){e.exports=n(1)(83)},function(e,t,n){e.exports=n(1)(0)},function(e,t,n){e.exports=n(1)(37)},function(e,t,n){e.exports=n(1)(40)},function(e,t,n){e.exports=n(1)(41)},function(e,t,n){"use strict";n.r(t);n(100),n(99),n(98);var r=n(0),i=n(8),o=n(48),s=n(47);let a=class{};a=function(e,t,n,r){var i,o=arguments.length,s=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,n,s):i(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s}([Object(r.Component)({selector:"app",template:n(74),styles:[n(73)]})],a);let u=class{};u=function(e,t,n,r){var i,o=arguments.length,s=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,n,s):i(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s}([Object(r.Component)({selector:"nav-menu",template:n(71),styles:[n(70)]})],u);let c=class{};c=function(e,t,n,r){var i,o=arguments.length,s=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,n,s):i(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s}([Object(r.Component)({selector:"home",template:n(68)})],c);var l=n(13),h=n(17);var p=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},f=function(e,t){return function(n,r){t(n,r,e)}};let T=class{constructor(e,t){this.currentMessage="enter your text",this.connected=!1,this.http=e,this.originUrl=t,this.chatHub=new h.HubConnection(t+"/chathub",{transport:h.TransportType.WebSockets|h.TransportType.LongPolling}),this.chatHub.on("Send",e=>this.receiveMessage(e)),this.chatHub.start().catch(e=>console.log(e)),this.connected=!0}receiveMessage(e){null==this.chatMessages&&(this.chatMessages=[]);let t=e;this.chatMessages.push(t)}sendMessage(){if(0==this.connected)return void alert("Please, wait...");if(""==this.currentMessage)return void alert("Please, enter your message");let e=new class{};e.Message=this.currentMessage;var t=this.originUrl+"/api/chat";let n=new l.Headers({"Content-Type":"application/json"}),r=new l.RequestOptions({headers:n});this.http.post(t,e,r).subscribe(e=>{this.currentMessage=""},e=>{console.log(JSON.stringify(e.json()))})}};const d={bootstrap:[a],declarations:[a,u,T=function(e,t,n,r){var i,o=arguments.length,s=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,n,s):i(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s}([Object(r.Component)({selector:"chat",template:n(50)}),f(1,Object(r.Inject)("ORIGIN_URL")),p("design:paramtypes",[l.Http,String])],T),c],imports:[s.RouterModule.forRoot([{path:"",redirectTo:"home",pathMatch:"full"},{path:"home",component:c},{path:"chat",component:T},{path:"**",redirectTo:"home"}])]};var E=n(46);let m=class{};m=function(e,t,n,r){var i,o=arguments.length,s=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,n,s):i(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s}([Object(r.NgModule)({bootstrap:d.bootstrap,declarations:d.declarations,imports:[i.ServerModule,E.FormsModule,...d.imports]})],m),Object(r.enableProdMode)();t.default=Object(o.createServerRenderer)(e=>{const t=[{provide:i.INITIAL_CONFIG,useValue:{document:"<app></app>",url:e.url}},{provide:"ORIGIN_URL",useValue:e.origin}];return Object(i.platformDynamicServer)(t).bootstrapModule(m).then(e=>{const t=e.injector.get(r.ApplicationRef),n=e.injector.get(i.PlatformState),o=e.injector.get(r.NgZone);return new Promise((r,i)=>{o.onError.subscribe(e=>i(e)),t.isStable.first(e=>e).subscribe(()=>{setImmediate(()=>{r({html:n.renderToString()}),e.destroy()})})})})})},function(e,t){e.exports='<h1>Chat</h1>\r\nMessage: <input [(ngModel)]=\'currentMessage\' [(disabled)]=\'!connected\' /><br/>\r\n<button id="sendButton" (click)="sendMessage()">Send</button><br/>\r\n\r\n<table class=\'table\' *ngIf="chatMessages">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th>Id</th>\r\n\t\t\t<th>User</th>\r\n\t\t\t<th>Message</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr *ngFor="let chatMessage of chatMessages">\r\n\t\t\t<td>{{ chatMessage.Id }}</td>\r\n\t\t\t<td>{{ chatMessage.User.Name }}</td>\r\n\t\t\t<td>{{ chatMessage.Message }}</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>'},function(e,t,n){"use strict";var r=n(6).Buffer,i=n(15),o=.1;function s(e,t){var n;return(n=r.allocUnsafe(5))[0]=202,n.writeFloatBE(e,1),(t||Math.abs(e-n.readFloatBE(1))>o)&&((n=r.allocUnsafe(9))[0]=203,n.writeDoubleBE(e,1)),n}e.exports=function(e,t,n){function o(a,u){var c,l,h;if(void 0===a)throw new Error("undefined is not encodable in msgpack!");if(null===a)(c=r.allocUnsafe(1))[0]=192;else if(!0===a)(c=r.allocUnsafe(1))[0]=195;else if(!1===a)(c=r.allocUnsafe(1))[0]=194;else if("string"==typeof a)(l=r.byteLength(a))<32?((c=r.allocUnsafe(1+l))[0]=160|l,l>0&&c.write(a,1)):l<=255&&!n?((c=r.allocUnsafe(2+l))[0]=217,c[1]=l,c.write(a,2)):l<=65535?((c=r.allocUnsafe(3+l))[0]=218,c.writeUInt16BE(l,1),c.write(a,3)):((c=r.allocUnsafe(5+l))[0]=219,c.writeUInt32BE(l,1),c.write(a,5));else if(a&&a.readUInt32LE)a.length<=255?((c=r.allocUnsafe(2))[0]=196,c[1]=a.length):a.length<=65535?((c=r.allocUnsafe(3))[0]=197,c.writeUInt16BE(a.length,1)):((c=r.allocUnsafe(5))[0]=198,c.writeUInt32BE(a.length,1)),c=i([c,a]);else if(Array.isArray(a))a.length<16?(c=r.allocUnsafe(1))[0]=144|a.length:a.length<65536?((c=r.allocUnsafe(3))[0]=220,c.writeUInt16BE(a.length,1)):((c=r.allocUnsafe(5))[0]=221,c.writeUInt32BE(a.length,1)),c=a.reduce(function(e,t){return e.append(o(t,!0)),e},i().append(c));else if("object"==typeof a)c=function(t){var n,o,s=-1,a=[];for(n=0;n<e.length;n++)if(e[n].check(t)){o=e[n].encode(t);break}if(!o)return null;1==(s=o.length-1)?a.push(212):2===s?a.push(213):4===s?a.push(214):8===s?a.push(215):16===s?a.push(216):s<256?(a.push(199),a.push(s)):s<65536?(a.push(200),a.push(s>>8),a.push(255&s)):(a.push(201),a.push(s>>24),a.push(s>>16&255),a.push(s>>8&255),a.push(255&s));return i().append(r.from(a)).append(o)}(a)||function(e){var t,n,s=[],a=0;for(t in e)e.hasOwnProperty(t)&&void 0!==e[t]&&"function"!=typeof e[t]&&(++a,s.push(o(t,!0)),s.push(o(e[t],!0)));a<16?(n=r.allocUnsafe(1))[0]=128|a:((n=r.allocUnsafe(3))[0]=222,n.writeUInt16BE(a,1));return s.unshift(n),s.reduce(function(e,t){return e.append(t)},i())}(a);else if("number"==typeof a){if((h=a)!==Math.floor(h))return s(a,t);if(a>=0)if(a<128)(c=r.allocUnsafe(1))[0]=a;else if(a<256)(c=r.allocUnsafe(2))[0]=204,c[1]=a;else if(a<65536)(c=r.allocUnsafe(3))[0]=205,c.writeUInt16BE(a,1);else if(a<=4294967295)(c=r.allocUnsafe(5))[0]=206,c.writeUInt32BE(a,1);else{if(!(a<=9007199254740991))return s(a,!0);(c=r.allocUnsafe(9))[0]=207,function(e,t){for(var n=7;n>=0;n--)e[n+1]=255&t,t/=256}(c,a)}else if(a>=-32)(c=r.allocUnsafe(1))[0]=256+a;else if(a>=-128)(c=r.allocUnsafe(2))[0]=208,c.writeInt8(a,1);else if(a>=-32768)(c=r.allocUnsafe(3))[0]=209,c.writeInt16BE(a,1);else if(a>-214748365)(c=r.allocUnsafe(5))[0]=210,c.writeInt32BE(a,1);else{if(!(a>=-9007199254740991))return s(a,!0);(c=r.allocUnsafe(9))[0]=211,function(e,t,n){var r=n<0;r&&(n=Math.abs(n));var i=n%4294967296,o=n/4294967296;if(e.writeUInt32BE(Math.floor(o),t+0),e.writeUInt32BE(i,t+4),r)for(var s=1,a=t+7;a>=t;a--){var u=(255^e[a])+s;e[a]=255&u,s=u>>8}}(c,1,a)}}if(!c)throw new Error("not implemented yet");return u?c:c.slice()}return o}},function(e,t,n){var r=n(15);function i(e){Error.call(this),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name=this.constructor.name,this.message=e||"unable to decode"}n(2).inherits(i,Error),e.exports=function(e){return function(e){e instanceof r||(e=r().append(e));var t=o(e);if(t)return e.consume(t.bytesConsumed),t.value;throw new i};function t(e,t,n){return t>=n+e}function n(e,t){return{value:e,bytesConsumed:t}}function o(e,r){r=void 0===r?0:r;var i=e.length-r;if(i<=0)return null;var o,l,h,p=e.readUInt8(r),f=0;if(!function(e,t){var n=function(e){switch(e){case 196:return 2;case 197:return 3;case 198:return 5;case 199:return 3;case 200:return 4;case 201:return 6;case 202:return 5;case 203:return 9;case 204:return 2;case 205:return 3;case 206:return 5;case 207:return 9;case 208:return 2;case 209:return 3;case 210:return 5;case 211:return 9;case 212:return 3;case 213:return 4;case 214:return 6;case 215:return 10;case 216:return 18;case 217:return 2;case 218:return 3;case 219:return 5;case 222:return 3;default:return-1}}(e);return!(-1!==n&&t<n)}(p,i))return null;switch(p){case 192:return n(null,1);case 194:return n(!1,1);case 195:return n(!0,1);case 204:return n(f=e.readUInt8(r+1),2);case 205:return n(f=e.readUInt16BE(r+1),3);case 206:return n(f=e.readUInt32BE(r+1),5);case 207:for(h=7;h>=0;h--)f+=e.readUInt8(r+h+1)*Math.pow(2,8*(7-h));return n(f,9);case 208:return n(f=e.readInt8(r+1),2);case 209:return n(f=e.readInt16BE(r+1),3);case 210:return n(f=e.readInt32BE(r+1),5);case 211:return n(f=function(e,t){var n=128==(128&e[t]);if(n)for(var r=1,i=t+7;i>=t;i--){var o=(255^e[i])+r;e[i]=255&o,r=o>>8}var s=e.readUInt32BE(t+0),a=e.readUInt32BE(t+4);return(4294967296*s+a)*(n?-1:1)}(e.slice(r+1,r+9),0),9);case 202:return n(f=e.readFloatBE(r+1),5);case 203:return n(f=e.readDoubleBE(r+1),9);case 217:return t(o=e.readUInt8(r+1),i,2)?n(f=e.toString("utf8",r+2,r+2+o),2+o):null;case 218:return t(o=e.readUInt16BE(r+1),i,3)?n(f=e.toString("utf8",r+3,r+3+o),3+o):null;case 219:return t(o=e.readUInt32BE(r+1),i,5)?n(f=e.toString("utf8",r+5,r+5+o),5+o):null;case 196:return t(o=e.readUInt8(r+1),i,2)?n(f=e.slice(r+2,r+2+o),2+o):null;case 197:return t(o=e.readUInt16BE(r+1),i,3)?n(f=e.slice(r+3,r+3+o),3+o):null;case 198:return t(o=e.readUInt32BE(r+1),i,5)?n(f=e.slice(r+5,r+5+o),5+o):null;case 220:return i<3?null:s(e,r,o=e.readUInt16BE(r+1),3);case 221:return i<5?null:s(e,r,o=e.readUInt32BE(r+1),5);case 222:return a(e,r,o=e.readUInt16BE(r+1),3);case 223:throw new Error("map too big to decode in JS");case 212:return u(e,r,1);case 213:return u(e,r,2);case 214:return u(e,r,4);case 215:return u(e,r,8);case 216:return u(e,r,16);case 199:return o=e.readUInt8(r+1),l=e.readUInt8(r+2),t(o,i,3)?c(e,r,l,o,3):null;case 200:return o=e.readUInt16BE(r+1),l=e.readUInt8(r+3),t(o,i,4)?c(e,r,l,o,4):null;case 201:return o=e.readUInt32BE(r+1),l=e.readUInt8(r+5),t(o,i,6)?c(e,r,l,o,6):null}if(144==(240&p))return s(e,r,o=15&p,1);if(128==(240&p))return a(e,r,o=15&p,1);if(160==(224&p))return t(o=31&p,i,1)?n(f=e.toString("utf8",r+1,r+o+1),o+1):null;if(p>=224)return n(f=p-256,1);if(p<128)return n(p,1);throw new Error("not implemented yet")}function s(e,t,r,i){var s,a=[],u=0;for(t+=i,s=0;s<r;s++){var c=o(e,t);if(!c)return null;a.push(c.value),t+=c.bytesConsumed,u+=c.bytesConsumed}return n(a,i+u)}function a(e,t,r,i){var s,a={},u=0;for(t+=i,s=0;s<r;s++){var c=o(e,t);if(!c)return null;var l=o(e,t+=c.bytesConsumed);if(!l)return null;a[c.value]=l.value,t+=l.bytesConsumed,u+=c.bytesConsumed+l.bytesConsumed}return n(a,i+u)}function u(e,t,n){return c(e,t,e.readUInt8(t+1),n,2)}function c(t,r,i,o,s){var a,u;for(r+=s,a=0;a<e.length;a++){if(i===e[a].type)return u=t.slice(r,r+o),n(e[a].decode(u),s+o)}throw new Error("unable to find ext type "+i)}},e.exports.IncompleteBufferError=i},function(e,t,n){"use strict";var r=n(31).Transform,i=n(5),o=n(15);function s(e){(e=e||{}).objectMode=!0,e.highWaterMark=16,r.call(this,e),this._msgpack=e.msgpack}function a(e){if(!(this instanceof a))return(e=e||{}).msgpack=this,new a(e);s.call(this,e)}function u(e){if(!(this instanceof u))return(e=e||{}).msgpack=this,new u(e);s.call(this,e),this._chunks=o()}i(s,r),i(a,s),a.prototype._transform=function(e,t,n){var r=null;try{r=this._msgpack.encode(e).slice(0)}catch(e){return this.emit("error",e),n()}this.push(r),n()},i(u,s),u.prototype._transform=function(e,t,n){e&&this._chunks.append(e);try{var r=this._msgpack.decode(this._chunks);this.push(r)}catch(e){return void(e instanceof this._msgpack.IncompleteBufferError?n():this.emit("error",e))}this._chunks.length>0?this._transform(null,t,n):n()},e.exports.decoder=u,e.exports.encoder=a},function(e,t,n){"use strict";e.exports=o;var r=n(25),i=n(9);function o(e){if(!(this instanceof o))return new o(e);r.call(this,e)}i.inherits=n(5),i.inherits(o,r),o.prototype._transform=function(e,t,n){n(null,e)}},function(e,t,n){e.exports=n(2).deprecate},function(e,t,n){"use strict";var r=n(6).Buffer;e.exports=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}return e.prototype.push=function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length},e.prototype.unshift=function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length},e.prototype.shift=function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}},e.prototype.clear=function(){this.head=this.tail=null,this.length=0},e.prototype.join=function(e){if(0===this.length)return"";for(var t=this.head,n=""+t.data;t=t.next;)n+=e+t.data;return n},e.prototype.concat=function(e){if(0===this.length)return r.alloc(0);if(1===this.length)return this.head.data;for(var t,n,i,o=r.allocUnsafe(e>>>0),s=this.head,a=0;s;)t=s.data,n=o,i=a,t.copy(n,i),a+=s.data.length,s=s.next;return o},e}()},function(e,t){"function"==typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},function(e,t){e.exports=require("events")},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){e.exports=n(31).Duplex},function(e,t){e.exports=require("assert")},function(e,t){e.exports=require("buffer")},function(e,t,n){"use strict";var r=n(6).Buffer,i=n(61),o=n(15),s=n(53),a=n(52),u=n(51);e.exports=function(e){var t=[],n=[];return{encode:u(t,(e=e||{forceFloat64:!1,compatibilityMode:!1}).forceFloat64,e.compatibilityMode),decode:a(n),register:function(e,t,n,s){return i(t,"must have a constructor"),i(n,"must have an encode function"),i(e>=0,"must have a non-negative type"),i(s,"must have a decode function"),this.registerEncoder(function(e){return e instanceof t},function(t){var i=o(),s=r.allocUnsafe(1);return s.writeInt8(e,0),i.append(s),i.append(n(t)),i}),this.registerDecoder(e,s),this},registerEncoder:function(e,n){return i(e,"must have an encode function"),i(n,"must have an encode function"),t.push({check:e,encode:n}),this},registerDecoder:function(e,t){return i(e>=0,"must have a non-negative type"),i(t,"must have a decode function"),n.push({type:e,decode:t}),this},encoder:s.encoder,decoder:s.decoder,buffer:!0,type:"msgpack5",IncompleteBufferError:a.IncompleteBufferError}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(18),i=n(63);t.MessagePackHubProtocol=class{constructor(){this.name="messagepack",this.type=2}parseMessages(e){return r.BinaryMessageFormat.parse(e).map(e=>this.parseMessage(e))}parseMessage(e){if(0==e.length)throw new Error("Invalid payload.");let t=i().decode(new Buffer(e));if(0==t.length||!(t instanceof Array))throw new Error("Invalid payload.");switch(t[0]){case 1:return this.createInvocationMessage(t);case 2:return this.createStreamItemMessage(t);case 3:return this.createCompletionMessage(t);default:throw new Error("Invalid message type.")}}createInvocationMessage(e){if(5!=e.length)throw new Error("Invalid payload for Invocation message.");return{type:1,invocationId:e[1],nonblocking:e[2],target:e[3],arguments:e[4]}}createStreamItemMessage(e){if(3!=e.length)throw new Error("Invalid payload for stream Result message.");return{type:2,invocationId:e[1],item:e[2]}}createCompletionMessage(e){if(e.length<3)throw new Error("Invalid payload for Completion message.");let t=e[2];if(2===t&&3!=e.length||2!==t&&4!=e.length)throw new Error("Invalid payload for Completion message.");let n={type:3,invocationId:e[1],error:null,result:null};switch(t){case 1:n.error=e[3];break;case 3:n.result=e[3]}return n}writeMessage(e){switch(e.type){case 1:return this.writeInvocation(e);case 2:case 3:throw new Error(`Writing messages of type '${e.type}' is not supported.`);default:throw new Error("Invalid message type.")}}writeInvocation(e){let t=i().encode([1,e.invocationId,e.nonblocking,e.target,e.arguments]);return r.BinaryMessageFormat.write(t.slice())}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.Base64EncodedHubProtocol=class{constructor(e){this.wrappedProtocol=e,this.name=this.wrappedProtocol.name,this.type=1}parseMessages(e){let t=e.indexOf(":");if(-1==t||";"!=e[e.length-1])throw new Error("Invalid payload.");let n=e.substring(0,t);if(!/^[0-9]+$/.test(n))throw new Error(`Invalid length: '${n}'`);if(parseInt(n,10)!=e.length-t-2)throw new Error("Invalid message size.");let r=e.substring(t+1,e.length-1),i=atob(r),o=new Uint8Array(i.length);for(let e=0;e<o.length;e++)o[e]=i.charCodeAt(e);return this.wrappedProtocol.parseMessages(o.buffer)}writeMessage(e){let t=new Uint8Array(this.wrappedProtocol.writeMessage(e)),n="";for(let e=0;e<t.byteLength;e++)n+=String.fromCharCode(t[e]);let r=btoa(n);return`${r.length.toString()}:${r};`}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.Subject=class{constructor(){this.observers=[]}next(e){for(let t of this.observers)t.next(e)}error(e){for(let t of this.observers)t.error(e)}complete(){for(let e of this.observers)e.complete()}subscribe(e){this.observers.push(e)}}},function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(i,o){function s(e){try{u(r.next(e))}catch(e){o(e)}}function a(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){e.done?i(e.value):new n(function(t){t(e.value)}).then(s,a)}u((r=r.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const i=n(20),o=n(66),s=n(32),a=n(18),u=n(65),c=n(10),l=n(16);var h=n(19);t.TransportType=h.TransportType;var p=n(20);t.HttpConnection=p.HttpConnection;var f=n(32);t.JsonHubProtocol=f.JsonHubProtocol;var T=n(10);t.LogLevel=T.LogLevel;var d=n(16);t.ConsoleLogger=d.ConsoleLogger,t.NullLogger=d.NullLogger;t.HubConnection=class{constructor(e,t={}){t=t||{},this.connection="string"==typeof e?new i.HttpConnection(e,t):e,this.logger=l.LoggerFactory.createLogger(t.logging),this.protocol=t.protocol||new s.JsonHubProtocol,this.connection.onreceive=(e=>this.processIncomingData(e)),this.connection.onclose=(e=>this.connectionClosed(e)),this.callbacks=new Map,this.methods=new Map,this.closedCallbacks=[],this.id=0}processIncomingData(e){let t=this.protocol.parseMessages(e);for(var n=0;n<t.length;++n){var r=t[n];switch(r.type){case 1:this.invokeClientMethod(r);break;case 2:case 3:let t=this.callbacks.get(r.invocationId);null!=t&&(3==r.type&&this.callbacks.delete(r.invocationId),t(r));break;default:this.logger.log(c.LogLevel.Warning,"Invalid message type: "+e)}}}invokeClientMethod(e){let t=this.methods.get(e.target.toLowerCase());t?(t.forEach(t=>t.apply(this,e.arguments)),e.nonblocking):this.logger.log(c.LogLevel.Warning,`No client method with the name '${e.target}' found.`)}connectionClosed(e){let t={type:3,invocationId:"-1",error:e?e.message:"Invocation cancelled due to connection being closed."};this.callbacks.forEach(e=>{e(t)}),this.callbacks.clear(),this.closedCallbacks.forEach(t=>t.apply(this,[e]))}start(){return r(this,void 0,void 0,function*(){let e=2===this.protocol.type?2:1;this.connection.features.transferMode=e,yield this.connection.start();var t=this.connection.features.transferMode;yield this.connection.send(a.TextMessageFormat.write(JSON.stringify({protocol:this.protocol.name}))),this.logger.log(c.LogLevel.Information,`Using HubProtocol '${this.protocol.name}'.`),2===e&&1===t&&(this.protocol=new u.Base64EncodedHubProtocol(this.protocol))})}stop(){return this.connection.stop()}stream(e,...t){let n=this.createInvocation(e,t,!1),r=new o.Subject;this.callbacks.set(n.invocationId,e=>{if(3===e.type){let t=e;t.error?r.error(new Error(t.error)):t.result?r.error(new Error("Server provided a result in a completion response to a streamed invocation.")):r.complete()}else r.next(e.item)});let i=this.protocol.writeMessage(n);return this.connection.send(i).catch(e=>{r.error(e),this.callbacks.delete(n.invocationId)}),r}send(e,...t){let n=this.createInvocation(e,t,!0),r=this.protocol.writeMessage(n);return this.connection.send(r)}invoke(e,...t){let n=this.createInvocation(e,t,!1);return new Promise((e,t)=>{this.callbacks.set(n.invocationId,n=>{if(3===n.type){let r=n;r.error?t(new Error(r.error)):e(r.result)}else t(new Error("Streaming methods must be invoked using HubConnection.stream"))});let r=this.protocol.writeMessage(n);this.connection.send(r).catch(e=>{t(e),this.callbacks.delete(n.invocationId)})})}on(e,t){e&&t&&(e=e.toLowerCase(),this.methods.has(e)||this.methods.set(e,[]),this.methods.get(e).push(t))}off(e,t){if(!e||!t)return;e=e.toLowerCase();let n=this.methods.get(e);if(n){var r=n.indexOf(t);-1!=r&&n.splice(r,1)}}onclose(e){e&&this.closedCallbacks.push(e)}createInvocation(e,t,n){let r=this.id;return this.id++,{type:1,invocationId:r.toString(),target:e,arguments:t,nonblocking:n}}}},function(e,t){e.exports="<h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n    <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n    <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n    <li><a href='https://webpack.github.io/'>Webpack</a> for building and bundling client-side resources</li>\r\n    <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n    <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n    <li><strong>Server-side prerendering</strong>. For faster initial loading and improved SEO, your Angular app is prerendered on the server. The resulting HTML is then transferred to the browser where a client-side copy of the app takes over.</li>\r\n    <li><strong>Webpack dev middleware</strong>. In development mode, there's no need to run the <code>webpack</code> build tool. Your client-side resources are dynamically built on demand. Updates are available as soon as you modify any file.</li>\r\n    <li><strong>Hot module replacement</strong>. In development mode, you don't even need to reload the page after making most changes. Within seconds of saving changes to files, your Angular app will be rebuilt and a new instance injected is into the page.</li>\r\n    <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and the <code>webpack</code> build tool produces minified static CSS and JavaScript files.</li>\r\n</ul>\r\n"},function(e,t,n){(e.exports=n(35)(void 0)).push([e.i,"li .glyphicon {\r\n    margin-right: 10px;\r\n}\r\n\r\n/* Highlighting rules for nav menu items */\r\nli.link-active a,\r\nli.link-active a:hover,\r\nli.link-active a:focus {\r\n    background-color: #4189C7;\r\n    color: white;\r\n}\r\n\r\n/* Keep the nav menu independent of scrolling and on top of other items */\r\n.main-nav {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n    /* On small screens, convert the nav menu to a vertical sidebar */\r\n    .main-nav {\r\n        height: 100%;\r\n        width: calc(25% - 20px);\r\n    }\r\n    .navbar {\r\n        border-radius: 0px;\r\n        border-width: 0px;\r\n        height: 100%;\r\n    }\r\n    .navbar-header {\r\n        float: none;\r\n    }\r\n    .navbar-collapse {\r\n        border-top: 1px solid #444;\r\n        padding: 0px;\r\n    }\r\n    .navbar ul {\r\n        float: none;\r\n    }\r\n    .navbar li {\r\n        float: none;\r\n        font-size: 15px;\r\n        margin: 6px;\r\n    }\r\n    .navbar li a {\r\n        padding: 10px 16px;\r\n        border-radius: 4px;\r\n    }\r\n    .navbar a {\r\n        /* If a menu item's text is too long, truncate it */\r\n        width: 100%;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n}\r\n",""])},function(e,t,n){var r=n(69);e.exports="string"==typeof r?r:r.toString()},function(e,t){e.exports="<div class='main-nav'>\r\n\t<div class='navbar navbar-inverse'>\r\n\t\t<div class='navbar-header'>\r\n\t\t\t<button type='button' class='navbar-toggle' data-toggle='collapse' data-target='.navbar-collapse'>\r\n\t\t\t\t<span class='sr-only'>Toggle navigation</span>\r\n\t\t\t\t<span class='icon-bar'></span>\r\n\t\t\t\t<span class='icon-bar'></span>\r\n\t\t\t\t<span class='icon-bar'></span>\r\n\t\t\t\t<span class='icon-bar'></span>\r\n\t\t\t</button>\r\n\t\t\t<a class='navbar-brand' [routerLink]=\"['/home']\">Simple chat</a>\r\n\t\t</div>\r\n\t\t<div class='clearfix'></div>\r\n\t\t<div class='navbar-collapse collapse'>\r\n\t\t\t<ul class='nav navbar-nav'>\r\n\t\t\t\t<li [routerLinkActive]=\"['link-active']\">\r\n\t\t\t\t\t<a [routerLink]=\"['/home']\">\r\n\t\t\t\t\t\t<span class='glyphicon glyphicon-home'></span> Home\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li [routerLinkActive]=\"['link-active']\">\r\n\t\t\t\t\t<a [routerLink]=\"['/chat']\">\r\n\t\t\t\t\t\t<span class='glyphicon glyphicon-th-list'></span> Chat\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</div>"},function(e,t,n){(e.exports=n(35)(void 0)).push([e.i,"@media (max-width: 767px) {\r\n    /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\r\n    .body-content {\r\n        padding-top: 50px;\r\n    }\r\n}\r\n",""])},function(e,t,n){var r=n(72);e.exports="string"==typeof r?r:r.toString()},function(e,t){e.exports="<div class='container-fluid'>\r\n    <div class='row'>\r\n        <div class='col-sm-3'>\r\n            <nav-menu></nav-menu>\r\n        </div>\r\n        <div class='col-sm-9 body-content'>\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n"},function(e,t){e.exports=require("os")},function(e,t){e.exports=require("https")},function(e,t){e.exports=require("http")},function(e,t,n){(function(){var t,r,i,o,s,a,u,c,l,h,p,f,T=function(e,t){for(var n in t)d.call(t,n)&&(e[n]=t[n]);function r(){this.constructor=e}return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e},d={}.hasOwnProperty;u=function(){function e(){this.onloadstart=null,this.onprogress=null,this.onabort=null,this.onerror=null,this.onload=null,this.ontimeout=null,this.onloadend=null,this._listeners={}}return e.prototype.onloadstart=null,e.prototype.onprogress=null,e.prototype.onabort=null,e.prototype.onerror=null,e.prototype.onload=null,e.prototype.ontimeout=null,e.prototype.onloadend=null,e.prototype.addEventListener=function(e,t){var n;e=e.toLowerCase(),(n=this._listeners)[e]||(n[e]=[]),this._listeners[e].push(t)},e.prototype.removeEventListener=function(e,t){var n;e=e.toLowerCase(),this._listeners[e]&&-1!==(n=this._listeners[e].indexOf(t))&&this._listeners[e].splice(n,1)},e.prototype.dispatchEvent=function(e){var t,n,r,i,o;if(e.currentTarget=e.target=this,t=e.type,o=this._listeners[t])for(n=0,r=o.length;n<r;n++)(i=o[n]).call(this,e);(i=this["on"+t])&&i.call(this,e)},e}(),l=n(77),h=n(76),p=n(75),f=n(41),a=function(e){function n(e){n.__super__.constructor.call(this),this.onreadystatechange=null,this._anonymous=e&&e.anon,this.readyState=n.UNSENT,this.response=null,this.responseText="",this.responseType="",this.responseURL="",this.status=0,this.statusText="",this.timeout=0,this.upload=new c(this),this._method=null,this._url=null,this._sync=!1,this._headers=null,this._loweredHeaders=null,this._mimeOverride=null,this._request=null,this._response=null,this._responseParts=null,this._responseHeaders=null,this._aborting=null,this._error=null,this._loadedBytes=0,this._totalBytes=0,this._lengthComputable=!1}return T(n,u),n.prototype.onreadystatechange=null,n.prototype.readyState=null,n.prototype.response=null,n.prototype.responseText=null,n.prototype.responseType=null,n.prototype.status=null,n.prototype.timeout=null,n.prototype.upload=null,n.prototype.open=function(e,t,r,i,s){var a;if((e=e.toUpperCase())in this._restrictedMethods)throw new o("HTTP method "+e+" is not allowed in XHR");switch(a=this._parseUrl(t),void 0===r&&(r=!0),this.readyState){case n.UNSENT:case n.OPENED:case n.DONE:break;case n.HEADERS_RECEIVED:case n.LOADING:}this._method=e,this._url=a,this._sync=!r,this._headers={},this._loweredHeaders={},this._mimeOverride=null,this._setReadyState(n.OPENED),this._request=null,this._response=null,this.status=0,this.statusText="",this._responseParts=[],this._responseHeaders=null,this._loadedBytes=0,this._totalBytes=0,this._lengthComputable=!1},n.prototype.setRequestHeader=function(e,r){var i;if(this.readyState!==n.OPENED)throw new t("XHR readyState must be OPENED");i=e.toLowerCase(),this._restrictedHeaders[i]||/^sec\-/.test(i)||/^proxy-/.test(i)?console.warn('Refused to set unsafe header "'+e+'"'):(r=r.toString(),i in this._loweredHeaders?(e=this._loweredHeaders[i],this._headers[e]=this._headers[e]+", "+r):(this._loweredHeaders[i]=e,this._headers[e]=r))},n.prototype.send=function(e){if(this.readyState!==n.OPENED)throw new t("XHR readyState must be OPENED");if(this._request)throw new t("send() already called");switch(this._url.protocol){case"file:":this._sendFile(e);break;case"http:":case"https:":this._sendHttp(e);break;default:throw new r("Unsupported protocol "+this._url.protocol)}},n.prototype.abort=function(){this._request&&(this._request.abort(),this._setError(),this._dispatchProgress("abort"),this._dispatchProgress("loadend"))},n.prototype.getResponseHeader=function(e){var t;return this._responseHeaders&&(t=e.toLowerCase())in this._responseHeaders?this._responseHeaders[t]:null},n.prototype.getAllResponseHeaders=function(){var e,t;return this._responseHeaders?function(){var n,r;for(e in r=[],n=this._responseHeaders)t=n[e],r.push(e+": "+t);return r}.call(this).join("\r\n"):""},n.prototype.overrideMimeType=function(e){if(this.readyState===n.LOADING||this.readyState===n.DONE)throw new t("overrideMimeType() not allowed in LOADING or DONE");this._mimeOverride=e.toLowerCase()},n.prototype.nodejsSet=function(e){var t;if("httpAgent"in e&&(this.nodejsHttpAgent=e.httpAgent),"httpsAgent"in e&&(this.nodejsHttpsAgent=e.httpsAgent),"baseUrl"in e){if(null!==(t=e.baseUrl)&&!f.parse(t,!1,!0).protocol)throw new s("baseUrl must be an absolute URL");this.nodejsBaseUrl=t}},n.nodejsSet=function(e){n.prototype.nodejsSet(e)},n.prototype.UNSENT=0,n.UNSENT=0,n.prototype.OPENED=1,n.OPENED=1,n.prototype.HEADERS_RECEIVED=2,n.HEADERS_RECEIVED=2,n.prototype.LOADING=3,n.LOADING=3,n.prototype.DONE=4,n.DONE=4,n.prototype.nodejsHttpAgent=l.globalAgent,n.prototype.nodejsHttpsAgent=h.globalAgent,n.prototype.nodejsBaseUrl=null,n.prototype._restrictedMethods={CONNECT:!0,TRACE:!0,TRACK:!0},n.prototype._restrictedHeaders={"accept-charset":!0,"accept-encoding":!0,"access-control-request-headers":!0,"access-control-request-method":!0,connection:!0,"content-length":!0,cookie:!0,cookie2:!0,date:!0,dnt:!0,expect:!0,host:!0,"keep-alive":!0,origin:!0,referer:!0,te:!0,trailer:!0,"transfer-encoding":!0,upgrade:!0,"user-agent":!0,via:!0},n.prototype._privateHeaders={"set-cookie":!0,"set-cookie2":!0},n.prototype._userAgent="Mozilla/5.0 ("+p.type()+" "+p.arch()+") node.js/"+process.versions.node+" v8/"+process.versions.v8,n.prototype._setReadyState=function(e){var t;this.readyState=e,t=new i("readystatechange"),this.dispatchEvent(t)},n.prototype._sendFile=function(){if("GET"!==this._url.method)throw new r("The file protocol only supports GET");throw new Error("Protocol file: not implemented")},n.prototype._sendHttp=function(e){if(this._sync)throw new Error("Synchronous XHR processing not implemented");null==e||"GET"!==this._method&&"HEAD"!==this._method?e||(e=""):(console.warn("Discarding entity body for "+this._method+" requests"),e=null),this.upload._setData(e),this._finalizeHeaders(),this._sendHxxpRequest()},n.prototype._sendHxxpRequest=function(){var e,t,n,r;"http:"===this._url.protocol?(t=l,e=this.nodejsHttpAgent):(t=h,e=this.nodejsHttpsAgent),n=t.request({hostname:this._url.hostname,port:this._url.port,path:this._url.path,auth:this._url.auth,method:this._method,headers:this._headers,agent:e}),this._request=n,this.timeout&&n.setTimeout(this.timeout,(r=this,function(){return r._onHttpTimeout(n)})),n.on("response",function(e){return function(t){return e._onHttpResponse(n,t)}}(this)),n.on("error",function(e){return function(t){return e._onHttpRequestError(n,t)}}(this)),this.upload._startUpload(n),this._request===n&&this._dispatchProgress("loadstart")},n.prototype._finalizeHeaders=function(){this._headers.Connection="keep-alive",this._headers.Host=this._url.host,this._anonymous&&(this._headers.Referer="about:blank"),this._headers["User-Agent"]=this._userAgent,this.upload._finalizeHeaders(this._headers,this._loweredHeaders)},n.prototype._onHttpResponse=function(e,t){var r;if(this._request===e){switch(t.statusCode){case 301:case 302:case 303:case 307:case 308:return this._url=this._parseUrl(t.headers.location),this._method="GET","content-type"in this._loweredHeaders&&(delete this._headers[this._loweredHeaders["content-type"]],delete this._loweredHeaders["content-type"]),"Content-Type"in this._headers&&delete this._headers["Content-Type"],delete this._headers["Content-Length"],this.upload._reset(),this._finalizeHeaders(),void this._sendHxxpRequest()}var i;return this._response=t,this._response.on("data",(i=this,function(e){return i._onHttpResponseData(t,e)})),this._response.on("end",function(e){return function(){return e._onHttpResponseEnd(t)}}(this)),this._response.on("close",function(e){return function(){return e._onHttpResponseClose(t)}}(this)),this.responseURL=this._url.href.split("#")[0],this.status=this._response.statusCode,this.statusText=l.STATUS_CODES[this.status],this._parseResponseHeaders(t),(r=this._responseHeaders["content-length"])?(this._totalBytes=parseInt(r),this._lengthComputable=!0):this._lengthComputable=!1,this._setReadyState(n.HEADERS_RECEIVED)}},n.prototype._onHttpResponseData=function(e,t){if(this._response===e)return this._responseParts.push(t),this._loadedBytes+=t.length,this.readyState!==n.LOADING&&this._setReadyState(n.LOADING),this._dispatchProgress("progress")},n.prototype._onHttpResponseEnd=function(e){if(this._response===e)return this._parseResponse(),this._request=null,this._response=null,this._setReadyState(n.DONE),this._dispatchProgress("load"),this._dispatchProgress("loadend")},n.prototype._onHttpResponseClose=function(e){var t;if(this._response===e)return t=this._request,this._setError(),t.abort(),this._setReadyState(n.DONE),this._dispatchProgress("error"),this._dispatchProgress("loadend")},n.prototype._onHttpTimeout=function(e){if(this._request===e)return this._setError(),e.abort(),this._setReadyState(n.DONE),this._dispatchProgress("timeout"),this._dispatchProgress("loadend")},n.prototype._onHttpRequestError=function(e,t){if(this._request===e)return this._setError(),e.abort(),this._setReadyState(n.DONE),this._dispatchProgress("error"),this._dispatchProgress("loadend")},n.prototype._dispatchProgress=function(e){var t;(t=new i(e)).lengthComputable=this._lengthComputable,t.loaded=this._loadedBytes,t.total=this._totalBytes,this.dispatchEvent(t)},n.prototype._setError=function(){this._request=null,this._response=null,this._responseHeaders=null,this._responseParts=null},n.prototype._parseUrl=function(e){var t,n,r,i,o;return t=null===this.nodejsBaseUrl?e:f.resolve(this.nodejsBaseUrl,e),(o=f.parse(t,!1,!0)).hash=null,o.auth&&(void 0!==i&&null!==i||void 0!==r&&null!==r)&&(-1===(n=o.auth.indexOf(":"))?i||(i=o.auth):(i||(i=o.substring(0,n)),r||(r=o.substring(n+1)))),(i||r)&&(o.auth=i+":"+r),o},n.prototype._parseResponseHeaders=function(e){var t,n,r,i;for(n in this._responseHeaders={},r=e.headers)i=r[n],t=n.toLowerCase(),this._privateHeaders[t]||(null!==this._mimeOverride&&"content-type"===t&&(i=this._mimeOverride),this._responseHeaders[t]=i);null===this._mimeOverride||"content-type"in this._responseHeaders||(this._responseHeaders["content-type"]=this._mimeOverride)},n.prototype._parseResponse=function(){var e,t,n,r,i,o;switch(t=Buffer.concat?Buffer.concat(this._responseParts):this._concatBuffers(this._responseParts),this._responseParts=null,this.responseType){case"text":this._parseTextResponse(t);break;case"json":this.responseText=null;try{this.response=JSON.parse(t.toString("utf-8"))}catch(e){e,this.response=null}break;case"buffer":this.responseText=null,this.response=t;break;case"arraybuffer":for(this.responseText=null,e=new ArrayBuffer(t.length),o=new Uint8Array(e),n=r=0,i=t.length;0<=i?r<i:r>i;n=0<=i?++r:--r)o[n]=t[n];this.response=e;break;default:this._parseTextResponse(t)}},n.prototype._parseTextResponse=function(e){try{this.responseText=e.toString(this._parseResponseEncoding())}catch(t){t,this.responseText=e.toString("binary")}this.response=this.responseText},n.prototype._parseResponseEncoding=function(){var e,t;return null,(e=this._responseHeaders["content-type"])&&(t=/\;\s*charset\=(.*)$/.exec(e))?t[1]:"utf-8"},n.prototype._concatBuffers=function(e){var t,n,r,i,o,s,a;if(0===e.length)return new Buffer(0);if(1===e.length)return e[0];for(s=0,n=0,i=e.length;n<i;n++)s+=(t=e[n]).length;for(a=new Buffer(s),s=0,r=0,o=e.length;r<o;r++)(t=e[r]).copy(a,s),s+=t.length;return a},n}(),e.exports=a,a.XMLHttpRequest=a,o=function(e){function t(){t.__super__.constructor.apply(this,arguments)}return T(t,e),t}(Error),a.SecurityError=o,t=function(e){function t(){t.__super__.constructor.apply(this,arguments)}return T(t,e),t}(Error),t=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return T(t,e),t}(Error),a.InvalidStateError=t,r=function(e){function t(){t.__super__.constructor.apply(this,arguments)}return T(t,e),t}(Error),a.SyntaxError=s,s=function(e){function t(){t.__super__.constructor.apply(this,arguments)}return T(t,e),t}(Error),i=function(){function e(e){this.type=e,this.target=null,this.currentTarget=null,this.lengthComputable=!1,this.loaded=0,this.total=0}return e.prototype.bubbles=!1,e.prototype.cancelable=!1,e.prototype.target=null,e.prototype.loaded=null,e.prototype.lengthComputable=null,e.prototype.total=null,e}(),a.ProgressEvent=i,c=function(e){function t(e){t.__super__.constructor.call(this),this._request=e,this._reset()}return T(t,u),t.prototype._reset=function(){this._contentType=null,this._body=null},t.prototype._setData=function(e){var t,n,r,i,o,s,a,u;if(void 0!==e&&null!==e)if("string"==typeof e)0!==e.length&&(this._contentType="text/plain;charset=UTF-8"),this._body=new Buffer(e,"utf8");else if(Buffer.isBuffer(e))this._body=e;else if(e instanceof ArrayBuffer){for(t=new Buffer(e.byteLength),u=new Uint8Array(e),n=r=0,s=e.byteLength;0<=s?r<s:r>s;n=0<=s?++r:--r)t[n]=u[n];this._body=t}else{if(!(e.buffer&&e.buffer instanceof ArrayBuffer))throw new Error("Unsupported send() data "+e);for(t=new Buffer(e.byteLength),o=e.byteOffset,u=new Uint8Array(e.buffer),n=i=0,a=e.byteLength;0<=a?i<a:i>a;n=0<=a?++i:--i)t[n]=u[n+o];this._body=t}},t.prototype._finalizeHeaders=function(e,t){this._contentType&&("content-type"in t||(e["Content-Type"]=this._contentType)),this._body&&(e["Content-Length"]=this._body.length.toString())},t.prototype._startUpload=function(e){this._body&&e.write(this._body),e.end()},t}(),a.XMLHttpRequestUpload=c}).call(this)},function(e,t,n){"use strict";var r=n(12),i=n(38),o=n(11),s=n(3),a=s.TAG_NAMES,u=s.NAMESPACES,c=e.exports=function(e){this.tokenizer=e,this.namespaceStack=[],this.namespaceStackTop=-1,this._enterNamespace(u.HTML)};c.prototype.getNextToken=function(){var e=this.tokenizer.getNextToken();if(e.type===r.START_TAG_TOKEN)this._handleStartTagToken(e);else if(e.type===r.END_TAG_TOKEN)this._handleEndTagToken(e);else if(e.type===r.NULL_CHARACTER_TOKEN&&this.inForeignContent)e.type=r.CHARACTER_TOKEN,e.chars=o.REPLACEMENT_CHARACTER;else if(this.skipNextNewLine&&(e.type!==r.HIBERNATION_TOKEN&&(this.skipNextNewLine=!1),e.type===r.WHITESPACE_CHARACTER_TOKEN&&"\n"===e.chars[0])){if(1===e.chars.length)return this.getNextToken();e.chars=e.chars.substr(1)}return e},c.prototype._enterNamespace=function(e){this.namespaceStackTop++,this.namespaceStack.push(e),this.inForeignContent=e!==u.HTML,this.currentNamespace=e,this.tokenizer.allowCDATA=this.inForeignContent},c.prototype._leaveCurrentNamespace=function(){this.namespaceStackTop--,this.namespaceStack.pop(),this.currentNamespace=this.namespaceStack[this.namespaceStackTop],this.inForeignContent=this.currentNamespace!==u.HTML,this.tokenizer.allowCDATA=this.inForeignContent},c.prototype._ensureTokenizerMode=function(e){e===a.TEXTAREA||e===a.TITLE?this.tokenizer.state=r.MODE.RCDATA:e===a.PLAINTEXT?this.tokenizer.state=r.MODE.PLAINTEXT:e===a.SCRIPT?this.tokenizer.state=r.MODE.SCRIPT_DATA:e!==a.STYLE&&e!==a.IFRAME&&e!==a.XMP&&e!==a.NOEMBED&&e!==a.NOFRAMES&&e!==a.NOSCRIPT||(this.tokenizer.state=r.MODE.RAWTEXT)},c.prototype._handleStartTagToken=function(e){var t=e.tagName;if(t===a.SVG?this._enterNamespace(u.SVG):t===a.MATH&&this._enterNamespace(u.MATHML),this.inForeignContent){if(i.causesExit(e))return void this._leaveCurrentNamespace();var n=this.currentNamespace;n===u.MATHML?i.adjustTokenMathMLAttrs(e):n===u.SVG&&(i.adjustTokenSVGTagName(e),i.adjustTokenSVGAttrs(e)),i.adjustTokenXMLAttrs(e),t=e.tagName,!e.selfClosing&&i.isIntegrationPoint(t,n,e.attrs)&&this._enterNamespace(u.HTML)}else t===a.PRE||t===a.TEXTAREA||t===a.LISTING?this.skipNextNewLine=!0:t===a.IMAGE&&(e.tagName=a.IMG),this._ensureTokenizerMode(t)},c.prototype._handleEndTagToken=function(e){var t=e.tagName;if(this.inForeignContent)(t===a.SVG&&this.currentNamespace===u.SVG||t===a.MATH&&this.currentNamespace===u.MATHML)&&this._leaveCurrentNamespace();else{var n=this.namespaceStack[this.namespaceStackTop-1];n===u.SVG&&i.SVG_TAG_NAMES_ADJUSTMENT_MAP[t]&&(t=i.SVG_TAG_NAMES_ADJUSTMENT_MAP[t]),i.isIntegrationPoint(t,n,e.attrs)&&this._leaveCurrentNamespace()}this.currentNamespace===u.SVG&&i.adjustTokenSVGTagName(e)}},function(e,t,n){"use strict";var r=n(7).Writable,i=n(2),o=e.exports=function(){r.call(this)};i.inherits(o,r),o.prototype._write=function(e,t,n){n()}},function(e,t,n){"use strict";var r=n(7).Transform,i=n(80),o=n(2).inherits,s=n(12),a=n(79),u=n(21),c={locationInfo:!1},l=e.exports=function(e){r.call(this),this.options=u(c,e),this.tokenizer=new s(e),this.parserFeedbackSimulator=new a(this.tokenizer),this.pendingText=null,this.currentTokenLocation=void 0,this.lastChunkWritten=!1,this.stopped=!1,this.pipe(new i)};o(l,r),l.prototype._transform=function(e,t,n){this.stopped||(this.tokenizer.write(e.toString("utf8"),this.lastChunkWritten),this._runParsingLoop()),this.push(e),n()},l.prototype._flush=function(e){e()},l.prototype.end=function(e,t,n){this.lastChunkWritten=!0,r.prototype.end.call(this,e,t,n)},l.prototype.stop=function(){this.stopped=!0},l.prototype._runParsingLoop=function(){do{var e=this.parserFeedbackSimulator.getNextToken();if(e.type===s.HIBERNATION_TOKEN)break;e.type===s.CHARACTER_TOKEN||e.type===s.WHITESPACE_CHARACTER_TOKEN||e.type===s.NULL_CHARACTER_TOKEN?(this.options.locationInfo&&(null===this.pendingText?this.currentTokenLocation=e.location:this.currentTokenLocation.endOffset=e.location.endOffset),this.pendingText=(this.pendingText||"")+e.chars):(this._emitPendingText(),this._handleToken(e))}while(!this.stopped&&e.type!==s.EOF_TOKEN)},l.prototype._handleToken=function(e){this.options.locationInfo&&(this.currentTokenLocation=e.location),e.type===s.START_TAG_TOKEN?this.emit("startTag",e.tagName,e.attrs,e.selfClosing,this.currentTokenLocation):e.type===s.END_TAG_TOKEN?this.emit("endTag",e.tagName,this.currentTokenLocation):e.type===s.COMMENT_TOKEN?this.emit("comment",e.data,this.currentTokenLocation):e.type===s.DOCTYPE_TOKEN&&this.emit("doctype",e.name,e.publicId,e.systemId,this.currentTokenLocation)},l.prototype._emitPendingText=function(){null!==this.pendingText&&(this.emit("text",this.pendingText,this.currentTokenLocation),this.pendingText=null)}},function(e,t,n){"use strict";var r=n(7).Readable,i=n(2).inherits,o=n(37),s=e.exports=function(e,t){r.call(this),this.serializer=new o(e,t),Object.defineProperty(this.serializer,"html",{get:function(){return""},set:this.push.bind(this)})};i(s,r),s.prototype._read=function(){this.serializer.serialize(),this.push(null)}},function(e,t,n){"use strict";var r=n(36),i=n(2).inherits,o=n(3).TAG_NAMES;i(e.exports=function(e){r.call(this,e),this.parser._insertFakeElement(o.HTML),this.parser._insertFakeElement(o.HEAD),this.parser.openElements.pop(),this.parser._insertFakeElement(o.BODY),this.parser._insertFakeElement(o.PRE),this.parser.treeAdapter.insertText(this.parser.openElements.current,"\n"),this.parser.switchToPlaintextParsing()},r)},function(e,t,n){"use strict";var r=n(22),i=n(3).DOCUMENT_MODE,o={element:1,text:3,cdata:4,comment:8},s={tagName:"name",childNodes:"children",parentNode:"parent",previousSibling:"prev",nextSibling:"next",nodeValue:"data"},a=function(e){for(var t in e)e.hasOwnProperty(t)&&(this[t]=e[t])};a.prototype={get firstChild(){var e=this.children;return e&&e[0]||null},get lastChild(){var e=this.children;return e&&e[e.length-1]||null},get nodeType(){return o[this.type]||o.element}},Object.keys(s).forEach(function(e){var t=s[e];Object.defineProperty(a.prototype,e,{get:function(){return this[t]||null},set:function(e){return this[t]=e,e}})}),t.createDocument=function(){return new a({type:"root",name:"root",parent:null,prev:null,next:null,children:[],"x-mode":i.NO_QUIRKS})},t.createDocumentFragment=function(){return new a({type:"root",name:"root",parent:null,prev:null,next:null,children:[]})},t.createElement=function(e,t,n){for(var r=Object.create(null),i=Object.create(null),o=Object.create(null),s=0;s<n.length;s++){var u=n[s].name;r[u]=n[s].value,i[u]=n[s].namespace,o[u]=n[s].prefix}return new a({type:"script"===e||"style"===e?e:"tag",name:e,namespace:t,attribs:r,"x-attribsNamespace":i,"x-attribsPrefix":o,children:[],parent:null,prev:null,next:null})},t.createCommentNode=function(e){return new a({type:"comment",data:e,parent:null,prev:null,next:null})};var u=function(e){return new a({type:"text",data:e,parent:null,prev:null,next:null})},c=t.appendChild=function(e,t){var n=e.children[e.children.length-1];n&&(n.next=t,t.prev=n),e.children.push(t),t.parent=e},l=t.insertBefore=function(e,t,n){var r=e.children.indexOf(n),i=n.prev;i&&(i.next=t,t.prev=i),n.prev=t,t.next=n,e.children.splice(r,0,t),t.parent=e};t.setTemplateContent=function(e,t){c(e,t)},t.getTemplateContent=function(e){return e.children[0]},t.setDocumentType=function(e,t,n,i){for(var o=r.serializeContent(t,n,i),s=null,u=0;u<e.children.length;u++)if("directive"===e.children[u].type&&"!doctype"===e.children[u].name){s=e.children[u];break}s?(s.data=o,s["x-name"]=t,s["x-publicId"]=n,s["x-systemId"]=i):c(e,new a({type:"directive",name:"!doctype",data:o,"x-name":t,"x-publicId":n,"x-systemId":i}))},t.setDocumentMode=function(e,t){e["x-mode"]=t},t.getDocumentMode=function(e){return e["x-mode"]},t.detachNode=function(e){if(e.parent){var t=e.parent.children.indexOf(e),n=e.prev,r=e.next;e.prev=null,e.next=null,n&&(n.next=r),r&&(r.prev=n),e.parent.children.splice(t,1),e.parent=null}},t.insertText=function(e,t){var n=e.children[e.children.length-1];n&&"text"===n.type?n.data+=t:c(e,u(t))},t.insertTextBefore=function(e,t,n){var r=e.children[e.children.indexOf(n)-1];r&&"text"===r.type?r.data+=t:l(e,u(t),n)},t.adoptAttributes=function(e,t){for(var n=0;n<t.length;n++){var r=t[n].name;void 0===e.attribs[r]&&(e.attribs[r]=t[n].value,e["x-attribsNamespace"][r]=t[n].namespace,e["x-attribsPrefix"][r]=t[n].prefix)}},t.getFirstChild=function(e){return e.children[0]},t.getChildNodes=function(e){return e.children},t.getParentNode=function(e){return e.parent},t.getAttrList=function(e){var t=[];for(var n in e.attribs)t.push({name:n,value:e.attribs[n],namespace:e["x-attribsNamespace"][n],prefix:e["x-attribsPrefix"][n]});return t},t.getTagName=function(e){return e.name},t.getNamespaceURI=function(e){return e.namespace},t.getTextNodeContent=function(e){return e.data},t.getCommentNodeContent=function(e){return e.data},t.getDocumentTypeNodeName=function(e){return e["x-name"]},t.getDocumentTypeNodePublicId=function(e){return e["x-publicId"]},t.getDocumentTypeNodeSystemId=function(e){return e["x-systemId"]},t.isTextNode=function(e){return"text"===e.type},t.isCommentNode=function(e){return"comment"===e.type},t.isDocumentTypeNode=function(e){return"directive"===e.type&&"!doctype"===e.name},t.isElementNode=function(e){return!!e.attribs}},function(e,t,n){"use strict";var r=n(39),i=n(12),o=n(3).TAG_NAMES;t.assign=function(e){var t=Object.getPrototypeOf(e),n=e.treeAdapter,s=null,a=null,u=null;function c(t,r){var o=t.__location;if(o)if(o.startTag||(o.startTag={line:o.line,col:o.col,startOffset:o.startOffset,endOffset:o.endOffset},o.attrs&&(o.startTag.attrs=o.attrs)),r.location){var s=r.location,a=n.getTagName(t),u=r.type===i.END_TAG_TOKEN&&a===r.tagName;u&&(o.endTag={line:s.line,col:s.col,startOffset:s.startOffset,endOffset:s.endOffset}),o.endOffset=u?s.endOffset:s.startOffset}else r.type===i.EOF_TOKEN&&(o.endOffset=e.tokenizer.preprocessor.sourcePos)}e._bootstrap=function(n,i){t._bootstrap.call(this,n,i),s=null,a=null,u=null,e.openElements.pop=function(){c(this.current,u),r.prototype.pop.call(this)},e.openElements.popAllUpToHtmlElement=function(){for(var e=this.stackTop;e>0;e--)c(this.items[e],u);r.prototype.popAllUpToHtmlElement.call(this)},e.openElements.remove=function(e){c(e,u),r.prototype.remove.call(this,e)}},e._runParsingLoop=function(n){t._runParsingLoop.call(this,n);for(var r=e.openElements.stackTop;r>=0;r--)c(e.openElements.items[r],u)},e._processTokenInForeignContent=function(e){u=e,t._processTokenInForeignContent.call(this,e)},e._processToken=function(e){if(u=e,t._processToken.call(this,e),e.type===i.END_TAG_TOKEN&&(e.tagName===o.HTML||e.tagName===o.BODY&&this.openElements.hasInScope(o.BODY)))for(var n=this.openElements.stackTop;n>=0;n--){var r=this.openElements.items[n];if(this.treeAdapter.getTagName(r)===e.tagName){c(r,e);break}}},e._setDocumentType=function(e){t._setDocumentType.call(this,e);for(var n=this.treeAdapter.getChildNodes(this.document),r=n.length,i=0;i<r;i++){var o=n[i];if(this.treeAdapter.isDocumentTypeNode(o)){o.__location=e.location;break}}},e._attachElementToTree=function(e){e.__location=s||null,s=null,t._attachElementToTree.call(this,e)},e._appendElement=function(e,n){s=e.location,t._appendElement.call(this,e,n)},e._insertElement=function(e,n){s=e.location,t._insertElement.call(this,e,n)},e._insertTemplate=function(e){s=e.location,t._insertTemplate.call(this,e),this.treeAdapter.getTemplateContent(this.openElements.current).__location=null},e._insertFakeRootElement=function(){t._insertFakeRootElement.call(this),this.openElements.current.__location=null},e._appendCommentNode=function(e,n){t._appendCommentNode.call(this,e,n);var r=this.treeAdapter.getChildNodes(n);r[r.length-1].__location=e.location},e._findFosterParentingLocation=function(){return a=t._findFosterParentingLocation.call(this)},e._insertCharacters=function(e){t._insertCharacters.call(this,e);var n=this._shouldFosterParentOnInsertion(),r=n&&a.parent||this.openElements.currentTmplContent||this.openElements.current,i=this.treeAdapter.getChildNodes(r),o=i[n&&a.beforeElement?i.indexOf(a.beforeElement)-1:i.length-1];o.__location?o.__location.endOffset=e.location.endOffset:o.__location=e.location}}},function(e,t,n){"use strict";var r=e.exports=function(e){this.length=0,this.entries=[],this.treeAdapter=e,this.bookmark=null};r.MARKER_ENTRY="MARKER_ENTRY",r.ELEMENT_ENTRY="ELEMENT_ENTRY",r.prototype._getNoahArkConditionCandidates=function(e){var t=[];if(this.length>=3)for(var n=this.treeAdapter.getAttrList(e).length,i=this.treeAdapter.getTagName(e),o=this.treeAdapter.getNamespaceURI(e),s=this.length-1;s>=0;s--){var a=this.entries[s];if(a.type===r.MARKER_ENTRY)break;var u=a.element,c=this.treeAdapter.getAttrList(u);this.treeAdapter.getTagName(u)===i&&this.treeAdapter.getNamespaceURI(u)===o&&c.length===n&&t.push({idx:s,attrs:c})}return t.length<3?[]:t},r.prototype._ensureNoahArkCondition=function(e){var t=this._getNoahArkConditionCandidates(e),n=t.length;if(n){for(var r=this.treeAdapter.getAttrList(e),i=r.length,o=Object.create(null),s=0;s<i;s++){var a=r[s];o[a.name]=a.value}for(s=0;s<i;s++)for(var u=0;u<n;u++){var c=t[u].attrs[s];if(o[c.name]!==c.value&&(t.splice(u,1),n--),t.length<3)return}for(s=n-1;s>=2;s--)this.entries.splice(t[s].idx,1),this.length--}},r.prototype.insertMarker=function(){this.entries.push({type:r.MARKER_ENTRY}),this.length++},r.prototype.pushElement=function(e,t){this._ensureNoahArkCondition(e),this.entries.push({type:r.ELEMENT_ENTRY,element:e,token:t}),this.length++},r.prototype.insertElementAfterBookmark=function(e,t){for(var n=this.length-1;n>=0&&this.entries[n]!==this.bookmark;n--);this.entries.splice(n+1,0,{type:r.ELEMENT_ENTRY,element:e,token:t}),this.length++},r.prototype.removeEntry=function(e){for(var t=this.length-1;t>=0;t--)if(this.entries[t]===e){this.entries.splice(t,1),this.length--;break}},r.prototype.clearToLastMarker=function(){for(;this.length;){var e=this.entries.pop();if(this.length--,e.type===r.MARKER_ENTRY)break}},r.prototype.getElementEntryInScopeWithTagName=function(e){for(var t=this.length-1;t>=0;t--){var n=this.entries[t];if(n.type===r.MARKER_ENTRY)return null;if(this.treeAdapter.getTagName(n.element)===e)return n}return null},r.prototype.getElementEntry=function(e){for(var t=this.length-1;t>=0;t--){var n=this.entries[t];if(n.type===r.ELEMENT_ENTRY&&n.element===e)return n}return null}},function(e,t,n){"use strict";e.exports=new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4e3,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,1e4,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13e3,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204])},function(e,t,n){"use strict";var r=n(11).CODE_POINTS;t.assign=function(e){var t=Object.getPrototypeOf(e),n=-1,i=-1,o=1,s=!1,a=0,u=-1,c=1;function l(e){e.location={line:o,col:i,startOffset:n,endOffset:-1}}e._consume=function(){var e=t._consume.call(this);return s&&(s=!1,c++,a=this.preprocessor.sourcePos),e===r.LINE_FEED&&(s=!0),u=this.preprocessor.sourcePos-a+1,e},e._unconsume=function(){t._unconsume.call(this),s=!1,u=this.preprocessor.sourcePos-a+1},e._createStartTagToken=function(){t._createStartTagToken.call(this),l(this.currentToken)},e._createEndTagToken=function(){t._createEndTagToken.call(this),l(this.currentToken)},e._createCommentToken=function(){t._createCommentToken.call(this),l(this.currentToken)},e._createDoctypeToken=function(e){t._createDoctypeToken.call(this,e),l(this.currentToken)},e._createCharacterToken=function(e,n){t._createCharacterToken.call(this,e,n),l(this.currentCharacterToken)},e._createAttr=function(e){t._createAttr.call(this,e),this.currentAttrLocation={line:c,col:u,startOffset:this.preprocessor.sourcePos,endOffset:-1}},e._leaveAttrName=function(e){t._leaveAttrName.call(this,e),this._attachCurrentAttrLocationInfo()},e._leaveAttrValue=function(e){t._leaveAttrValue.call(this,e),this._attachCurrentAttrLocationInfo()},e._attachCurrentAttrLocationInfo=function(){this.currentAttrLocation.endOffset=this.preprocessor.sourcePos,this.currentToken.location.attrs||(this.currentToken.location.attrs=Object.create(null)),this.currentToken.location.attrs[this.currentAttr.name]=this.currentAttrLocation},e._emitCurrentToken=function(){this.currentCharacterToken&&(this.currentCharacterToken.location.endOffset=this.currentToken.location.startOffset),this.currentToken.location.endOffset=this.preprocessor.sourcePos+1,t._emitCurrentToken.call(this)},e._emitCurrentCharacterToken=function(){this.currentCharacterToken&&-1===this.currentCharacterToken.location.endOffset&&(this.currentCharacterToken.location.endOffset=this.preprocessor.sourcePos),t._emitCurrentCharacterToken.call(this)},Object.keys(t.MODE).map(function(e){return t.MODE[e]}).forEach(function(r){e[r]=function(e){n=this.preprocessor.sourcePos,o=c,i=u,t[r].call(this,e)}})}},function(e,t,n){"use strict";var r=n(11).CODE_POINTS;var i=e.exports=function(){this.html=null,this.pos=-1,this.lastGapPos=-1,this.lastCharPos=-1,this.droppedBufferSize=0,this.gapStack=[],this.skipNextNewLine=!1,this.lastChunkWritten=!1,this.endOfChunkHit=!1,this.bufferWaterline=65536};Object.defineProperty(i.prototype,"sourcePos",{get:function(){return this.droppedBufferSize+this.pos}}),i.prototype.dropParsedChunk=function(){this.pos>this.bufferWaterline&&(this.lastCharPos-=this.pos,this.droppedBufferSize+=this.pos,this.html=this.html.substring(this.pos),this.pos=0,this.lastGapPos=-1,this.gapStack=[])},i.prototype._addGap=function(){this.gapStack.push(this.lastGapPos),this.lastGapPos=this.pos},i.prototype._processHighRangeCodePoint=function(e){if(this.pos!==this.lastCharPos){var t=this.html.charCodeAt(this.pos+1);i=t,(n=e)>=55296&&n<=56319&&i>=56320&&i<=57343&&(this.pos++,e=function(e,t){return 1024*(e-55296)+9216+t}(e,t),this._addGap())}else if(!this.lastChunkWritten)return this.endOfChunkHit=!0,r.EOF;var n,i;return e},i.prototype.write=function(e,t){this.html?this.html+=e:this.html=e,this.lastCharPos=this.html.length-1,this.endOfChunkHit=!1,this.lastChunkWritten=t},i.prototype.insertHtmlAtCurrentPos=function(e){this.html=this.html.substring(0,this.pos+1)+e+this.html.substring(this.pos+1,this.html.length),this.lastCharPos=this.html.length-1,this.endOfChunkHit=!1},i.prototype.advance=function(){if(this.pos++,this.pos>this.lastCharPos)return this.lastChunkWritten||(this.endOfChunkHit=!0),r.EOF;var e=this.html.charCodeAt(this.pos);return this.skipNextNewLine&&e===r.LINE_FEED?(this.skipNextNewLine=!1,this._addGap(),this.advance()):e===r.CARRIAGE_RETURN?(this.skipNextNewLine=!0,r.LINE_FEED):(this.skipNextNewLine=!1,e>=55296?this._processHighRangeCodePoint(e):e)},i.prototype.retreat=function(){this.pos===this.lastGapPos&&(this.lastGapPos=this.gapStack.pop(),this.pos--),this.pos--}},function(e,t,n){e.exports=n(1)(4)},function(e,t,n){"use strict";var r=n(90);t.toPromise=function(e){var t=this;if(e||(r.root.Rx&&r.root.Rx.config&&r.root.Rx.config.Promise?e=r.root.Rx.config.Promise:r.root.Promise&&(e=r.root.Promise)),!e)throw new Error("no Promise impl found");return new e(function(e,n){var r;t.subscribe(function(e){return r=e},function(e){return n(e)},function(){return e(r)})})}},function(e,t,n){e.exports=n(1)(82)},function(e,t,n){e.exports=n(1)(6)},function(e,t,n){!function(e,t,n,r){"use strict";var i=function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);function r(){this.constructor=e}e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},o=function(){function e(e,t,n){this.delegate=e,this._engine=t,this._zone=n}return e.prototype.createRenderer=function(e,t){var n=this,r=this.delegate.createRenderer(e,t);if(!(e&&t&&t.data&&t.data.animation))return r;var i=t.id,o=t.data.animation;return o.forEach(function(e){return n._engine.registerTrigger(e,a(i,e.name))}),new s(r,this._engine,this._zone,i)},e}();o.decorators=[{type:t.Injectable}],o.ctorParameters=function(){return[{type:t.RendererFactory2},{type:r.ɵAnimationEngine},{type:t.NgZone}]};var s=function(){function e(e,t,n,r){this.delegate=e,this._engine=t,this._zone=n,this._namespaceId=r,this.destroyNode=null,this._flushPromise=null,this.destroyNode=this.delegate.destroyNode?function(t){return e.destroyNode(t)}:null}return Object.defineProperty(e.prototype,"data",{get:function(){return this.delegate.data},enumerable:!0,configurable:!0}),e.prototype.destroy=function(){this.delegate.destroy()},e.prototype.createElement=function(e,t){return this.delegate.createElement(e,t)},e.prototype.createComment=function(e){return this.delegate.createComment(e)},e.prototype.createText=function(e){return this.delegate.createText(e)},e.prototype.selectRootElement=function(e){return this.delegate.selectRootElement(e)},e.prototype.parentNode=function(e){return this.delegate.parentNode(e)},e.prototype.nextSibling=function(e){return this.delegate.nextSibling(e)},e.prototype.setAttribute=function(e,t,n,r){this.delegate.setAttribute(e,t,n,r)},e.prototype.removeAttribute=function(e,t,n){this.delegate.removeAttribute(e,t,n)},e.prototype.addClass=function(e,t){this.delegate.addClass(e,t)},e.prototype.removeClass=function(e,t){this.delegate.removeClass(e,t)},e.prototype.setStyle=function(e,t,n,r){this.delegate.setStyle(e,t,n,r)},e.prototype.removeStyle=function(e,t,n){this.delegate.removeStyle(e,t,n)},e.prototype.setValue=function(e,t){this.delegate.setValue(e,t)},e.prototype.appendChild=function(e,t){var n=this;this._engine.onInsert(t,function(){return n.delegate.appendChild(e,t)}),this._queueFlush()},e.prototype.insertBefore=function(e,t,n){var r=this;this._engine.onInsert(t,function(){return r.delegate.insertBefore(e,t,n)}),this._queueFlush()},e.prototype.removeChild=function(e,t){var n=this;this._engine.onRemove(t,function(){n.delegate.parentNode(t)&&n.delegate.removeChild(e,t)}),this._queueFlush()},e.prototype.setProperty=function(e,t,n){"@"==t.charAt(0)?(this._engine.setProperty(e,a(this._namespaceId,t.substr(1)),n),this._queueFlush()):this.delegate.setProperty(e,t,n)},e.prototype.listen=function(e,t,n){var r=this;if("@"==t.charAt(0)){var i=function(e){switch(e){case"body":return document.body;case"document":return document;case"window":return window;default:return e}}(e),o=function(e){var t=e.indexOf("."),n=e.substring(0,t),r=e.substr(t+1);return[n,r]}(t.substr(1)),s=o[0],u=o[1];return this._engine.listen(i,a(this._namespaceId,s),u,function(e){var t,i=e;i.triggerName&&(i.triggerName=(t=r._namespaceId,i.triggerName.replace(t+"#",""))),r._zone.run(function(){return n(e)})})}return this.delegate.listen(e,t,n)},e.prototype._queueFlush=function(){var e=this;this._flushPromise||this._zone.runOutsideAngular(function(){e._flushPromise=Promise.resolve(null).then(function(){e._flushPromise=null,e._engine.flush()})})},e}();function a(e,t){return e+"#"+t}var u=function(e){function t(t,n){return e.call(this,t,n)||this}return i(t,e),t}(r.ɵDomAnimationEngine);function c(){return r.ɵsupportsWebAnimations()?new r.ɵWebAnimationsDriver:new r.ɵNoopAnimationDriver}function l(){return new r.ɵWebAnimationsStyleNormalizer}function h(e,t,n){return new o(e,t,n)}u.decorators=[{type:t.Injectable}],u.ctorParameters=function(){return[{type:r.AnimationDriver},{type:r.ɵAnimationStyleNormalizer}]};var p=[{provide:r.AnimationDriver,useFactory:c},{provide:r.ɵAnimationStyleNormalizer,useFactory:l},{provide:r.ɵAnimationEngine,useClass:u},{provide:t.RendererFactory2,useFactory:h,deps:[n.ɵDomRendererFactory2,r.ɵAnimationEngine,t.NgZone]}],f=[{provide:r.ɵAnimationEngine,useClass:r.ɵNoopAnimationEngine},{provide:t.RendererFactory2,useFactory:h,deps:[n.ɵDomRendererFactory2,r.ɵAnimationEngine,t.NgZone]}],T=function(){};T.decorators=[{type:t.NgModule,args:[{imports:[n.BrowserModule],providers:p}]}],T.ctorParameters=function(){return[]};var d=function(){};d.decorators=[{type:t.NgModule,args:[{imports:[n.BrowserModule],providers:f}]}],d.ctorParameters=function(){return[]},e.BrowserAnimationsModule=T,e.NoopAnimationsModule=d,e.ɵAnimationRenderer=s,e.ɵAnimationRendererFactory=o,e.ɵe=p,e.ɵf=f,e.ɵa=u,e.ɵc=l,e.ɵd=h,e.ɵb=c,Object.defineProperty(e,"__esModule",{value:!0})}(t,n(0),n(43),n(42))},function(e,t,n){e.exports=n(1)(20)},function(e,t,n){e.exports=n(1)(7)},function(e,t,n){e.exports=n(1)(36)},function(e,t,n){"use strict";var r=n(45),i=n(44);r.Observable.prototype.first=i.first},function(e,t,n){e.exports=n(1)(47)},function(e,t){var n;!function(e){"use strict";var t,n=Object.prototype.hasOwnProperty,r="function"==typeof Symbol,i=r&&void 0!==Symbol.toPrimitive?Symbol.toPrimitive:"@@toPrimitive",o=r&&void 0!==Symbol.iterator?Symbol.iterator:"@@iterator";!function(e){var t="function"==typeof Object.create,r={__proto__:[]}instanceof Array,i=!t&&!r;e.create=t?function(){return M(Object.create(null))}:r?function(){return M({__proto__:null})}:function(){return M({})},e.has=i?function(e,t){return n.call(e,t)}:function(e,t){return t in e},e.get=i?function(e,t){return n.call(e,t)?e[t]:void 0}:function(e,t){return e[t]}}(t||(t={}));var s=Object.getPrototypeOf(Function),a="object"==typeof process&&process.env&&"true"===process.env.REFLECT_METADATA_USE_MAP_POLYFILL,u=a||"function"!=typeof Map||"function"!=typeof Map.prototype.entries?function(){var e={},t=[],n=function(){function e(e,t,n){this._index=0,this._keys=e,this._values=t,this._selector=n}return e.prototype["@@iterator"]=function(){return this},e.prototype[o]=function(){return this},e.prototype.next=function(){var e=this._index;if(e>=0&&e<this._keys.length){var n=this._selector(this._keys[e],this._values[e]);return e+1>=this._keys.length?(this._index=-1,this._keys=t,this._values=t):this._index++,{value:n,done:!1}}return{value:void 0,done:!0}},e.prototype.throw=function(e){throw this._index>=0&&(this._index=-1,this._keys=t,this._values=t),e},e.prototype.return=function(e){return this._index>=0&&(this._index=-1,this._keys=t,this._values=t),{value:e,done:!0}},e}();return function(){function t(){this._keys=[],this._values=[],this._cacheKey=e,this._cacheIndex=-2}return Object.defineProperty(t.prototype,"size",{get:function(){return this._keys.length},enumerable:!0,configurable:!0}),t.prototype.has=function(e){return this._find(e,!1)>=0},t.prototype.get=function(e){var t=this._find(e,!1);return t>=0?this._values[t]:void 0},t.prototype.set=function(e,t){var n=this._find(e,!0);return this._values[n]=t,this},t.prototype.delete=function(t){var n=this._find(t,!1);if(n>=0){for(var r=this._keys.length,i=n+1;i<r;i++)this._keys[i-1]=this._keys[i],this._values[i-1]=this._values[i];return this._keys.length--,this._values.length--,t===this._cacheKey&&(this._cacheKey=e,this._cacheIndex=-2),!0}return!1},t.prototype.clear=function(){this._keys.length=0,this._values.length=0,this._cacheKey=e,this._cacheIndex=-2},t.prototype.keys=function(){return new n(this._keys,this._values,r)},t.prototype.values=function(){return new n(this._keys,this._values,i)},t.prototype.entries=function(){return new n(this._keys,this._values,s)},t.prototype["@@iterator"]=function(){return this.entries()},t.prototype[o]=function(){return this.entries()},t.prototype._find=function(e,t){return this._cacheKey!==e&&(this._cacheIndex=this._keys.indexOf(this._cacheKey=e)),this._cacheIndex<0&&t&&(this._cacheIndex=this._keys.length,this._keys.push(e),this._values.push(void 0)),this._cacheIndex},t}();function r(e,t){return e}function i(e,t){return t}function s(e,t){return[e,t]}}():Map,c=a||"function"!=typeof Set||"function"!=typeof Set.prototype.entries?function(){function e(){this._map=new u}return Object.defineProperty(e.prototype,"size",{get:function(){return this._map.size},enumerable:!0,configurable:!0}),e.prototype.has=function(e){return this._map.has(e)},e.prototype.add=function(e){return this._map.set(e,e),this},e.prototype.delete=function(e){return this._map.delete(e)},e.prototype.clear=function(){this._map.clear()},e.prototype.keys=function(){return this._map.keys()},e.prototype.values=function(){return this._map.values()},e.prototype.entries=function(){return this._map.entries()},e.prototype["@@iterator"]=function(){return this.keys()},e.prototype[o]=function(){return this.keys()},e}():Set,l=new(a||"function"!=typeof WeakMap?function(){var e=16,r=t.create(),i=o();return function(){function e(){this._key=o()}return e.prototype.has=function(e){var n=s(e,!1);return void 0!==n&&t.has(n,this._key)},e.prototype.get=function(e){var n=s(e,!1);return void 0!==n?t.get(n,this._key):void 0},e.prototype.set=function(e,t){var n=s(e,!0);return n[this._key]=t,this},e.prototype.delete=function(e){var t=s(e,!1);return void 0!==t&&delete t[this._key]},e.prototype.clear=function(){this._key=o()},e}();function o(){var e;do{e="@@WeakMap@@"+u()}while(t.has(r,e));return r[e]=!0,e}function s(e,r){if(!n.call(e,i)){if(!r)return;Object.defineProperty(e,i,{value:t.create()})}return e[i]}function a(e,t){for(var n=0;n<t;++n)e[n]=255*Math.random()|0;return e}function u(){var t=function(e){if("function"==typeof Uint8Array)return"undefined"!=typeof crypto?crypto.getRandomValues(new Uint8Array(e)):"undefined"!=typeof msCrypto?msCrypto.getRandomValues(new Uint8Array(e)):a(new Uint8Array(e),e);return a(new Array(e),e)}(e);t[6]=79&t[6]|64,t[8]=191&t[8]|128;for(var n="",r=0;r<e;++r){var i=t[r];4!==r&&6!==r&&8!==r||(n+="-"),i<16&&(n+="0"),n+=i.toString(16).toLowerCase()}return n}}():WeakMap);function h(e,t,n){var r=l.get(e);if(m(r)){if(!n)return;r=new u,l.set(e,r)}var i=r.get(t);if(m(i)){if(!n)return;i=new u,r.set(t,i)}return i}function p(e,t,n){var r=h(t,n,!1);return!m(r)&&!!r.has(e)}function f(e,t,n){var r=h(t,n,!1);if(!m(r))return r.get(e)}function T(e,t,n,r){h(n,r,!0).set(e,t)}function d(e,t){var n=[],r=h(e,t,!1);if(m(r))return n;for(var i=function(e){var t=C(e,o);if(!S(t))throw new TypeError;var n=t.call(e);if(!A(n))throw new TypeError;return n}(r.keys()),s=0;;){var a=O(i);if(!a)return n.length=s,n;var u=a.value;try{n[s]=u}catch(e){try{R(i)}finally{throw e}}s++}}function E(e){if(null===e)return 1;switch(typeof e){case"undefined":return 0;case"boolean":return 2;case"string":return 3;case"symbol":return 4;case"number":return 5;case"object":return null===e?1:6;default:return 6}}function m(e){return void 0===e}function _(e){return null===e}function A(e){return"object"==typeof e?null!==e:"function"==typeof e}function g(e,t){switch(E(e)){case 0:case 1:case 2:case 3:case 4:case 5:return e}var n=3===t?"string":5===t?"number":"default",r=C(e,i);if(void 0!==r){var o=r.call(e,n);if(A(o))throw new TypeError;return o}return function(e,t){if("string"===t){var n=e.toString;if(S(n)){var r=n.call(e);if(!A(r))return r}var i=e.valueOf;if(S(i)){var r=i.call(e);if(!A(r))return r}}else{var i=e.valueOf;if(S(i)){var r=i.call(e);if(!A(r))return r}var o=e.toString;if(S(o)){var r=o.call(e);if(!A(r))return r}}throw new TypeError}(e,"default"===n?"number":n)}function y(e){var t=g(e,3);return"symbol"==typeof t?t:function(e){return""+e}(t)}function N(e){return Array.isArray?Array.isArray(e):e instanceof Object?e instanceof Array:"[object Array]"===Object.prototype.toString.call(e)}function S(e){return"function"==typeof e}function v(e){return"function"==typeof e}function C(e,t){var n=e[t];if(void 0!==n&&null!==n){if(!S(n))throw new TypeError;return n}}function O(e){var t=e.next();return!t.done&&t}function R(e){var t=e.return;t&&t.call(e)}function b(e){var t=Object.getPrototypeOf(e);if("function"!=typeof e||e===s)return t;if(t!==s)return t;var n=e.prototype,r=n&&Object.getPrototypeOf(n);if(null==r||r===Object.prototype)return t;var i=r.constructor;return"function"!=typeof i?t:i===e?t:i}function M(e){return e.__=void 0,delete e.__,e}e.decorate=function(e,t,n,r){if(m(n)){if(!N(e))throw new TypeError;if(!v(t))throw new TypeError;return function(e,t){for(var n=e.length-1;n>=0;--n){var r=e[n],i=r(t);if(!m(i)&&!_(i)){if(!v(i))throw new TypeError;t=i}}return t}(e,t)}if(!N(e))throw new TypeError;if(!A(t))throw new TypeError;if(!A(r)&&!m(r)&&!_(r))throw new TypeError;return _(r)&&(r=void 0),function(e,t,n,r){for(var i=e.length-1;i>=0;--i){var o=e[i],s=o(t,n,r);if(!m(s)&&!_(s)){if(!A(s))throw new TypeError;r=s}}return r}(e,t,n=y(n),r)},e.metadata=function(e,t){return function(n,r){if(!A(n))throw new TypeError;if(!m(r)&&!function(e){switch(E(e)){case 3:case 4:return!0;default:return!1}}(r))throw new TypeError;T(e,t,n,r)}},e.defineMetadata=function(e,t,n,r){if(!A(n))throw new TypeError;return m(r)||(r=y(r)),T(e,t,n,r)},e.hasMetadata=function(e,t,n){if(!A(t))throw new TypeError;return m(n)||(n=y(n)),function e(t,n,r){var i=p(t,n,r);if(i)return!0;var o=b(n);return!_(o)&&e(t,o,r)}(e,t,n)},e.hasOwnMetadata=function(e,t,n){if(!A(t))throw new TypeError;return m(n)||(n=y(n)),p(e,t,n)},e.getMetadata=function(e,t,n){if(!A(t))throw new TypeError;return m(n)||(n=y(n)),function e(t,n,r){var i=p(t,n,r);if(i)return f(t,n,r);var o=b(n);return _(o)?void 0:e(t,o,r)}(e,t,n)},e.getOwnMetadata=function(e,t,n){if(!A(t))throw new TypeError;return m(n)||(n=y(n)),f(e,t,n)},e.getMetadataKeys=function(e,t){if(!A(e))throw new TypeError;return m(t)||(t=y(t)),function e(t,n){var r=d(t,n),i=b(t);if(null===i)return r;var o=e(i,n);if(o.length<=0)return r;if(r.length<=0)return o;for(var s=new c,a=[],u=0,l=r;u<l.length;u++){var h=l[u],p=s.has(h);p||(s.add(h),a.push(h))}for(var f=0,T=o;f<T.length;f++){var h=T[f],p=s.has(h);p||(s.add(h),a.push(h))}return a}(e,t)},e.getOwnMetadataKeys=function(e,t){if(!A(e))throw new TypeError;return m(t)||(t=y(t)),d(e,t)},e.deleteMetadata=function(e,t,n){if(!A(t))throw new TypeError;m(n)||(n=y(n));var r=h(t,n,!1);if(m(r))return!1;if(!r.delete(e))return!1;if(r.size>0)return!0;var i=l.get(t);return i.delete(n),i.size>0||(l.delete(t),!0)},function(t){if(void 0!==t.Reflect){if(t.Reflect!==e)for(var r in e)n.call(e,r)&&(t.Reflect[r]=e[r])}else t.Reflect=e}("undefined"!=typeof global?global:"undefined"!=typeof self?self:Function("return this;")())}(n||(n={}))}]));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,